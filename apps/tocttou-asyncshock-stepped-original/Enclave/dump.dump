
encl.so:     file format elf64-x86-64


Disassembly of section .plt:

0000000000001000 <.plt>:
    1000:	ff 35 b2 bf 00 00    	pushq  0xbfb2(%rip)        # cfb8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1006:	ff 25 b4 bf 00 00    	jmpq   *0xbfb4(%rip)        # cfc0 <_GLOBAL_OFFSET_TABLE_+0x10>
    100c:	0f 1f 40 00          	nopl   0x0(%rax)

Disassembly of section .plt.got:

0000000000001010 <_Z9pcl_entryPvS_@plt>:
    1010:	ff 25 ba bf 00 00    	jmpq   *0xbfba(%rip)        # cfd0 <_Z9pcl_entryPvS_>
    1016:	66 90                	xchg   %ax,%ax

0000000000001018 <ippcpSetCpuFeatures@plt>:
    1018:	ff 25 c2 bf 00 00    	jmpq   *0xbfc2(%rip)        # cfe0 <ippcpSetCpuFeatures>
    101e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001020 <trts_access_version_dummy1>:
    1020:	48 8d 05 e9 bf 00 00 	lea    0xbfe9(%rip),%rax        # d010 <sgx_trts_version>
    1027:	c6 00 73             	movb   $0x73,(%rax)
    102a:	c3                   	retq   
    102b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001030 <tstdc_access_version_dummy1>:
    1030:	c6 05 09 c0 00 00 73 	movb   $0x73,0xc009(%rip)        # d040 <sgx_tstdc_version>
    1037:	48 8d 05 02 c0 00 00 	lea    0xc002(%rip),%rax        # d040 <sgx_tstdc_version>
    103e:	c3                   	retq   
    103f:	90                   	nop

0000000000001040 <tcrypto_access_version_dummy1>:
    1040:	c6 05 19 c0 00 00 73 	movb   $0x73,0xc019(%rip)        # d060 <sgx_tcrypto_version>
    1047:	48 8d 05 12 c0 00 00 	lea    0xc012(%rip),%rax        # d060 <sgx_tcrypto_version>
    104e:	c3                   	retq   
    104f:	90                   	nop

0000000000001050 <tservice_access_version_dummy1>:
    1050:	c6 05 29 c0 00 00 73 	movb   $0x73,0xc029(%rip)        # d080 <sgx_tservice_version>
    1057:	48 8d 05 22 c0 00 00 	lea    0xc022(%rip),%rax        # d080 <sgx_tservice_version>
    105e:	c3                   	retq   

000000000000105f <ecall_setup>:
    105f:	48 83 ec 18          	sub    $0x18,%rsp
    1063:	be 04 00 00 00       	mov    $0x4,%esi
    1068:	31 c0                	xor    %eax,%eax
    106a:	48 8d 7c 24 0e       	lea    0xe(%rsp),%rdi
    106f:	e8 dc 04 00 00       	callq  1550 <sgx_read_rand>
    1074:	48 83 c4 18          	add    $0x18,%rsp
    1078:	c3                   	retq   

0000000000001079 <ecall_writer_thread>:
    1079:	48 b8 62 61 64 20 64 	movabs $0x6174616420646162,%rax
    1080:	61 74 61 
    1083:	66 c7 05 7c bf 00 00 	movw   $0x0,0xbf7c(%rip)        # d008 <data+0x8>
    108a:	00 00 
    108c:	48 89 05 6d bf 00 00 	mov    %rax,0xbf6d(%rip)        # d000 <data>
    1093:	c3                   	retq   

0000000000001094 <ecall_checker_thread>:
    1094:	53                   	push   %rbx
    1095:	be 0a 00 00 00       	mov    $0xa,%esi
    109a:	bf 01 00 00 00       	mov    $0x1,%edi
    109f:	e8 5c 60 00 00       	callq  7100 <calloc>
    10a4:	48 8d 35 55 bf 00 00 	lea    0xbf55(%rip),%rsi        # d000 <data>
    10ab:	48 8d 3d 4e 7f 00 00 	lea    0x7f4e(%rip),%rdi        # 9000 <continue_execution+0x121>
    10b2:	ba 09 00 00 00       	mov    $0x9,%edx
    10b7:	48 89 c3             	mov    %rax,%rbx
    10ba:	e8 41 6e 00 00       	callq  7f00 <strncmp>
    10bf:	85 c0                	test   %eax,%eax
    10c1:	74 2a                	je     10ed <ecall_checker_thread+0x59>
    10c3:	48 8b 05 36 bf 00 00 	mov    0xbf36(%rip),%rax        # d000 <data>
    10ca:	48 89 df             	mov    %rbx,%rdi
    10cd:	48 89 03             	mov    %rax,(%rbx)
    10d0:	8b 05 32 bf 00 00    	mov    0xbf32(%rip),%eax        # d008 <data+0x8>
    10d6:	66 89 43 08          	mov    %ax,0x8(%rbx)
    10da:	31 c0                	xor    %eax,%eax
    10dc:	e8 81 00 00 00       	callq  1162 <ocall_print_string>
    10e1:	48 89 df             	mov    %rbx,%rdi
    10e4:	e8 a7 56 00 00       	callq  6790 <dlfree>
    10e9:	31 c0                	xor    %eax,%eax
    10eb:	eb 11                	jmp    10fe <ecall_checker_thread+0x6a>
    10ed:	48 8d 3d 15 7f 00 00 	lea    0x7f15(%rip),%rdi        # 9009 <continue_execution+0x12a>
    10f4:	31 c0                	xor    %eax,%eax
    10f6:	e8 67 00 00 00       	callq  1162 <ocall_print_string>
    10fb:	83 c8 ff             	or     $0xffffffff,%eax
    10fe:	5b                   	pop    %rbx
    10ff:	c3                   	retq   

0000000000001100 <sgx_ecall_writer_thread>:
    1100:	48 85 ff             	test   %rdi,%rdi
    1103:	75 0d                	jne    1112 <sgx_ecall_writer_thread+0x12>
    1105:	48 83 ec 08          	sub    $0x8,%rsp
    1109:	e8 6b ff ff ff       	callq  1079 <ecall_writer_thread>
    110e:	31 c0                	xor    %eax,%eax
    1110:	5a                   	pop    %rdx
    1111:	c3                   	retq   
    1112:	b8 02 00 00 00       	mov    $0x2,%eax
    1117:	c3                   	retq   

0000000000001118 <sgx_ecall_setup>:
    1118:	48 85 ff             	test   %rdi,%rdi
    111b:	75 0d                	jne    112a <sgx_ecall_setup+0x12>
    111d:	48 83 ec 08          	sub    $0x8,%rsp
    1121:	e8 39 ff ff ff       	callq  105f <ecall_setup>
    1126:	31 c0                	xor    %eax,%eax
    1128:	5a                   	pop    %rdx
    1129:	c3                   	retq   
    112a:	b8 02 00 00 00       	mov    $0x2,%eax
    112f:	c3                   	retq   

0000000000001130 <sgx_ecall_checker_thread>:
    1130:	48 85 ff             	test   %rdi,%rdi
    1133:	74 27                	je     115c <sgx_ecall_checker_thread+0x2c>
    1135:	53                   	push   %rbx
    1136:	be 04 00 00 00       	mov    $0x4,%esi
    113b:	48 89 fb             	mov    %rdi,%rbx
    113e:	e8 7d 02 00 00       	callq  13c0 <sgx_is_outside_enclave>
    1143:	85 c0                	test   %eax,%eax
    1145:	75 07                	jne    114e <sgx_ecall_checker_thread+0x1e>
    1147:	b8 02 00 00 00       	mov    $0x2,%eax
    114c:	eb 0c                	jmp    115a <sgx_ecall_checker_thread+0x2a>
    114e:	0f ae e8             	lfence 
    1151:	e8 3e ff ff ff       	callq  1094 <ecall_checker_thread>
    1156:	89 03                	mov    %eax,(%rbx)
    1158:	31 c0                	xor    %eax,%eax
    115a:	5b                   	pop    %rbx
    115b:	c3                   	retq   
    115c:	b8 02 00 00 00       	mov    $0x2,%eax
    1161:	c3                   	retq   

0000000000001162 <ocall_print_string>:
    1162:	41 54                	push   %r12
    1164:	55                   	push   %rbp
    1165:	49 89 fc             	mov    %rdi,%r12
    1168:	53                   	push   %rbx
    1169:	48 83 ec 10          	sub    $0x10,%rsp
    116d:	48 85 ff             	test   %rdi,%rdi
    1170:	74 24                	je     1196 <ocall_print_string+0x34>
    1172:	31 c0                	xor    %eax,%eax
    1174:	48 83 c9 ff          	or     $0xffffffffffffffff,%rcx
    1178:	f2 ae                	repnz scas %es:(%rdi),%al
    117a:	4c 89 e7             	mov    %r12,%rdi
    117d:	48 f7 d1             	not    %rcx
    1180:	48 89 ce             	mov    %rcx,%rsi
    1183:	48 89 cb             	mov    %rcx,%rbx
    1186:	e8 e5 01 00 00       	callq  1370 <sgx_is_within_enclave>
    118b:	85 c0                	test   %eax,%eax
    118d:	75 09                	jne    1198 <ocall_print_string+0x36>
    118f:	b8 02 00 00 00       	mov    $0x2,%eax
    1194:	eb 5d                	jmp    11f3 <ocall_print_string+0x91>
    1196:	31 db                	xor    %ebx,%ebx
    1198:	48 8d 7b 08          	lea    0x8(%rbx),%rdi
    119c:	e8 6f 02 00 00       	callq  1410 <sgx_ocalloc>
    11a1:	48 85 c0             	test   %rax,%rax
    11a4:	48 89 c5             	mov    %rax,%rbp
    11a7:	75 0c                	jne    11b5 <ocall_print_string+0x53>
    11a9:	e8 52 03 00 00       	callq  1500 <sgx_ocfree>
    11ae:	b8 01 00 00 00       	mov    $0x1,%eax
    11b3:	eb 3e                	jmp    11f3 <ocall_print_string+0x91>
    11b5:	4d 85 e4             	test   %r12,%r12
    11b8:	74 1b                	je     11d5 <ocall_print_string+0x73>
    11ba:	48 8d 78 08          	lea    0x8(%rax),%rdi
    11be:	48 89 d9             	mov    %rbx,%rcx
    11c1:	4c 89 e2             	mov    %r12,%rdx
    11c4:	48 89 de             	mov    %rbx,%rsi
    11c7:	48 89 38             	mov    %rdi,(%rax)
    11ca:	e8 71 6d 00 00       	callq  7f40 <memcpy_s>
    11cf:	85 c0                	test   %eax,%eax
    11d1:	74 09                	je     11dc <ocall_print_string+0x7a>
    11d3:	eb d4                	jmp    11a9 <ocall_print_string+0x47>
    11d5:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    11dc:	48 89 ee             	mov    %rbp,%rsi
    11df:	31 ff                	xor    %edi,%edi
    11e1:	e8 ca 1b 00 00       	callq  2db0 <sgx_ocall>
    11e6:	89 44 24 0c          	mov    %eax,0xc(%rsp)
    11ea:	e8 11 03 00 00       	callq  1500 <sgx_ocfree>
    11ef:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    11f3:	48 83 c4 10          	add    $0x10,%rsp
    11f7:	5b                   	pop    %rbx
    11f8:	5d                   	pop    %rbp
    11f9:	41 5c                	pop    %r12
    11fb:	c3                   	retq   
    11fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001200 <init_optimized_libs>:
    1200:	48 8d 05 99 be 00 00 	lea    0xbe99(%rip),%rax        # d0a0 <g_enclave_state>
    1207:	83 38 01             	cmpl   $0x1,(%rax)
    120a:	0f 85 50 01 00 00    	jne    1360 <init_optimized_libs+0x160>
    1210:	55                   	push   %rbp
    1211:	53                   	push   %rbx
    1212:	48 b8 00 00 00 00 00 	movabs $0xff00000000000000,%rax
    1219:	00 00 ff 
    121c:	48 89 f5             	mov    %rsi,%rbp
    121f:	48 83 ec 08          	sub    $0x8,%rsp
    1223:	48 85 c7             	test   %rax,%rdi
    1226:	0f 85 d4 00 00 00    	jne    1300 <init_optimized_libs+0x100>
    122c:	48 f7 c7 00 fe ff ff 	test   $0xfffffffffffffe00,%rdi
    1233:	0f 84 ef 00 00 00    	je     1328 <init_optimized_libs+0x128>
    1239:	40 f6 c7 20          	test   $0x20,%dil
    123d:	74 10                	je     124f <init_optimized_libs+0x4f>
    123f:	48 89 f8             	mov    %rdi,%rax
    1242:	83 e0 1f             	and    $0x1f,%eax
    1245:	48 83 f8 1f          	cmp    $0x1f,%rax
    1249:	0f 85 d9 00 00 00    	jne    1328 <init_optimized_libs+0x128>
    124f:	40 f6 c7 40          	test   $0x40,%dil
    1253:	74 10                	je     1265 <init_optimized_libs+0x65>
    1255:	48 89 f8             	mov    %rdi,%rax
    1258:	83 e0 3f             	and    $0x3f,%eax
    125b:	48 83 f8 3f          	cmp    $0x3f,%rax
    125f:	0f 85 c3 00 00 00    	jne    1328 <init_optimized_libs+0x128>
    1265:	40 f6 c7 80          	test   $0x80,%dil
    1269:	74 10                	je     127b <init_optimized_libs+0x7b>
    126b:	48 89 f8             	mov    %rdi,%rax
    126e:	83 e0 7f             	and    $0x7f,%eax
    1271:	48 83 f8 7f          	cmp    $0x7f,%rax
    1275:	0f 85 ad 00 00 00    	jne    1328 <init_optimized_libs+0x128>
    127b:	f7 c7 00 01 00 00    	test   $0x100,%edi
    1281:	74 10                	je     1293 <init_optimized_libs+0x93>
    1283:	40 0f b6 c7          	movzbl %dil,%eax
    1287:	48 3d ff 00 00 00    	cmp    $0xff,%rax
    128d:	0f 85 95 00 00 00    	jne    1328 <init_optimized_libs+0x128>
    1293:	f7 c7 00 02 00 00    	test   $0x200,%edi
    1299:	74 10                	je     12ab <init_optimized_libs+0xab>
    129b:	48 89 f8             	mov    %rdi,%rax
    129e:	25 ff 01 00 00       	and    $0x1ff,%eax
    12a3:	48 3d ff 01 00 00    	cmp    $0x1ff,%rax
    12a9:	75 7d                	jne    1328 <init_optimized_libs+0x128>
    12ab:	f7 c7 00 04 00 00    	test   $0x400,%edi
    12b1:	75 65                	jne    1318 <init_optimized_libs+0x118>
    12b3:	48 89 d0             	mov    %rdx,%rax
    12b6:	83 e0 06             	and    $0x6,%eax
    12b9:	48 83 f8 06          	cmp    $0x6,%rax
    12bd:	74 79                	je     1338 <init_optimized_libs+0x138>
    12bf:	48 b8 ff 7f 12 86 08 	movabs $0xfffe200886127fff,%rax
    12c6:	20 fe ff 
    12c9:	48 21 c7             	and    %rax,%rdi
    12cc:	48 8d 1d 5d bb 00 00 	lea    0xbb5d(%rip),%rbx        # ce30 <g_cpu_feature_indicator>
    12d3:	48 89 3b             	mov    %rdi,(%rbx)
    12d6:	e8 a5 6b 00 00       	callq  7e80 <sgx_init_string_lib>
    12db:	85 c0                	test   %eax,%eax
    12dd:	75 49                	jne    1328 <init_optimized_libs+0x128>
    12df:	48 8b 3b             	mov    (%rbx),%rdi
    12e2:	48 89 ee             	mov    %rbp,%rsi
    12e5:	e8 66 6e 00 00       	callq  8150 <sgx_init_crypto_lib>
    12ea:	85 c0                	test   %eax,%eax
    12ec:	0f 95 c0             	setne  %al
    12ef:	48 83 c4 08          	add    $0x8,%rsp
    12f3:	0f b6 c0             	movzbl %al,%eax
    12f6:	f7 d8                	neg    %eax
    12f8:	5b                   	pop    %rbx
    12f9:	5d                   	pop    %rbp
    12fa:	c3                   	retq   
    12fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1300:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffffff,%rax
    1307:	ff ff 00 
    130a:	48 21 c7             	and    %rax,%rdi
    130d:	e9 1a ff ff ff       	jmpq   122c <init_optimized_libs+0x2c>
    1312:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1318:	48 89 f8             	mov    %rdi,%rax
    131b:	25 ff 03 00 00       	and    $0x3ff,%eax
    1320:	48 3d ff 03 00 00    	cmp    $0x3ff,%rax
    1326:	74 8b                	je     12b3 <init_optimized_libs+0xb3>
    1328:	48 83 c4 08          	add    $0x8,%rsp
    132c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1331:	5b                   	pop    %rbx
    1332:	5d                   	pop    %rbp
    1333:	c3                   	retq   
    1334:	0f 1f 40 00          	nopl   0x0(%rax)
    1338:	81 e2 e0 00 00 00    	and    $0xe0,%edx
    133e:	48 81 fa e0 00 00 00 	cmp    $0xe0,%rdx
    1345:	74 85                	je     12cc <init_optimized_libs+0xcc>
    1347:	48 b8 ff ff ff b6 18 	movabs $0xfffee018b6ffffff,%rax
    134e:	e0 fe ff 
    1351:	48 21 c7             	and    %rax,%rdi
    1354:	e9 73 ff ff ff       	jmpq   12cc <init_optimized_libs+0xcc>
    1359:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1360:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1365:	c3                   	retq   
    1366:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    136d:	00 00 00 

0000000000001370 <sgx_is_within_enclave>:
    1370:	48 8d 05 89 7d 00 00 	lea    0x7d89(%rip),%rax        # 9100 <g_global_data>
    1377:	48 8d 0d 82 ec ff ff 	lea    -0x137e(%rip),%rcx        # 0 <__ImageBase>
    137e:	48 85 f6             	test   %rsi,%rsi
    1381:	48 8b 40 08          	mov    0x8(%rax),%rax
    1385:	4c 8d 44 08 ff       	lea    -0x1(%rax,%rcx,1),%r8
    138a:	74 24                	je     13b0 <sgx_is_within_enclave+0x40>
    138c:	48 83 ee 01          	sub    $0x1,%rsi
    1390:	48 01 fe             	add    %rdi,%rsi
    1393:	0f 93 c2             	setae  %dl
    1396:	48 39 cf             	cmp    %rcx,%rdi
    1399:	0f 93 c0             	setae  %al
    139c:	21 c2                	and    %eax,%edx
    139e:	31 c0                	xor    %eax,%eax
    13a0:	4c 39 c6             	cmp    %r8,%rsi
    13a3:	0f 96 c0             	setbe  %al
    13a6:	21 d0                	and    %edx,%eax
    13a8:	c3                   	retq   
    13a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    13b0:	48 89 fe             	mov    %rdi,%rsi
    13b3:	ba 01 00 00 00       	mov    $0x1,%edx
    13b8:	eb dc                	jmp    1396 <sgx_is_within_enclave+0x26>
    13ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000013c0 <sgx_is_outside_enclave>:
    13c0:	48 8d 05 39 7d 00 00 	lea    0x7d39(%rip),%rax        # 9100 <g_global_data>
    13c7:	48 85 f6             	test   %rsi,%rsi
    13ca:	48 8b 40 08          	mov    0x8(%rax),%rax
    13ce:	74 10                	je     13e0 <sgx_is_outside_enclave+0x20>
    13d0:	48 83 ee 01          	sub    $0x1,%rsi
    13d4:	48 01 fe             	add    %rdi,%rsi
    13d7:	73 0a                	jae    13e3 <sgx_is_outside_enclave+0x23>
    13d9:	31 c0                	xor    %eax,%eax
    13db:	c3                   	retq   
    13dc:	0f 1f 40 00          	nopl   0x0(%rax)
    13e0:	48 89 fe             	mov    %rdi,%rsi
    13e3:	48 8d 15 16 ec ff ff 	lea    -0x13ea(%rip),%rdx        # 0 <__ImageBase>
    13ea:	48 8d 44 10 ff       	lea    -0x1(%rax,%rdx,1),%rax
    13ef:	48 39 c7             	cmp    %rax,%rdi
    13f2:	0f 97 c0             	seta   %al
    13f5:	48 39 f2             	cmp    %rsi,%rdx
    13f8:	0f 97 c2             	seta   %dl
    13fb:	09 d0                	or     %edx,%eax
    13fd:	0f b6 c0             	movzbl %al,%eax
    1400:	c3                   	retq   
    1401:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1408:	00 00 00 
    140b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001410 <sgx_ocalloc>:
    1410:	53                   	push   %rbx
    1411:	48 89 fb             	mov    %rdi,%rbx
    1414:	48 83 ec 10          	sub    $0x10,%rsp
    1418:	e8 84 77 00 00       	callq  8ba1 <get_thread_data>
    141d:	4c 8d 05 dc 7c 00 00 	lea    0x7cdc(%rip),%r8        # 9100 <g_global_data>
    1424:	48 8b 70 20          	mov    0x20(%rax),%rsi
    1428:	48 8d 3d d1 eb ff ff 	lea    -0x142f(%rip),%rdi        # 0 <__ImageBase>
    142f:	49 8b 40 08          	mov    0x8(%r8),%rax
    1433:	48 8b 96 90 00 00 00 	mov    0x90(%rsi),%rdx
    143a:	48 8d 4c 07 ff       	lea    -0x1(%rdi,%rax,1),%rcx
    143f:	48 89 d0             	mov    %rdx,%rax
    1442:	48 83 c0 07          	add    $0x7,%rax
    1446:	0f 82 ad 00 00 00    	jb     14f9 <sgx_ocalloc+0xe9>
    144c:	48 39 c7             	cmp    %rax,%rdi
    144f:	77 09                	ja     145a <sgx_ocalloc+0x4a>
    1451:	48 39 ca             	cmp    %rcx,%rdx
    1454:	0f 86 9f 00 00 00    	jbe    14f9 <sgx_ocalloc+0xe9>
    145a:	48 39 da             	cmp    %rbx,%rdx
    145d:	0f 82 96 00 00 00    	jb     14f9 <sgx_ocalloc+0xe9>
    1463:	48 89 d1             	mov    %rdx,%rcx
    1466:	4d 8b 40 08          	mov    0x8(%r8),%r8
    146a:	48 29 d9             	sub    %rbx,%rcx
    146d:	48 89 c8             	mov    %rcx,%rax
    1470:	48 83 e0 f0          	and    $0xfffffffffffffff0,%rax
    1474:	48 85 db             	test   %rbx,%rbx
    1477:	4e 8d 44 07 ff       	lea    -0x1(%rdi,%r8,1),%r8
    147c:	75 72                	jne    14f0 <sgx_ocalloc+0xe0>
    147e:	48 89 c3             	mov    %rax,%rbx
    1481:	48 39 df             	cmp    %rbx,%rdi
    1484:	77 05                	ja     148b <sgx_ocalloc+0x7b>
    1486:	4c 39 c0             	cmp    %r8,%rax
    1489:	76 6e                	jbe    14f9 <sgx_ocalloc+0xe9>
    148b:	48 83 ea 01          	sub    $0x1,%rdx
    148f:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    1496:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    149d:	74 5a                	je     14f9 <sgx_ocalloc+0xe9>
    149f:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    14a4:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    14a9:	48 39 d1             	cmp    %rdx,%rcx
    14ac:	77 31                	ja     14df <sgx_ocalloc+0xcf>
    14ae:	66 90                	xchg   %ax,%ax
    14b0:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    14b5:	48 89 96 90 00 00 00 	mov    %rdx,0x90(%rsi)
    14bc:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    14c1:	c6 02 00             	movb   $0x0,(%rdx)
    14c4:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    14c9:	48 81 ea 00 10 00 00 	sub    $0x1000,%rdx
    14d0:	48 89 54 24 08       	mov    %rdx,0x8(%rsp)
    14d5:	48 8b 54 24 08       	mov    0x8(%rsp),%rdx
    14da:	48 39 ca             	cmp    %rcx,%rdx
    14dd:	73 d1                	jae    14b0 <sgx_ocalloc+0xa0>
    14df:	48 89 86 90 00 00 00 	mov    %rax,0x90(%rsi)
    14e6:	48 83 c4 10          	add    $0x10,%rsp
    14ea:	5b                   	pop    %rbx
    14eb:	c3                   	retq   
    14ec:	0f 1f 40 00          	nopl   0x0(%rax)
    14f0:	48 83 eb 01          	sub    $0x1,%rbx
    14f4:	48 01 c3             	add    %rax,%rbx
    14f7:	73 88                	jae    1481 <sgx_ocalloc+0x71>
    14f9:	e8 d2 79 00 00       	callq  8ed0 <abort>
    14fe:	66 90                	xchg   %ax,%ax

0000000000001500 <sgx_ocfree>:
    1500:	48 83 ec 08          	sub    $0x8,%rsp
    1504:	e8 98 76 00 00       	callq  8ba1 <get_thread_data>
    1509:	48 8d 0d f0 7b 00 00 	lea    0x7bf0(%rip),%rcx        # 9100 <g_global_data>
    1510:	48 8b 70 20          	mov    0x20(%rax),%rsi
    1514:	48 8b 40 08          	mov    0x8(%rax),%rax
    1518:	48 8d 15 e1 ea ff ff 	lea    -0x151f(%rip),%rdx        # 0 <__ImageBase>
    151f:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    1523:	48 8b 40 e8          	mov    -0x18(%rax),%rax
    1527:	48 8d 7c 0a ff       	lea    -0x1(%rdx,%rcx,1),%rdi
    152c:	48 89 c1             	mov    %rax,%rcx
    152f:	48 83 c1 07          	add    $0x7,%rcx
    1533:	72 16                	jb     154b <sgx_ocfree+0x4b>
    1535:	48 39 ca             	cmp    %rcx,%rdx
    1538:	77 05                	ja     153f <sgx_ocfree+0x3f>
    153a:	48 39 f8             	cmp    %rdi,%rax
    153d:	76 0c                	jbe    154b <sgx_ocfree+0x4b>
    153f:	48 89 86 90 00 00 00 	mov    %rax,0x90(%rsi)
    1546:	48 83 c4 08          	add    $0x8,%rsp
    154a:	c3                   	retq   
    154b:	e8 80 79 00 00       	callq  8ed0 <abort>

0000000000001550 <sgx_read_rand>:
    1550:	41 56                	push   %r14
    1552:	41 55                	push   %r13
    1554:	41 54                	push   %r12
    1556:	55                   	push   %rbp
    1557:	53                   	push   %rbx
    1558:	48 83 ec 10          	sub    $0x10,%rsp
    155c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1563:	00 00 
    1565:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    156a:	31 c0                	xor    %eax,%eax
    156c:	48 85 ff             	test   %rdi,%rdi
    156f:	0f 84 cb 00 00 00    	je     1640 <sgx_read_rand+0xf0>
    1575:	48 85 f6             	test   %rsi,%rsi
    1578:	48 89 f3             	mov    %rsi,%rbx
    157b:	0f 84 bf 00 00 00    	je     1640 <sgx_read_rand+0xf0>
    1581:	48 8d 43 ff          	lea    -0x1(%rbx),%rax
    1585:	49 89 fc             	mov    %rdi,%r12
    1588:	48 8d 35 71 7b 00 00 	lea    0x7b71(%rip),%rsi        # 9100 <g_global_data>
    158f:	48 8d 0d 6a ea ff ff 	lea    -0x1596(%rip),%rcx        # 0 <__ImageBase>
    1596:	4c 01 e0             	add    %r12,%rax
    1599:	41 0f 92 c0          	setb   %r8b
    159d:	48 8b 7e 08          	mov    0x8(%rsi),%rdi
    15a1:	48 89 c2             	mov    %rax,%rdx
    15a4:	45 0f b6 c0          	movzbl %r8b,%r8d
    15a8:	0f 82 da 00 00 00    	jb     1688 <sgx_read_rand+0x138>
    15ae:	49 39 cc             	cmp    %rcx,%r12
    15b1:	0f 82 d1 00 00 00    	jb     1688 <sgx_read_rand+0x138>
    15b7:	48 8d 44 39 ff       	lea    -0x1(%rcx,%rdi,1),%rax
    15bc:	48 39 d0             	cmp    %rdx,%rax
    15bf:	0f 82 9b 00 00 00    	jb     1660 <sgx_read_rand+0x110>
    15c5:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    15ca:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    15d1:	00 
    15d2:	41 be 04 00 00 00    	mov    $0x4,%r14d
    15d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    15df:	00 
    15e0:	4c 89 ef             	mov    %r13,%rdi
    15e3:	e8 c9 78 00 00       	callq  8eb1 <do_rdrand>
    15e8:	85 c0                	test   %eax,%eax
    15ea:	74 64                	je     1650 <sgx_read_rand+0x100>
    15ec:	48 83 fb 04          	cmp    $0x4,%rbx
    15f0:	4c 89 f5             	mov    %r14,%rbp
    15f3:	4c 89 e7             	mov    %r12,%rdi
    15f6:	48 0f 46 eb          	cmovbe %rbx,%rbp
    15fa:	4c 89 ee             	mov    %r13,%rsi
    15fd:	48 89 ea             	mov    %rbp,%rdx
    1600:	49 01 ec             	add    %rbp,%r12
    1603:	e8 58 66 00 00       	callq  7c60 <memcpy>
    1608:	48 29 eb             	sub    %rbp,%rbx
    160b:	75 d3                	jne    15e0 <sgx_read_rand+0x90>
    160d:	b9 04 00 00 00       	mov    $0x4,%ecx
    1612:	31 d2                	xor    %edx,%edx
    1614:	be 04 00 00 00       	mov    $0x4,%esi
    1619:	4c 89 ef             	mov    %r13,%rdi
    161c:	e8 9f 66 00 00       	callq  7cc0 <memset_s>
    1621:	31 c0                	xor    %eax,%eax
    1623:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    1628:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    162f:	00 00 
    1631:	75 6a                	jne    169d <sgx_read_rand+0x14d>
    1633:	48 83 c4 10          	add    $0x10,%rsp
    1637:	5b                   	pop    %rbx
    1638:	5d                   	pop    %rbp
    1639:	41 5c                	pop    %r12
    163b:	41 5d                	pop    %r13
    163d:	41 5e                	pop    %r14
    163f:	c3                   	retq   
    1640:	b8 02 00 00 00       	mov    $0x2,%eax
    1645:	eb dc                	jmp    1623 <sgx_read_rand+0xd3>
    1647:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    164e:	00 00 
    1650:	b8 01 00 00 00       	mov    $0x1,%eax
    1655:	eb cc                	jmp    1623 <sgx_read_rand+0xd3>
    1657:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    165e:	00 00 
    1660:	48 8b 46 08          	mov    0x8(%rsi),%rax
    1664:	48 8d 74 01 ff       	lea    -0x1(%rcx,%rax,1),%rsi
    1669:	48 39 d1             	cmp    %rdx,%rcx
    166c:	0f 87 53 ff ff ff    	ja     15c5 <sgx_read_rand+0x75>
    1672:	49 39 f4             	cmp    %rsi,%r12
    1675:	b8 02 00 00 00       	mov    $0x2,%eax
    167a:	0f 87 45 ff ff ff    	ja     15c5 <sgx_read_rand+0x75>
    1680:	eb a1                	jmp    1623 <sgx_read_rand+0xd3>
    1682:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1688:	4d 85 c0             	test   %r8,%r8
    168b:	48 8b 76 08          	mov    0x8(%rsi),%rsi
    168f:	b8 02 00 00 00       	mov    $0x2,%eax
    1694:	75 8d                	jne    1623 <sgx_read_rand+0xd3>
    1696:	48 8d 74 31 ff       	lea    -0x1(%rcx,%rsi,1),%rsi
    169b:	eb cc                	jmp    1669 <sgx_read_rand+0x119>
    169d:	e8 4e 2e 00 00       	callq  44f0 <__stack_chk_fail>
    16a2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    16a9:	00 00 00 
    16ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000016b0 <check_static_stack_canary>:
    16b0:	48 8d 05 61 b7 00 00 	lea    0xb761(%rip),%rax        # ce18 <__intel_security_cookie>
    16b7:	48 8b 00             	mov    (%rax),%rax
    16ba:	48 39 87 58 fd fe ff 	cmp    %rax,-0x102a8(%rdi)
    16c1:	0f 95 c0             	setne  %al
    16c4:	0f b6 c0             	movzbl %al,%eax
    16c7:	f7 d8                	neg    %eax
    16c9:	c3                   	retq   
    16ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000016d0 <_ZL19sgx_accept_backwardmmm>:
    16d0:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
    16d5:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    16d9:	41 ff 72 f8          	pushq  -0x8(%r10)
    16dd:	55                   	push   %rbp
    16de:	48 89 e5             	mov    %rsp,%rbp
    16e1:	41 55                	push   %r13
    16e3:	41 54                	push   %r12
    16e5:	41 52                	push   %r10
    16e7:	53                   	push   %rbx
    16e8:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    16ef:	48 89 bd 50 ff ff ff 	mov    %rdi,-0xb0(%rbp)
    16f6:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
    16fd:	00 00 00 00 
    1701:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1708:	00 00 
    170a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    170e:	31 c0                	xor    %eax,%eax
    1710:	48 39 f2             	cmp    %rsi,%rdx
    1713:	48 c7 85 60 ff ff ff 	movq   $0x0,-0xa0(%rbp)
    171a:	00 00 00 00 
    171e:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    1725:	00 00 00 00 
    1729:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)
    1730:	00 00 00 00 
    1734:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    173b:	00 00 00 00 
    173f:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    1746:	00 
    1747:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
    174e:	00 
    174f:	76 2a                	jbe    177b <_ZL19sgx_accept_backwardmmm+0xab>
    1751:	4c 8d ad 50 ff ff ff 	lea    -0xb0(%rbp),%r13
    1758:	49 89 f4             	mov    %rsi,%r12
    175b:	48 89 d3             	mov    %rdx,%rbx
    175e:	66 90                	xchg   %ax,%ax
    1760:	48 81 eb 00 10 00 00 	sub    $0x1000,%rbx
    1767:	4c 89 ef             	mov    %r13,%rdi
    176a:	48 89 de             	mov    %rbx,%rsi
    176d:	e8 10 77 00 00       	callq  8e82 <do_eaccept>
    1772:	85 c0                	test   %eax,%eax
    1774:	75 2a                	jne    17a0 <_ZL19sgx_accept_backwardmmm+0xd0>
    1776:	49 39 dc             	cmp    %rbx,%r12
    1779:	72 e5                	jb     1760 <_ZL19sgx_accept_backwardmmm+0x90>
    177b:	31 c0                	xor    %eax,%eax
    177d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    1781:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    1788:	00 00 
    178a:	75 19                	jne    17a5 <_ZL19sgx_accept_backwardmmm+0xd5>
    178c:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    1793:	5b                   	pop    %rbx
    1794:	41 5a                	pop    %r10
    1796:	41 5c                	pop    %r12
    1798:	41 5d                	pop    %r13
    179a:	5d                   	pop    %rbp
    179b:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
    179f:	c3                   	retq   
    17a0:	e8 2b 77 00 00       	callq  8ed0 <abort>
    17a5:	e8 46 2d 00 00       	callq  44f0 <__stack_chk_fail>
    17aa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000017b0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.part.0>:
    17b0:	41 57                	push   %r15
    17b2:	41 56                	push   %r14
    17b4:	41 55                	push   %r13
    17b6:	41 54                	push   %r12
    17b8:	55                   	push   %rbp
    17b9:	53                   	push   %rbx
    17ba:	48 83 ec 08          	sub    $0x8,%rsp
    17be:	48 8d 2d 3b 79 00 00 	lea    0x793b(%rip),%rbp        # 9100 <g_global_data>
    17c5:	8b 85 30 01 00 00    	mov    0x130(%rbp),%eax
    17cb:	85 c0                	test   %eax,%eax
    17cd:	74 46                	je     1815 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.part.0+0x65>
    17cf:	0f b7 85 38 01 00 00 	movzwl 0x138(%rbp),%eax
    17d6:	66 39 c2             	cmp    %ax,%dx
    17d9:	0f 84 e1 00 00 00    	je     18c0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.part.0+0x110>
    17df:	41 89 d1             	mov    %edx,%r9d
    17e2:	31 db                	xor    %ebx,%ebx
    17e4:	eb 22                	jmp    1808 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.part.0+0x58>
    17e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    17ed:	00 00 00 
    17f0:	89 d8                	mov    %ebx,%eax
    17f2:	48 c1 e0 05          	shl    $0x5,%rax
    17f6:	48 8d 54 05 00       	lea    0x0(%rbp,%rax,1),%rdx
    17fb:	0f b7 92 38 01 00 00 	movzwl 0x138(%rdx),%edx
    1802:	66 44 39 ca          	cmp    %r9w,%dx
    1806:	74 28                	je     1830 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.part.0+0x80>
    1808:	8b 85 30 01 00 00    	mov    0x130(%rbp),%eax
    180e:	83 c3 01             	add    $0x1,%ebx
    1811:	39 d8                	cmp    %ebx,%eax
    1813:	77 db                	ja     17f0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.part.0+0x40>
    1815:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    181a:	48 83 c4 08          	add    $0x8,%rsp
    181e:	5b                   	pop    %rbx
    181f:	5d                   	pop    %rbp
    1820:	41 5c                	pop    %r12
    1822:	41 5d                	pop    %r13
    1824:	41 5e                	pop    %r14
    1826:	41 5f                	pop    %r15
    1828:	c3                   	retq   
    1829:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1830:	48 05 38 01 00 00    	add    $0x138,%rax
    1836:	48 01 e8             	add    %rbp,%rax
    1839:	74 da                	je     1815 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.part.0+0x65>
    183b:	4d 89 c6             	mov    %r8,%r14
    183e:	49 89 cd             	mov    %rcx,%r13
    1841:	49 89 ff             	mov    %rdi,%r15
    1844:	49 89 f4             	mov    %rsi,%r12
    1847:	e8 1a 73 00 00       	callq  8b66 <get_enclave_base>
    184c:	49 89 d8             	mov    %rbx,%r8
    184f:	49 c1 e0 05          	shl    $0x5,%r8
    1853:	49 01 e8             	add    %rbp,%r8
    1856:	49 8b 90 40 01 00 00 	mov    0x140(%r8),%rdx
    185d:	4c 01 ea             	add    %r13,%rdx
    1860:	48 01 d0             	add    %rdx,%rax
    1863:	41 8b 90 3c 01 00 00 	mov    0x13c(%r8),%edx
    186a:	4c 39 f8             	cmp    %r15,%rax
    186d:	77 a6                	ja     1815 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.part.0+0x65>
    186f:	4c 89 e6             	mov    %r12,%rsi
    1872:	48 c1 e2 0c          	shl    $0xc,%rdx
    1876:	48 c1 e6 0c          	shl    $0xc,%rsi
    187a:	48 01 c2             	add    %rax,%rdx
    187d:	4a 8d 3c 3e          	lea    (%rsi,%r15,1),%rdi
    1881:	48 39 d7             	cmp    %rdx,%rdi
    1884:	77 8f                	ja     1815 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.part.0+0x65>
    1886:	31 c0                	xor    %eax,%eax
    1888:	4d 85 f6             	test   %r14,%r14
    188b:	74 8d                	je     181a <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.part.0+0x6a>
    188d:	48 83 c3 0a          	add    $0xa,%rbx
    1891:	48 c1 e3 05          	shl    $0x5,%rbx
    1895:	48 01 dd             	add    %rbx,%rbp
    1898:	48 8b 55 10          	mov    0x10(%rbp),%rdx
    189c:	49 89 16             	mov    %rdx,(%r14)
    189f:	41 0f b7 90 3a 01 00 	movzwl 0x13a(%r8),%edx
    18a6:	00 
    18a7:	66 41 89 56 08       	mov    %dx,0x8(%r14)
    18ac:	48 83 c4 08          	add    $0x8,%rsp
    18b0:	5b                   	pop    %rbx
    18b1:	5d                   	pop    %rbp
    18b2:	41 5c                	pop    %r12
    18b4:	41 5d                	pop    %r13
    18b6:	41 5e                	pop    %r14
    18b8:	41 5f                	pop    %r15
    18ba:	c3                   	retq   
    18bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    18c0:	b8 38 01 00 00       	mov    $0x138,%eax
    18c5:	31 db                	xor    %ebx,%ebx
    18c7:	e9 6a ff ff ff       	jmpq   1836 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.part.0+0x86>
    18cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000018d0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>:
    18d0:	41 57                	push   %r15
    18d2:	49 89 f7             	mov    %rsi,%r15
    18d5:	41 56                	push   %r14
    18d7:	49 c1 e7 0c          	shl    $0xc,%r15
    18db:	41 55                	push   %r13
    18dd:	41 54                	push   %r12
    18df:	4c 89 f8             	mov    %r15,%rax
    18e2:	55                   	push   %rbp
    18e3:	53                   	push   %rbx
    18e4:	48 f7 d0             	not    %rax
    18e7:	48 83 ec 28          	sub    $0x28,%rsp
    18eb:	48 39 f8             	cmp    %rdi,%rax
    18ee:	0f 82 35 01 00 00    	jb     1a29 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x159>
    18f4:	48 89 fb             	mov    %rdi,%rbx
    18f7:	48 89 cd             	mov    %rcx,%rbp
    18fa:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    18ff:	49 89 f4             	mov    %rsi,%r12
    1902:	e8 89 16 00 00       	callq  2f90 <get_heap_base>
    1907:	49 89 c5             	mov    %rax,%r13
    190a:	e8 01 17 00 00       	callq  3010 <get_heap_min_size>
    190f:	49 01 c5             	add    %rax,%r13
    1912:	e8 99 16 00 00       	callq  2fb0 <get_heap_size>
    1917:	49 89 c6             	mov    %rax,%r14
    191a:	e8 f1 16 00 00       	callq  3010 <get_heap_min_size>
    191f:	49 29 c6             	sub    %rax,%r14
    1922:	4c 39 eb             	cmp    %r13,%rbx
    1925:	72 39                	jb     1960 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x90>
    1927:	49 8d 04 1f          	lea    (%r15,%rbx,1),%rax
    192b:	4b 8d 54 35 00       	lea    0x0(%r13,%r14,1),%rdx
    1930:	48 39 d0             	cmp    %rdx,%rax
    1933:	77 2b                	ja     1960 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x90>
    1935:	48 85 ed             	test   %rbp,%rbp
    1938:	74 11                	je     194b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7b>
    193a:	b8 08 00 00 00       	mov    $0x8,%eax
    193f:	48 c7 45 00 03 02 00 	movq   $0x203,0x0(%rbp)
    1946:	00 
    1947:	66 89 45 08          	mov    %ax,0x8(%rbp)
    194b:	31 c0                	xor    %eax,%eax
    194d:	48 83 c4 28          	add    $0x28,%rsp
    1951:	5b                   	pop    %rbx
    1952:	5d                   	pop    %rbp
    1953:	41 5c                	pop    %r12
    1955:	41 5d                	pop    %r13
    1957:	41 5e                	pop    %r14
    1959:	41 5f                	pop    %r15
    195b:	c3                   	retq   
    195c:	0f 1f 40 00          	nopl   0x0(%rax)
    1960:	31 c9                	xor    %ecx,%ecx
    1962:	49 89 e8             	mov    %rbp,%r8
    1965:	ba 07 00 00 00       	mov    $0x7,%edx
    196a:	4c 89 e6             	mov    %r12,%rsi
    196d:	48 89 df             	mov    %rbx,%rdi
    1970:	e8 3b fe ff ff       	callq  17b0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.part.0>
    1975:	85 c0                	test   %eax,%eax
    1977:	74 d2                	je     194b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7b>
    1979:	48 8d 05 d8 b4 00 00 	lea    0xb4d8(%rip),%rax        # ce58 <rsrv_mem_min_size>
    1980:	48 8b 08             	mov    (%rax),%rcx
    1983:	48 8d 05 de b4 00 00 	lea    0xb4de(%rip),%rax        # ce68 <rsrv_mem_base>
    198a:	48 8b 10             	mov    (%rax),%rdx
    198d:	48 01 ca             	add    %rcx,%rdx
    1990:	48 39 d3             	cmp    %rdx,%rbx
    1993:	72 18                	jb     19ad <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0xdd>
    1995:	48 8d 05 c4 b4 00 00 	lea    0xb4c4(%rip),%rax        # ce60 <rsrv_mem_size>
    199c:	49 01 df             	add    %rbx,%r15
    199f:	48 8b 00             	mov    (%rax),%rax
    19a2:	48 29 c8             	sub    %rcx,%rax
    19a5:	48 01 d0             	add    %rdx,%rax
    19a8:	49 39 c7             	cmp    %rax,%r15
    19ab:	76 88                	jbe    1935 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x65>
    19ad:	48 8d 15 4c 77 00 00 	lea    0x774c(%rip),%rdx        # 9100 <g_global_data>
    19b4:	8b 82 30 01 00 00    	mov    0x130(%rdx),%eax
    19ba:	85 c0                	test   %eax,%eax
    19bc:	74 40                	je     19fe <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x12e>
    19be:	0f b7 82 38 01 00 00 	movzwl 0x138(%rdx),%eax
    19c5:	66 3d 13 10          	cmp    $0x1013,%ax
    19c9:	0f 84 3b 01 00 00    	je     1b0a <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x23a>
    19cf:	31 c0                	xor    %eax,%eax
    19d1:	eb 1e                	jmp    19f1 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x121>
    19d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    19d8:	41 89 c1             	mov    %eax,%r9d
    19db:	49 c1 e1 05          	shl    $0x5,%r9
    19df:	4a 8d 0c 0a          	lea    (%rdx,%r9,1),%rcx
    19e3:	0f b7 89 38 01 00 00 	movzwl 0x138(%rcx),%ecx
    19ea:	66 81 f9 13 10       	cmp    $0x1013,%cx
    19ef:	74 47                	je     1a38 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x168>
    19f1:	8b 8a 30 01 00 00    	mov    0x130(%rdx),%ecx
    19f7:	83 c0 01             	add    $0x1,%eax
    19fa:	39 c1                	cmp    %eax,%ecx
    19fc:	77 da                	ja     19d8 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x108>
    19fe:	41 be 0e 00 00 00    	mov    $0xe,%r14d
    1a04:	31 c9                	xor    %ecx,%ecx
    1a06:	49 89 e8             	mov    %rbp,%r8
    1a09:	44 89 f2             	mov    %r14d,%edx
    1a0c:	4c 89 e6             	mov    %r12,%rsi
    1a0f:	48 89 df             	mov    %rbx,%rdi
    1a12:	e8 99 fd ff ff       	callq  17b0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.part.0>
    1a17:	85 c0                	test   %eax,%eax
    1a19:	0f 84 d1 00 00 00    	je     1af0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x220>
    1a1f:	41 83 c6 01          	add    $0x1,%r14d
    1a23:	41 83 fe 13          	cmp    $0x13,%r14d
    1a27:	75 db                	jne    1a04 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x134>
    1a29:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    1a2e:	e9 1a ff ff ff       	jmpq   194d <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7d>
    1a33:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1a38:	49 81 c1 38 01 00 00 	add    $0x138,%r9
    1a3f:	49 01 d1             	add    %rdx,%r9
    1a42:	74 ba                	je     19fe <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x12e>
    1a44:	41 89 c1             	mov    %eax,%r9d
    1a47:	c7 44 24 0c 0e 00 00 	movl   $0xe,0xc(%rsp)
    1a4e:	00 
    1a4f:	49 c1 e1 05          	shl    $0x5,%r9
    1a53:	4e 8d 3c 0a          	lea    (%rdx,%r9,1),%r15
    1a57:	41 8b 87 3c 01 00 00 	mov    0x13c(%r15),%eax
    1a5e:	83 f8 ff             	cmp    $0xffffffff,%eax
    1a61:	74 75                	je     1ad8 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x208>
    1a63:	45 31 ed             	xor    %r13d,%r13d
    1a66:	eb 1b                	jmp    1a83 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1b3>
    1a68:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1a6f:	00 
    1a70:	41 8b 87 3c 01 00 00 	mov    0x13c(%r15),%eax
    1a77:	41 83 c5 01          	add    $0x1,%r13d
    1a7b:	83 c0 01             	add    $0x1,%eax
    1a7e:	44 39 e8             	cmp    %r13d,%eax
    1a81:	76 55                	jbe    1ad8 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x208>
    1a83:	49 8b 8f 40 01 00 00 	mov    0x140(%r15),%rcx
    1a8a:	45 89 ee             	mov    %r13d,%r14d
    1a8d:	8b 54 24 0c          	mov    0xc(%rsp),%edx
    1a91:	49 8d 87 40 01 00 00 	lea    0x140(%r15),%rax
    1a98:	49 89 e8             	mov    %rbp,%r8
    1a9b:	4c 89 e6             	mov    %r12,%rsi
    1a9e:	48 89 df             	mov    %rbx,%rdi
    1aa1:	49 0f af ce          	imul   %r14,%rcx
    1aa5:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1aaa:	e8 01 fd ff ff       	callq  17b0 <_ZL25check_dynamic_entry_rangePvmtmP24dynamic_flags_attributes.part.0>
    1aaf:	85 c0                	test   %eax,%eax
    1ab1:	75 bd                	jne    1a70 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x1a0>
    1ab3:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    1ab8:	48 85 db             	test   %rbx,%rbx
    1abb:	0f 84 8a fe ff ff    	je     194b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7b>
    1ac1:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    1ac6:	48 8b 16             	mov    (%rsi),%rdx
    1ac9:	4c 0f af f2          	imul   %rdx,%r14
    1acd:	4c 89 33             	mov    %r14,(%rbx)
    1ad0:	e9 78 fe ff ff       	jmpq   194d <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7d>
    1ad5:	0f 1f 00             	nopl   (%rax)
    1ad8:	83 44 24 0c 01       	addl   $0x1,0xc(%rsp)
    1add:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    1ae1:	83 f8 13             	cmp    $0x13,%eax
    1ae4:	0f 85 6d ff ff ff    	jne    1a57 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x187>
    1aea:	e9 3a ff ff ff       	jmpq   1a29 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x159>
    1aef:	90                   	nop
    1af0:	48 8b 5c 24 10       	mov    0x10(%rsp),%rbx
    1af5:	48 85 db             	test   %rbx,%rbx
    1af8:	0f 84 4d fe ff ff    	je     194b <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7b>
    1afe:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    1b05:	e9 43 fe ff ff       	jmpq   194d <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x7d>
    1b0a:	41 b9 38 01 00 00    	mov    $0x138,%r9d
    1b10:	31 c0                	xor    %eax,%eax
    1b12:	e9 28 ff ff ff       	jmpq   1a3f <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes+0x16f>
    1b17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1b1e:	00 00 

0000000000001b20 <_Z24get_dynamic_layout_by_idt>:
    1b20:	48 8d 05 d9 75 00 00 	lea    0x75d9(%rip),%rax        # 9100 <g_global_data>
    1b27:	41 89 f8             	mov    %edi,%r8d
    1b2a:	8b 90 30 01 00 00    	mov    0x130(%rax),%edx
    1b30:	85 d2                	test   %edx,%edx
    1b32:	74 38                	je     1b6c <_Z24get_dynamic_layout_by_idt+0x4c>
    1b34:	0f b7 90 38 01 00 00 	movzwl 0x138(%rax),%edx
    1b3b:	66 39 d7             	cmp    %dx,%di
    1b3e:	74 40                	je     1b80 <_Z24get_dynamic_layout_by_idt+0x60>
    1b40:	31 d2                	xor    %edx,%edx
    1b42:	eb 1b                	jmp    1b5f <_Z24get_dynamic_layout_by_idt+0x3f>
    1b44:	0f 1f 40 00          	nopl   0x0(%rax)
    1b48:	89 d1                	mov    %edx,%ecx
    1b4a:	48 c1 e1 05          	shl    $0x5,%rcx
    1b4e:	48 8d 34 08          	lea    (%rax,%rcx,1),%rsi
    1b52:	0f b7 b6 38 01 00 00 	movzwl 0x138(%rsi),%esi
    1b59:	66 44 39 c6          	cmp    %r8w,%si
    1b5d:	74 11                	je     1b70 <_Z24get_dynamic_layout_by_idt+0x50>
    1b5f:	8b 88 30 01 00 00    	mov    0x130(%rax),%ecx
    1b65:	83 c2 01             	add    $0x1,%edx
    1b68:	39 d1                	cmp    %edx,%ecx
    1b6a:	77 dc                	ja     1b48 <_Z24get_dynamic_layout_by_idt+0x28>
    1b6c:	31 c0                	xor    %eax,%eax
    1b6e:	c3                   	retq   
    1b6f:	90                   	nop
    1b70:	48 81 c1 38 01 00 00 	add    $0x138,%rcx
    1b77:	48 01 c8             	add    %rcx,%rax
    1b7a:	c3                   	retq   
    1b7b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1b80:	b9 38 01 00 00       	mov    $0x138,%ecx
    1b85:	eb f0                	jmp    1b77 <_Z24get_dynamic_layout_by_idt+0x57>
    1b87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1b8e:	00 00 

0000000000001b90 <is_dynamic_thread>:
    1b90:	48 83 ec 28          	sub    $0x28,%rsp
    1b94:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1b9b:	00 00 
    1b9d:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1ba2:	31 c0                	xor    %eax,%eax
    1ba4:	48 85 ff             	test   %rdi,%rdi
    1ba7:	74 27                	je     1bd0 <is_dynamic_thread+0x40>
    1ba9:	31 d2                	xor    %edx,%edx
    1bab:	48 89 e1             	mov    %rsp,%rcx
    1bae:	be 01 00 00 00       	mov    $0x1,%esi
    1bb3:	e8 18 fd ff ff       	callq  18d0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    1bb8:	85 c0                	test   %eax,%eax
    1bba:	75 14                	jne    1bd0 <is_dynamic_thread+0x40>
    1bbc:	31 c0                	xor    %eax,%eax
    1bbe:	48 81 3c 24 00 01 00 	cmpq   $0x100,(%rsp)
    1bc5:	00 
    1bc6:	0f 94 c0             	sete   %al
    1bc9:	eb 07                	jmp    1bd2 <is_dynamic_thread+0x42>
    1bcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    1bd0:	31 c0                	xor    %eax,%eax
    1bd2:	48 8b 54 24 18       	mov    0x18(%rsp),%rdx
    1bd7:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    1bde:	00 00 
    1be0:	75 05                	jne    1be7 <is_dynamic_thread+0x57>
    1be2:	48 83 c4 28          	add    $0x28,%rsp
    1be6:	c3                   	retq   
    1be7:	e8 04 29 00 00       	callq  44f0 <__stack_chk_fail>
    1bec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001bf0 <is_dynamic_thread_exist>:
    1bf0:	48 8d 05 31 b2 00 00 	lea    0xb231(%rip),%rax        # ce28 <EDMM_supported>
    1bf7:	8b 00                	mov    (%rax),%eax
    1bf9:	85 c0                	test   %eax,%eax
    1bfb:	74 49                	je     1c46 <is_dynamic_thread_exist+0x56>
    1bfd:	48 8d 0d fc 74 00 00 	lea    0x74fc(%rip),%rcx        # 9100 <g_global_data>
    1c04:	8b 81 30 01 00 00    	mov    0x130(%rcx),%eax
    1c0a:	85 c0                	test   %eax,%eax
    1c0c:	74 36                	je     1c44 <is_dynamic_thread_exist+0x54>
    1c0e:	0f b7 81 38 01 00 00 	movzwl 0x138(%rcx),%eax
    1c15:	66 83 f8 12          	cmp    $0x12,%ax
    1c19:	74 45                	je     1c60 <is_dynamic_thread_exist+0x70>
    1c1b:	31 c0                	xor    %eax,%eax
    1c1d:	eb 18                	jmp    1c37 <is_dynamic_thread_exist+0x47>
    1c1f:	90                   	nop
    1c20:	89 c2                	mov    %eax,%edx
    1c22:	48 c1 e2 05          	shl    $0x5,%rdx
    1c26:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    1c2a:	0f b7 b6 38 01 00 00 	movzwl 0x138(%rsi),%esi
    1c31:	66 83 fe 12          	cmp    $0x12,%si
    1c35:	74 19                	je     1c50 <is_dynamic_thread_exist+0x60>
    1c37:	8b 91 30 01 00 00    	mov    0x130(%rcx),%edx
    1c3d:	83 c0 01             	add    $0x1,%eax
    1c40:	39 c2                	cmp    %eax,%edx
    1c42:	77 dc                	ja     1c20 <is_dynamic_thread_exist+0x30>
    1c44:	31 c0                	xor    %eax,%eax
    1c46:	f3 c3                	repz retq 
    1c48:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1c4f:	00 
    1c50:	48 81 c2 38 01 00 00 	add    $0x138,%rdx
    1c57:	31 c0                	xor    %eax,%eax
    1c59:	48 01 d1             	add    %rdx,%rcx
    1c5c:	0f 95 c0             	setne  %al
    1c5f:	c3                   	retq   
    1c60:	ba 38 01 00 00       	mov    $0x138,%edx
    1c65:	eb f0                	jmp    1c57 <is_dynamic_thread_exist+0x67>
    1c67:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1c6e:	00 00 

0000000000001c70 <get_dynamic_stack_max_page>:
    1c70:	48 8d 0d 89 74 00 00 	lea    0x7489(%rip),%rcx        # 9100 <g_global_data>
    1c77:	8b 81 30 01 00 00    	mov    0x130(%rcx),%eax
    1c7d:	85 c0                	test   %eax,%eax
    1c7f:	74 3d                	je     1cbe <get_dynamic_stack_max_page+0x4e>
    1c81:	0f b7 81 38 01 00 00 	movzwl 0x138(%rcx),%eax
    1c88:	66 83 f8 07          	cmp    $0x7,%ax
    1c8c:	74 52                	je     1ce0 <get_dynamic_stack_max_page+0x70>
    1c8e:	31 c0                	xor    %eax,%eax
    1c90:	eb 1d                	jmp    1caf <get_dynamic_stack_max_page+0x3f>
    1c92:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1c98:	89 c2                	mov    %eax,%edx
    1c9a:	48 c1 e2 05          	shl    $0x5,%rdx
    1c9e:	48 8d 34 11          	lea    (%rcx,%rdx,1),%rsi
    1ca2:	0f b7 b6 38 01 00 00 	movzwl 0x138(%rsi),%esi
    1ca9:	66 83 fe 07          	cmp    $0x7,%si
    1cad:	74 11                	je     1cc0 <get_dynamic_stack_max_page+0x50>
    1caf:	8b 91 30 01 00 00    	mov    0x130(%rcx),%edx
    1cb5:	83 c0 01             	add    $0x1,%eax
    1cb8:	39 c2                	cmp    %eax,%edx
    1cba:	77 dc                	ja     1c98 <get_dynamic_stack_max_page+0x28>
    1cbc:	31 c0                	xor    %eax,%eax
    1cbe:	f3 c3                	repz retq 
    1cc0:	48 81 c2 38 01 00 00 	add    $0x138,%rdx
    1cc7:	48 01 ca             	add    %rcx,%rdx
    1cca:	74 f0                	je     1cbc <get_dynamic_stack_max_page+0x4c>
    1ccc:	48 c1 e0 05          	shl    $0x5,%rax
    1cd0:	48 01 c8             	add    %rcx,%rax
    1cd3:	8b 80 3c 01 00 00    	mov    0x13c(%rax),%eax
    1cd9:	c3                   	retq   
    1cda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1ce0:	ba 38 01 00 00       	mov    $0x138,%edx
    1ce5:	31 c0                	xor    %eax,%eax
    1ce7:	eb de                	jmp    1cc7 <get_dynamic_stack_max_page+0x57>
    1ce9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001cf0 <sgx_accept_forward>:
    1cf0:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
    1cf5:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    1cf9:	41 ff 72 f8          	pushq  -0x8(%r10)
    1cfd:	55                   	push   %rbp
    1cfe:	48 89 e5             	mov    %rsp,%rbp
    1d01:	41 55                	push   %r13
    1d03:	41 54                	push   %r12
    1d05:	41 52                	push   %r10
    1d07:	53                   	push   %rbx
    1d08:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
    1d0f:	48 89 bd 50 ff ff ff 	mov    %rdi,-0xb0(%rbp)
    1d16:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
    1d1d:	00 00 00 00 
    1d21:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1d28:	00 00 
    1d2a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1d2e:	31 c0                	xor    %eax,%eax
    1d30:	48 39 d6             	cmp    %rdx,%rsi
    1d33:	48 c7 85 60 ff ff ff 	movq   $0x0,-0xa0(%rbp)
    1d3a:	00 00 00 00 
    1d3e:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    1d45:	00 00 00 00 
    1d49:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)
    1d50:	00 00 00 00 
    1d54:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    1d5b:	00 00 00 00 
    1d5f:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    1d66:	00 
    1d67:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
    1d6e:	00 
    1d6f:	73 2a                	jae    1d9b <sgx_accept_forward+0xab>
    1d71:	4c 8d ad 50 ff ff ff 	lea    -0xb0(%rbp),%r13
    1d78:	48 89 f3             	mov    %rsi,%rbx
    1d7b:	49 89 d4             	mov    %rdx,%r12
    1d7e:	66 90                	xchg   %ax,%ax
    1d80:	48 89 de             	mov    %rbx,%rsi
    1d83:	4c 89 ef             	mov    %r13,%rdi
    1d86:	e8 f7 70 00 00       	callq  8e82 <do_eaccept>
    1d8b:	85 c0                	test   %eax,%eax
    1d8d:	75 31                	jne    1dc0 <sgx_accept_forward+0xd0>
    1d8f:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    1d96:	49 39 dc             	cmp    %rbx,%r12
    1d99:	77 e5                	ja     1d80 <sgx_accept_forward+0x90>
    1d9b:	31 c0                	xor    %eax,%eax
    1d9d:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    1da1:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    1da8:	00 00 
    1daa:	75 19                	jne    1dc5 <sgx_accept_forward+0xd5>
    1dac:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
    1db3:	5b                   	pop    %rbx
    1db4:	41 5a                	pop    %r10
    1db6:	41 5c                	pop    %r12
    1db8:	41 5d                	pop    %r13
    1dba:	5d                   	pop    %rbp
    1dbb:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
    1dbf:	c3                   	retq   
    1dc0:	e8 0b 71 00 00       	callq  8ed0 <abort>
    1dc5:	e8 26 27 00 00       	callq  44f0 <__stack_chk_fail>
    1dca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001dd0 <_Z18accept_post_removePVK9_layout_tS1_m>:
    1dd0:	48 39 f7             	cmp    %rsi,%rdi
    1dd3:	0f 83 d7 00 00 00    	jae    1eb0 <_Z18accept_post_removePVK9_layout_tS1_m+0xe0>
    1dd9:	41 56                	push   %r14
    1ddb:	41 55                	push   %r13
    1ddd:	41 54                	push   %r12
    1ddf:	49 89 d4             	mov    %rdx,%r12
    1de2:	55                   	push   %rbp
    1de3:	48 89 f5             	mov    %rsi,%rbp
    1de6:	53                   	push   %rbx
    1de7:	48 89 fb             	mov    %rdi,%rbx
    1dea:	eb 19                	jmp    1e05 <_Z18accept_post_removePVK9_layout_tS1_m+0x35>
    1dec:	0f 1f 40 00          	nopl   0x0(%rax)
    1df0:	0f b7 03             	movzwl (%rbx),%eax
    1df3:	f6 c4 10             	test   $0x10,%ah
    1df6:	75 58                	jne    1e50 <_Z18accept_post_removePVK9_layout_tS1_m+0x80>
    1df8:	48 83 c3 20          	add    $0x20,%rbx
    1dfc:	48 39 dd             	cmp    %rbx,%rbp
    1dff:	0f 86 97 00 00 00    	jbe    1e9c <_Z18accept_post_removePVK9_layout_tS1_m+0xcc>
    1e05:	0f b7 03             	movzwl (%rbx),%eax
    1e08:	f6 c4 10             	test   $0x10,%ah
    1e0b:	75 e3                	jne    1df0 <_Z18accept_post_removePVK9_layout_tS1_m+0x20>
    1e0d:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    1e11:	a8 10                	test   $0x10,%al
    1e13:	74 db                	je     1df0 <_Z18accept_post_removePVK9_layout_tS1_m+0x20>
    1e15:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    1e19:	4e 8d 2c 26          	lea    (%rsi,%r12,1),%r13
    1e1d:	e8 44 6d 00 00       	callq  8b66 <get_enclave_base>
    1e22:	8b 53 04             	mov    0x4(%rbx),%edx
    1e25:	4a 8d 34 28          	lea    (%rax,%r13,1),%rsi
    1e29:	bf 10 04 00 00       	mov    $0x410,%edi
    1e2e:	48 c1 e2 0c          	shl    $0xc,%rdx
    1e32:	48 01 f2             	add    %rsi,%rdx
    1e35:	e8 b6 fe ff ff       	callq  1cf0 <sgx_accept_forward>
    1e3a:	85 c0                	test   %eax,%eax
    1e3c:	74 ba                	je     1df8 <_Z18accept_post_removePVK9_layout_tS1_m+0x28>
    1e3e:	5b                   	pop    %rbx
    1e3f:	5d                   	pop    %rbp
    1e40:	41 5c                	pop    %r12
    1e42:	41 5d                	pop    %r13
    1e44:	41 5e                	pop    %r14
    1e46:	c3                   	retq   
    1e47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1e4e:	00 00 
    1e50:	8b 43 04             	mov    0x4(%rbx),%eax
    1e53:	85 c0                	test   %eax,%eax
    1e55:	74 a1                	je     1df8 <_Z18accept_post_removePVK9_layout_tS1_m+0x28>
    1e57:	45 31 f6             	xor    %r14d,%r14d
    1e5a:	45 31 ed             	xor    %r13d,%r13d
    1e5d:	48 8b 43 08          	mov    0x8(%rbx),%rax
    1e61:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    1e65:	48 89 de             	mov    %rbx,%rsi
    1e68:	49 01 c5             	add    %rax,%r13
    1e6b:	f7 df                	neg    %edi
    1e6d:	4c 89 ea             	mov    %r13,%rdx
    1e70:	48 63 ff             	movslq %edi,%rdi
    1e73:	48 c1 e7 05          	shl    $0x5,%rdi
    1e77:	48 01 df             	add    %rbx,%rdi
    1e7a:	e8 51 ff ff ff       	callq  1dd0 <_Z18accept_post_removePVK9_layout_tS1_m>
    1e7f:	85 c0                	test   %eax,%eax
    1e81:	75 bb                	jne    1e3e <_Z18accept_post_removePVK9_layout_tS1_m+0x6e>
    1e83:	8b 43 04             	mov    0x4(%rbx),%eax
    1e86:	41 83 c6 01          	add    $0x1,%r14d
    1e8a:	44 39 f0             	cmp    %r14d,%eax
    1e8d:	77 ce                	ja     1e5d <_Z18accept_post_removePVK9_layout_tS1_m+0x8d>
    1e8f:	48 83 c3 20          	add    $0x20,%rbx
    1e93:	48 39 dd             	cmp    %rbx,%rbp
    1e96:	0f 87 69 ff ff ff    	ja     1e05 <_Z18accept_post_removePVK9_layout_tS1_m+0x35>
    1e9c:	5b                   	pop    %rbx
    1e9d:	31 c0                	xor    %eax,%eax
    1e9f:	5d                   	pop    %rbp
    1ea0:	41 5c                	pop    %r12
    1ea2:	41 5d                	pop    %r13
    1ea4:	41 5e                	pop    %r14
    1ea6:	c3                   	retq   
    1ea7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    1eae:	00 00 
    1eb0:	31 c0                	xor    %eax,%eax
    1eb2:	c3                   	retq   
    1eb3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1eba:	00 00 00 
    1ebd:	0f 1f 00             	nopl   (%rax)

0000000000001ec0 <apply_pages_within_exception>:
    1ec0:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
    1ec5:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    1ec9:	41 ff 72 f8          	pushq  -0x8(%r10)
    1ecd:	55                   	push   %rbp
    1ece:	48 89 e5             	mov    %rsp,%rbp
    1ed1:	41 56                	push   %r14
    1ed3:	41 55                	push   %r13
    1ed5:	41 54                	push   %r12
    1ed7:	41 52                	push   %r10
    1ed9:	53                   	push   %rbx
    1eda:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    1ee1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1ee8:	00 00 
    1eea:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    1eee:	31 c0                	xor    %eax,%eax
    1ef0:	48 85 ff             	test   %rdi,%rdi
    1ef3:	0f 84 ca 00 00 00    	je     1fc3 <apply_pages_within_exception+0x103>
    1ef9:	31 c9                	xor    %ecx,%ecx
    1efb:	31 d2                	xor    %edx,%edx
    1efd:	48 89 fb             	mov    %rdi,%rbx
    1f00:	49 89 f4             	mov    %rsi,%r12
    1f03:	e8 c8 f9 ff ff       	callq  18d0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    1f08:	85 c0                	test   %eax,%eax
    1f0a:	41 89 c5             	mov    %eax,%r13d
    1f0d:	0f 85 b0 00 00 00    	jne    1fc3 <apply_pages_within_exception+0x103>
    1f13:	49 c1 e4 0c          	shl    $0xc,%r12
    1f17:	48 c7 85 50 ff ff ff 	movq   $0x20b,-0xb0(%rbp)
    1f1e:	0b 02 00 00 
    1f22:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
    1f29:	00 00 00 00 
    1f2d:	49 01 dc             	add    %rbx,%r12
    1f30:	48 c7 85 60 ff ff ff 	movq   $0x0,-0xa0(%rbp)
    1f37:	00 00 00 00 
    1f3b:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
    1f42:	00 00 00 00 
    1f46:	4c 39 e3             	cmp    %r12,%rbx
    1f49:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)
    1f50:	00 00 00 00 
    1f54:	48 c7 85 78 ff ff ff 	movq   $0x0,-0x88(%rbp)
    1f5b:	00 00 00 00 
    1f5f:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)
    1f66:	00 
    1f67:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
    1f6e:	00 
    1f6f:	73 2a                	jae    1f9b <apply_pages_within_exception+0xdb>
    1f71:	4c 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%r14
    1f78:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1f7f:	00 
    1f80:	48 89 de             	mov    %rbx,%rsi
    1f83:	4c 89 f7             	mov    %r14,%rdi
    1f86:	e8 f7 6e 00 00       	callq  8e82 <do_eaccept>
    1f8b:	85 c0                	test   %eax,%eax
    1f8d:	75 3c                	jne    1fcb <apply_pages_within_exception+0x10b>
    1f8f:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    1f96:	49 39 dc             	cmp    %rbx,%r12
    1f99:	77 e5                	ja     1f80 <apply_pages_within_exception+0xc0>
    1f9b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
    1f9f:	64 48 33 14 25 28 00 	xor    %fs:0x28,%rdx
    1fa6:	00 00 
    1fa8:	44 89 e8             	mov    %r13d,%eax
    1fab:	75 23                	jne    1fd0 <apply_pages_within_exception+0x110>
    1fad:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    1fb4:	5b                   	pop    %rbx
    1fb5:	41 5a                	pop    %r10
    1fb7:	41 5c                	pop    %r12
    1fb9:	41 5d                	pop    %r13
    1fbb:	41 5e                	pop    %r14
    1fbd:	5d                   	pop    %rbp
    1fbe:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
    1fc2:	c3                   	retq   
    1fc3:	41 bd ff ff ff ff    	mov    $0xffffffff,%r13d
    1fc9:	eb d0                	jmp    1f9b <apply_pages_within_exception+0xdb>
    1fcb:	e8 00 6f 00 00       	callq  8ed0 <abort>
    1fd0:	e8 1b 25 00 00       	callq  44f0 <__stack_chk_fail>
    1fd5:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    1fdc:	00 00 00 
    1fdf:	90                   	nop

0000000000001fe0 <apply_EPC_pages>:
    1fe0:	55                   	push   %rbp
    1fe1:	53                   	push   %rbx
    1fe2:	48 83 ec 28          	sub    $0x28,%rsp
    1fe6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1fed:	00 00 
    1fef:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    1ff4:	31 c0                	xor    %eax,%eax
    1ff6:	48 85 ff             	test   %rdi,%rdi
    1ff9:	74 55                	je     2050 <apply_EPC_pages+0x70>
    1ffb:	31 d2                	xor    %edx,%edx
    1ffd:	48 89 e1             	mov    %rsp,%rcx
    2000:	48 89 fd             	mov    %rdi,%rbp
    2003:	48 89 f3             	mov    %rsi,%rbx
    2006:	e8 c5 f8 ff ff       	callq  18d0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    200b:	85 c0                	test   %eax,%eax
    200d:	75 41                	jne    2050 <apply_EPC_pages+0x70>
    200f:	48 c1 e3 0c          	shl    $0xc,%rbx
    2013:	f6 44 24 08 40       	testb  $0x40,0x8(%rsp)
    2018:	48 89 ee             	mov    %rbp,%rsi
    201b:	48 8d 14 2b          	lea    (%rbx,%rbp,1),%rdx
    201f:	bf 0b 02 00 00       	mov    $0x20b,%edi
    2024:	75 22                	jne    2048 <apply_EPC_pages+0x68>
    2026:	e8 a5 f6 ff ff       	callq  16d0 <_ZL19sgx_accept_backwardmmm>
    202b:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    2030:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    2037:	00 00 
    2039:	75 1c                	jne    2057 <apply_EPC_pages+0x77>
    203b:	48 83 c4 28          	add    $0x28,%rsp
    203f:	5b                   	pop    %rbx
    2040:	5d                   	pop    %rbp
    2041:	c3                   	retq   
    2042:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2048:	e8 a3 fc ff ff       	callq  1cf0 <sgx_accept_forward>
    204d:	eb dc                	jmp    202b <apply_EPC_pages+0x4b>
    204f:	90                   	nop
    2050:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    2055:	eb d4                	jmp    202b <apply_EPC_pages+0x4b>
    2057:	e8 94 24 00 00       	callq  44f0 <__stack_chk_fail>
    205c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002060 <trim_EPC_pages>:
    2060:	48 85 ff             	test   %rdi,%rdi
    2063:	74 65                	je     20ca <trim_EPC_pages+0x6a>
    2065:	55                   	push   %rbp
    2066:	53                   	push   %rbx
    2067:	31 c9                	xor    %ecx,%ecx
    2069:	31 d2                	xor    %edx,%edx
    206b:	48 89 f5             	mov    %rsi,%rbp
    206e:	48 89 fb             	mov    %rdi,%rbx
    2071:	48 83 ec 08          	sub    $0x8,%rsp
    2075:	e8 56 f8 ff ff       	callq  18d0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    207a:	85 c0                	test   %eax,%eax
    207c:	75 45                	jne    20c3 <trim_EPC_pages+0x63>
    207e:	48 c1 e5 0c          	shl    $0xc,%rbp
    2082:	48 89 df             	mov    %rbx,%rdi
    2085:	48 01 dd             	add    %rbx,%rbp
    2088:	48 89 ee             	mov    %rbp,%rsi
    208b:	e8 30 0e 00 00       	callq  2ec0 <trim_range_ocall>
    2090:	48 89 ea             	mov    %rbp,%rdx
    2093:	48 89 de             	mov    %rbx,%rsi
    2096:	bf 10 04 00 00       	mov    $0x410,%edi
    209b:	e8 50 fc ff ff       	callq  1cf0 <sgx_accept_forward>
    20a0:	48 39 eb             	cmp    %rbp,%rbx
    20a3:	73 17                	jae    20bc <trim_EPC_pages+0x5c>
    20a5:	0f 1f 00             	nopl   (%rax)
    20a8:	48 89 df             	mov    %rbx,%rdi
    20ab:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    20b2:	e8 69 0e 00 00       	callq  2f20 <trim_range_commit_ocall>
    20b7:	48 39 dd             	cmp    %rbx,%rbp
    20ba:	77 ec                	ja     20a8 <trim_EPC_pages+0x48>
    20bc:	48 83 c4 08          	add    $0x8,%rsp
    20c0:	5b                   	pop    %rbx
    20c1:	5d                   	pop    %rbp
    20c2:	c3                   	retq   
    20c3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    20c8:	eb f2                	jmp    20bc <trim_EPC_pages+0x5c>
    20ca:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    20cf:	c3                   	retq   

00000000000020d0 <do_add_thread>:
    20d0:	41 56                	push   %r14
    20d2:	41 55                	push   %r13
    20d4:	41 54                	push   %r12
    20d6:	55                   	push   %rbp
    20d7:	53                   	push   %rbx
    20d8:	48 89 fb             	mov    %rdi,%rbx
    20db:	48 83 ec 10          	sub    $0x10,%rsp
    20df:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    20e6:	00 00 
    20e8:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    20ed:	31 c0                	xor    %eax,%eax
    20ef:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    20f6:	00 
    20f7:	e8 6a 6a 00 00       	callq  8b66 <get_enclave_base>
    20fc:	31 c9                	xor    %ecx,%ecx
    20fe:	48 89 e2             	mov    %rsp,%rdx
    2101:	be 01 00 00 00       	mov    $0x1,%esi
    2106:	48 89 df             	mov    %rbx,%rdi
    2109:	48 89 c5             	mov    %rax,%rbp
    210c:	e8 bf f7 ff ff       	callq  18d0 <_ZL19check_dynamic_rangePvmPmP24dynamic_flags_attributes>
    2111:	85 c0                	test   %eax,%eax
    2113:	75 51                	jne    2166 <do_add_thread+0x96>
    2115:	4c 8d 25 e4 6f 00 00 	lea    0x6fe4(%rip),%r12        # 9100 <g_global_data>
    211c:	41 8b 84 24 30 01 00 	mov    0x130(%r12),%eax
    2123:	00 
    2124:	85 c0                	test   %eax,%eax
    2126:	74 3e                	je     2166 <do_add_thread+0x96>
    2128:	41 0f b7 84 24 38 01 	movzwl 0x138(%r12),%eax
    212f:	00 00 
    2131:	66 83 f8 0e          	cmp    $0xe,%ax
    2135:	0f 84 ae 01 00 00    	je     22e9 <do_add_thread+0x219>
    213b:	31 c0                	xor    %eax,%eax
    213d:	eb 18                	jmp    2157 <do_add_thread+0x87>
    213f:	90                   	nop
    2140:	89 c2                	mov    %eax,%edx
    2142:	48 c1 e2 05          	shl    $0x5,%rdx
    2146:	49 8d 0c 14          	lea    (%r12,%rdx,1),%rcx
    214a:	0f b7 89 38 01 00 00 	movzwl 0x138(%rcx),%ecx
    2151:	66 83 f9 0e          	cmp    $0xe,%cx
    2155:	74 39                	je     2190 <do_add_thread+0xc0>
    2157:	41 8b 94 24 30 01 00 	mov    0x130(%r12),%edx
    215e:	00 
    215f:	83 c0 01             	add    $0x1,%eax
    2162:	39 c2                	cmp    %eax,%edx
    2164:	77 da                	ja     2140 <do_add_thread+0x70>
    2166:	b8 01 00 00 00       	mov    $0x1,%eax
    216b:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    2170:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    2177:	00 00 
    2179:	0f 85 76 01 00 00    	jne    22f5 <do_add_thread+0x225>
    217f:	48 83 c4 10          	add    $0x10,%rsp
    2183:	5b                   	pop    %rbx
    2184:	5d                   	pop    %rbp
    2185:	41 5c                	pop    %r12
    2187:	41 5d                	pop    %r13
    2189:	41 5e                	pop    %r14
    218b:	c3                   	retq   
    218c:	0f 1f 40 00          	nopl   0x0(%rax)
    2190:	48 81 c2 38 01 00 00 	add    $0x138,%rdx
    2197:	4c 01 e2             	add    %r12,%rdx
    219a:	74 ca                	je     2166 <do_add_thread+0x96>
    219c:	48 c1 e0 05          	shl    $0x5,%rax
    21a0:	4c 8b 2c 24          	mov    (%rsp),%r13
    21a4:	4c 01 e0             	add    %r12,%rax
    21a7:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
    21ae:	49 01 ed             	add    %rbp,%r13
    21b1:	49 01 c5             	add    %rax,%r13
    21b4:	4c 39 eb             	cmp    %r13,%rbx
    21b7:	75 ad                	jne    2166 <do_add_thread+0x96>
    21b9:	41 be 0e 00 00 00    	mov    $0xe,%r14d
    21bf:	90                   	nop
    21c0:	41 8b 84 24 30 01 00 	mov    0x130(%r12),%eax
    21c7:	00 
    21c8:	85 c0                	test   %eax,%eax
    21ca:	74 46                	je     2212 <do_add_thread+0x142>
    21cc:	41 0f b7 84 24 38 01 	movzwl 0x138(%r12),%eax
    21d3:	00 00 
    21d5:	66 44 39 f0          	cmp    %r14w,%ax
    21d9:	0f 84 01 01 00 00    	je     22e0 <do_add_thread+0x210>
    21df:	31 c0                	xor    %eax,%eax
    21e1:	eb 20                	jmp    2203 <do_add_thread+0x133>
    21e3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    21e8:	89 c2                	mov    %eax,%edx
    21ea:	48 c1 e2 05          	shl    $0x5,%rdx
    21ee:	49 8d 0c 14          	lea    (%r12,%rdx,1),%rcx
    21f2:	0f b7 89 38 01 00 00 	movzwl 0x138(%rcx),%ecx
    21f9:	66 44 39 f1          	cmp    %r14w,%cx
    21fd:	0f 84 85 00 00 00    	je     2288 <do_add_thread+0x1b8>
    2203:	41 8b 94 24 30 01 00 	mov    0x130(%r12),%edx
    220a:	00 
    220b:	83 c0 01             	add    $0x1,%eax
    220e:	39 c2                	cmp    %eax,%edx
    2210:	77 d6                	ja     21e8 <do_add_thread+0x118>
    2212:	41 83 c6 01          	add    $0x1,%r14d
    2216:	66 41 83 fe 13       	cmp    $0x13,%r14w
    221b:	75 a3                	jne    21c0 <do_add_thread+0xf0>
    221d:	49 8d b4 24 e8 00 00 	lea    0xe8(%r12),%rsi
    2224:	00 
    2225:	ba 48 00 00 00       	mov    $0x48,%edx
    222a:	48 89 df             	mov    %rbx,%rdi
    222d:	e8 2e 5a 00 00       	callq  7c60 <memcpy>
    2232:	4c 89 e8             	mov    %r13,%rax
    2235:	31 ff                	xor    %edi,%edi
    2237:	48 89 de             	mov    %rbx,%rsi
    223a:	48 29 e8             	sub    %rbp,%rax
    223d:	48 01 43 10          	add    %rax,0x10(%rbx)
    2241:	4c 89 e8             	mov    %r13,%rax
    2244:	48 29 e8             	sub    %rbp,%rax
    2247:	48 01 43 30          	add    %rax,0x30(%rbx)
    224b:	4c 89 e8             	mov    %r13,%rax
    224e:	48 29 e8             	sub    %rbp,%rax
    2251:	48 01 43 38          	add    %rax,0x38(%rbx)
    2255:	e8 56 0b 00 00       	callq  2db0 <sgx_ocall>
    225a:	85 c0                	test   %eax,%eax
    225c:	0f 85 04 ff ff ff    	jne    2166 <do_add_thread+0x96>
    2262:	49 8d 95 00 10 00 00 	lea    0x1000(%r13),%rdx
    2269:	4c 89 ee             	mov    %r13,%rsi
    226c:	bf 10 01 00 00       	mov    $0x110,%edi
    2271:	e8 5a f4 ff ff       	callq  16d0 <_ZL19sgx_accept_backwardmmm>
    2276:	85 c0                	test   %eax,%eax
    2278:	0f 95 c0             	setne  %al
    227b:	0f b6 c0             	movzbl %al,%eax
    227e:	e9 e8 fe ff ff       	jmpq   216b <do_add_thread+0x9b>
    2283:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2288:	48 81 c2 38 01 00 00 	add    $0x138,%rdx
    228f:	4c 01 e2             	add    %r12,%rdx
    2292:	0f 84 7a ff ff ff    	je     2212 <do_add_thread+0x142>
    2298:	48 c1 e0 05          	shl    $0x5,%rax
    229c:	4c 01 e0             	add    %r12,%rax
    229f:	0f b7 90 3a 01 00 00 	movzwl 0x13a(%rax),%edx
    22a6:	83 e2 20             	and    $0x20,%edx
    22a9:	0f 84 63 ff ff ff    	je     2212 <do_add_thread+0x142>
    22af:	48 8b 3c 24          	mov    (%rsp),%rdi
    22b3:	8b b0 3c 01 00 00    	mov    0x13c(%rax),%esi
    22b9:	48 8b 80 40 01 00 00 	mov    0x140(%rax),%rax
    22c0:	48 01 ef             	add    %rbp,%rdi
    22c3:	48 01 c7             	add    %rax,%rdi
    22c6:	e8 15 fd ff ff       	callq  1fe0 <apply_EPC_pages>
    22cb:	85 c0                	test   %eax,%eax
    22cd:	0f 84 3f ff ff ff    	je     2212 <do_add_thread+0x142>
    22d3:	e9 8e fe ff ff       	jmpq   2166 <do_add_thread+0x96>
    22d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    22df:	00 
    22e0:	ba 38 01 00 00       	mov    $0x138,%edx
    22e5:	31 c0                	xor    %eax,%eax
    22e7:	eb a6                	jmp    228f <do_add_thread+0x1bf>
    22e9:	ba 38 01 00 00       	mov    $0x138,%edx
    22ee:	31 c0                	xor    %eax,%eax
    22f0:	e9 a2 fe ff ff       	jmpq   2197 <do_add_thread+0xc7>
    22f5:	e8 f6 21 00 00       	callq  44f0 <__stack_chk_fail>
    22fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002300 <_pthread_thread_run>:
    2300:	31 c0                	xor    %eax,%eax
    2302:	c3                   	retq   
    2303:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    230a:	00 00 00 
    230d:	0f 1f 00             	nopl   (%rax)

0000000000002310 <_ZL11do_save_tcsPv>:
    2310:	55                   	push   %rbp
    2311:	53                   	push   %rbx
    2312:	48 89 fb             	mov    %rdi,%rbx
    2315:	48 83 ec 18          	sub    $0x18,%rsp
    2319:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2320:	00 00 
    2322:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2327:	31 c0                	xor    %eax,%eax
    2329:	48 83 3d 97 ad 00 00 	cmpq   $0x0,0xad97(%rip)        # d0c8 <_ZL12g_tcs_cookie>
    2330:	00 
    2331:	74 4d                	je     2380 <_ZL11do_save_tcsPv+0x70>
    2333:	bf 10 00 00 00       	mov    $0x10,%edi
    2338:	e8 33 2a 00 00       	callq  4d70 <dlmalloc>
    233d:	48 89 c2             	mov    %rax,%rdx
    2340:	b8 01 00 00 00       	mov    $0x1,%eax
    2345:	48 85 d2             	test   %rdx,%rdx
    2348:	74 1e                	je     2368 <_ZL11do_save_tcsPv+0x58>
    234a:	48 33 1d 77 ad 00 00 	xor    0xad77(%rip),%rbx        # d0c8 <_ZL12g_tcs_cookie>
    2351:	48 8b 05 78 ad 00 00 	mov    0xad78(%rip),%rax        # d0d0 <_ZL10g_tcs_node>
    2358:	48 89 15 71 ad 00 00 	mov    %rdx,0xad71(%rip)        # d0d0 <_ZL10g_tcs_node>
    235f:	48 89 42 08          	mov    %rax,0x8(%rdx)
    2363:	31 c0                	xor    %eax,%eax
    2365:	48 89 1a             	mov    %rbx,(%rdx)
    2368:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    236d:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2374:	00 00 
    2376:	75 5a                	jne    23d2 <_ZL11do_save_tcsPv+0xc2>
    2378:	48 83 c4 18          	add    $0x18,%rsp
    237c:	5b                   	pop    %rbx
    237d:	5d                   	pop    %rbp
    237e:	c3                   	retq   
    237f:	90                   	nop
    2380:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    2387:	00 
    2388:	48 89 e5             	mov    %rsp,%rbp
    238b:	eb 0c                	jmp    2399 <_ZL11do_save_tcsPv+0x89>
    238d:	0f 1f 00             	nopl   (%rax)
    2390:	48 8b 04 24          	mov    (%rsp),%rax
    2394:	48 85 c0             	test   %rax,%rax
    2397:	75 1f                	jne    23b8 <_ZL11do_save_tcsPv+0xa8>
    2399:	be 08 00 00 00       	mov    $0x8,%esi
    239e:	48 89 ef             	mov    %rbp,%rdi
    23a1:	e8 aa f1 ff ff       	callq  1550 <sgx_read_rand>
    23a6:	85 c0                	test   %eax,%eax
    23a8:	74 e6                	je     2390 <_ZL11do_save_tcsPv+0x80>
    23aa:	b8 01 00 00 00       	mov    $0x1,%eax
    23af:	eb b7                	jmp    2368 <_ZL11do_save_tcsPv+0x58>
    23b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    23b8:	48 83 3d 08 ad 00 00 	cmpq   $0x0,0xad08(%rip)        # d0c8 <_ZL12g_tcs_cookie>
    23bf:	00 
    23c0:	0f 85 6d ff ff ff    	jne    2333 <_ZL11do_save_tcsPv+0x23>
    23c6:	48 89 05 fb ac 00 00 	mov    %rax,0xacfb(%rip)        # d0c8 <_ZL12g_tcs_cookie>
    23cd:	e9 61 ff ff ff       	jmpq   2333 <_ZL11do_save_tcsPv+0x23>
    23d2:	e8 19 21 00 00       	callq  44f0 <__stack_chk_fail>
    23d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    23de:	00 00 

00000000000023e0 <_ZL18add_static_threadsPVK9_layout_tS1_m>:
    23e0:	48 39 f7             	cmp    %rsi,%rdi
    23e3:	0f 83 cf 00 00 00    	jae    24b8 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xd8>
    23e9:	41 56                	push   %r14
    23eb:	41 55                	push   %r13
    23ed:	41 54                	push   %r12
    23ef:	49 89 d4             	mov    %rdx,%r12
    23f2:	55                   	push   %rbp
    23f3:	48 89 f5             	mov    %rsi,%rbp
    23f6:	53                   	push   %rbx
    23f7:	48 89 fb             	mov    %rdi,%rbx
    23fa:	eb 11                	jmp    240d <_ZL18add_static_threadsPVK9_layout_tS1_m+0x2d>
    23fc:	0f 1f 40 00          	nopl   0x0(%rax)
    2400:	48 83 c3 20          	add    $0x20,%rbx
    2404:	48 39 dd             	cmp    %rbx,%rbp
    2407:	0f 86 9b 00 00 00    	jbe    24a8 <_ZL18add_static_threadsPVK9_layout_tS1_m+0xc8>
    240d:	0f b7 03             	movzwl (%rbx),%eax
    2410:	f6 c4 10             	test   $0x10,%ah
    2413:	75 13                	jne    2428 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x48>
    2415:	48 8b 43 18          	mov    0x18(%rbx),%rax
    2419:	f6 c4 01             	test   $0x1,%ah
    241c:	74 0a                	je     2428 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x48>
    241e:	0f b7 43 02          	movzwl 0x2(%rbx),%eax
    2422:	66 83 f8 03          	cmp    $0x3,%ax
    2426:	74 50                	je     2478 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x98>
    2428:	0f b7 03             	movzwl (%rbx),%eax
    242b:	f6 c4 10             	test   $0x10,%ah
    242e:	74 d0                	je     2400 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    2430:	8b 43 04             	mov    0x4(%rbx),%eax
    2433:	85 c0                	test   %eax,%eax
    2435:	74 c9                	je     2400 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    2437:	45 31 f6             	xor    %r14d,%r14d
    243a:	45 31 ed             	xor    %r13d,%r13d
    243d:	48 8b 43 08          	mov    0x8(%rbx),%rax
    2441:	0f b7 7b 02          	movzwl 0x2(%rbx),%edi
    2445:	48 89 de             	mov    %rbx,%rsi
    2448:	49 01 c5             	add    %rax,%r13
    244b:	f7 df                	neg    %edi
    244d:	4c 89 ea             	mov    %r13,%rdx
    2450:	48 63 ff             	movslq %edi,%rdi
    2453:	48 c1 e7 05          	shl    $0x5,%rdi
    2457:	48 01 df             	add    %rbx,%rdi
    245a:	e8 81 ff ff ff       	callq  23e0 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    245f:	85 c0                	test   %eax,%eax
    2461:	75 38                	jne    249b <_ZL18add_static_threadsPVK9_layout_tS1_m+0xbb>
    2463:	8b 43 04             	mov    0x4(%rbx),%eax
    2466:	41 83 c6 01          	add    $0x1,%r14d
    246a:	44 39 f0             	cmp    %r14d,%eax
    246d:	77 ce                	ja     243d <_ZL18add_static_threadsPVK9_layout_tS1_m+0x5d>
    246f:	eb 8f                	jmp    2400 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    2471:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2478:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    247c:	4e 8d 2c 27          	lea    (%rdi,%r12,1),%r13
    2480:	e8 e1 66 00 00       	callq  8b66 <get_enclave_base>
    2485:	4a 8d 3c 28          	lea    (%rax,%r13,1),%rdi
    2489:	e8 82 fe ff ff       	callq  2310 <_ZL11do_save_tcsPv>
    248e:	85 c0                	test   %eax,%eax
    2490:	0f 84 6a ff ff ff    	je     2400 <_ZL18add_static_threadsPVK9_layout_tS1_m+0x20>
    2496:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    249b:	5b                   	pop    %rbx
    249c:	5d                   	pop    %rbp
    249d:	41 5c                	pop    %r12
    249f:	41 5d                	pop    %r13
    24a1:	41 5e                	pop    %r14
    24a3:	c3                   	retq   
    24a4:	0f 1f 40 00          	nopl   0x0(%rax)
    24a8:	5b                   	pop    %rbx
    24a9:	31 c0                	xor    %eax,%eax
    24ab:	5d                   	pop    %rbp
    24ac:	41 5c                	pop    %r12
    24ae:	41 5d                	pop    %r13
    24b0:	41 5e                	pop    %r14
    24b2:	c3                   	retq   
    24b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    24b8:	31 c0                	xor    %eax,%eax
    24ba:	c3                   	retq   
    24bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000024c0 <_ZL10trts_ecalljPv>:
    24c0:	0f b6 05 43 ab 00 00 	movzbl 0xab43(%rip),%eax        # d00a <_ZL16g_is_first_ecall>
    24c7:	41 54                	push   %r12
    24c9:	55                   	push   %rbp
    24ca:	48 89 f5             	mov    %rsi,%rbp
    24cd:	53                   	push   %rbx
    24ce:	89 fb                	mov    %edi,%ebx
    24d0:	84 c0                	test   %al,%al
    24d2:	0f 85 c8 00 00 00    	jne    25a0 <_ZL10trts_ecalljPv+0xe0>
    24d8:	83 fb fa             	cmp    $0xfffffffa,%ebx
    24db:	74 73                	je     2550 <_ZL10trts_ecalljPv+0x90>
    24dd:	4c 8d 25 fc a8 00 00 	lea    0xa8fc(%rip),%r12        # cde0 <g_ecall_table>
    24e4:	49 3b 1c 24          	cmp    (%r12),%rbx
    24e8:	73 7e                	jae    2568 <_ZL10trts_ecalljPv+0xa8>
    24ea:	e8 b2 66 00 00       	callq  8ba1 <get_thread_data>
    24ef:	0f ae e8             	lfence 
    24f2:	48 8b 50 08          	mov    0x8(%rax),%rdx
    24f6:	48 3b 50 10          	cmp    0x10(%rax),%rdx
    24fa:	0f 84 80 00 00 00    	je     2580 <_ZL10trts_ecalljPv+0xc0>
    2500:	48 81 7a 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdx)
    2507:	4f 
    2508:	0f 85 3e 01 00 00    	jne    264c <_ZL10trts_ecalljPv+0x18c>
    250e:	48 8d 05 0b 6b 00 00 	lea    0x6b0b(%rip),%rax        # 9020 <g_dyn_entry_table>
    2515:	48 8b 52 28          	mov    0x28(%rdx),%rdx
    2519:	48 3b 10             	cmp    (%rax),%rdx
    251c:	73 4a                	jae    2568 <_ZL10trts_ecalljPv+0xa8>
    251e:	49 0f af 14 24       	imul   (%r12),%rdx
    2523:	48 01 d8             	add    %rbx,%rax
    2526:	80 7c 02 08 00       	cmpb   $0x0,0x8(%rdx,%rax,1)
    252b:	74 62                	je     258f <_ZL10trts_ecalljPv+0xcf>
    252d:	48 c1 e3 04          	shl    $0x4,%rbx
    2531:	31 f6                	xor    %esi,%esi
    2533:	49 8b 5c 1c 08       	mov    0x8(%r12,%rbx,1),%rbx
    2538:	48 89 df             	mov    %rbx,%rdi
    253b:	e8 30 ee ff ff       	callq  1370 <sgx_is_within_enclave>
    2540:	85 c0                	test   %eax,%eax
    2542:	0f 84 e8 00 00 00    	je     2630 <_ZL10trts_ecalljPv+0x170>
    2548:	48 89 d8             	mov    %rbx,%rax
    254b:	eb 0a                	jmp    2557 <_ZL10trts_ecalljPv+0x97>
    254d:	0f 1f 00             	nopl   (%rax)
    2550:	48 8d 05 a9 fd ff ff 	lea    -0x257(%rip),%rax        # 2300 <_pthread_thread_run>
    2557:	0f ae e8             	lfence 
    255a:	48 89 ef             	mov    %rbp,%rdi
    255d:	5b                   	pop    %rbx
    255e:	5d                   	pop    %rbp
    255f:	41 5c                	pop    %r12
    2561:	ff e0                	jmpq   *%rax
    2563:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2568:	41 bc 01 10 00 00    	mov    $0x1001,%r12d
    256e:	44 89 e0             	mov    %r12d,%eax
    2571:	5b                   	pop    %rbx
    2572:	5d                   	pop    %rbp
    2573:	41 5c                	pop    %r12
    2575:	c3                   	retq   
    2576:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    257d:	00 00 00 
    2580:	48 89 d8             	mov    %rbx,%rax
    2583:	48 c1 e0 04          	shl    $0x4,%rax
    2587:	41 80 7c 04 10 00    	cmpb   $0x0,0x10(%r12,%rax,1)
    258d:	74 9e                	je     252d <_ZL10trts_ecalljPv+0x6d>
    258f:	41 bc 07 10 00 00    	mov    $0x1007,%r12d
    2595:	44 89 e0             	mov    %r12d,%eax
    2598:	5b                   	pop    %rbx
    2599:	5d                   	pop    %rbp
    259a:	41 5c                	pop    %r12
    259c:	c3                   	retq   
    259d:	0f 1f 00             	nopl   (%rax)
    25a0:	e8 fc 65 00 00       	callq  8ba1 <get_thread_data>
    25a5:	48 8b 48 10          	mov    0x10(%rax),%rcx
    25a9:	48 39 48 08          	cmp    %rcx,0x8(%rax)
    25ad:	75 e0                	jne    258f <_ZL10trts_ecalljPv+0xcf>
    25af:	48 8d 3d 0e ab 00 00 	lea    0xab0e(%rip),%rdi        # d0c4 <_ZL10g_ife_lock>
    25b6:	e8 d5 58 00 00       	callq  7e90 <sgx_spin_lock>
    25bb:	0f b6 05 48 aa 00 00 	movzbl 0xaa48(%rip),%eax        # d00a <_ZL16g_is_first_ecall>
    25c2:	84 c0                	test   %al,%al
    25c4:	74 52                	je     2618 <_ZL10trts_ecalljPv+0x158>
    25c6:	48 8d 05 5b a8 00 00 	lea    0xa85b(%rip),%rax        # ce28 <EDMM_supported>
    25cd:	8b 00                	mov    (%rax),%eax
    25cf:	85 c0                	test   %eax,%eax
    25d1:	74 39                	je     260c <_ZL10trts_ecalljPv+0x14c>
    25d3:	48 8d 05 26 6b 00 00 	lea    0x6b26(%rip),%rax        # 9100 <g_global_data>
    25da:	31 d2                	xor    %edx,%edx
    25dc:	8b b0 30 01 00 00    	mov    0x130(%rax),%esi
    25e2:	48 8d b8 38 01 00 00 	lea    0x138(%rax),%rdi
    25e9:	48 c1 e6 05          	shl    $0x5,%rsi
    25ed:	48 01 fe             	add    %rdi,%rsi
    25f0:	e8 eb fd ff ff       	callq  23e0 <_ZL18add_static_threadsPVK9_layout_tS1_m>
    25f5:	85 c0                	test   %eax,%eax
    25f7:	75 37                	jne    2630 <_ZL10trts_ecalljPv+0x170>
    25f9:	48 8d 3d 00 da ff ff 	lea    -0x2600(%rip),%rdi        # 0 <__ImageBase>
    2600:	e8 8b 19 00 00       	callq  3f90 <change_protection>
    2605:	85 c0                	test   %eax,%eax
    2607:	41 89 c4             	mov    %eax,%r12d
    260a:	75 2f                	jne    263b <_ZL10trts_ecalljPv+0x17b>
    260c:	e8 2f 1d 00 00       	callq  4340 <init_global_object>
    2611:	c6 05 f2 a9 00 00 00 	movb   $0x0,0xa9f2(%rip)        # d00a <_ZL16g_is_first_ecall>
    2618:	48 8d 3d a5 aa 00 00 	lea    0xaaa5(%rip),%rdi        # d0c4 <_ZL10g_ife_lock>
    261f:	e8 cc 58 00 00       	callq  7ef0 <sgx_spin_unlock>
    2624:	e9 af fe ff ff       	jmpq   24d8 <_ZL10trts_ecalljPv+0x18>
    2629:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2630:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    2636:	e9 33 ff ff ff       	jmpq   256e <_ZL10trts_ecalljPv+0xae>
    263b:	48 8d 3d 82 aa 00 00 	lea    0xaa82(%rip),%rdi        # d0c4 <_ZL10g_ife_lock>
    2642:	e8 a9 58 00 00       	callq  7ef0 <sgx_spin_unlock>
    2647:	e9 22 ff ff ff       	jmpq   256e <_ZL10trts_ecalljPv+0xae>
    264c:	e8 7f 68 00 00       	callq  8ed0 <abort>
    2651:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2658:	00 00 00 
    265b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002660 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.isra.0.constprop.3>:
    2660:	e9 5b fe ff ff       	jmpq   24c0 <_ZL10trts_ecalljPv>
    2665:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    266c:	00 00 00 
    266f:	90                   	nop

0000000000002670 <_Z16_pthread_enabledv>:
    2670:	31 c0                	xor    %eax,%eax
    2672:	c3                   	retq   
    2673:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    267a:	00 00 00 
    267d:	0f 1f 00             	nopl   (%rax)

0000000000002680 <_Z24_pthread_tls_store_state9_status_t>:
    2680:	f3 c3                	repz retq 
    2682:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2689:	00 00 00 
    268c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002690 <_Z22_pthread_tls_get_statev>:
    2690:	31 c0                	xor    %eax,%eax
    2692:	c3                   	retq   
    2693:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    269a:	00 00 00 
    269d:	0f 1f 00             	nopl   (%rax)

00000000000026a0 <_Z26_pthread_tls_store_contextPv>:
    26a0:	f3 c3                	repz retq 
    26a2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    26a9:	00 00 00 
    26ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000026b0 <_Z20_pthread_wakeup_joinPv>:
    26b0:	f3 c3                	repz retq 
    26b2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    26b9:	00 00 00 
    26bc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000026c0 <_Z24_pthread_tls_destructorsv>:
    26c0:	f3 c3                	repz retq 
    26c2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    26c9:	00 00 00 
    26cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000026d0 <do_init_thread>:
    26d0:	41 57                	push   %r15
    26d2:	41 56                	push   %r14
    26d4:	ba a0 00 00 00       	mov    $0xa0,%edx
    26d9:	41 55                	push   %r13
    26db:	41 54                	push   %r12
    26dd:	41 89 f4             	mov    %esi,%r12d
    26e0:	55                   	push   %rbp
    26e1:	53                   	push   %rbx
    26e2:	48 89 fd             	mov    %rdi,%rbp
    26e5:	48 83 ec 28          	sub    $0x28,%rsp
    26e9:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    26f0:	00 00 
    26f2:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    26f7:	31 c0                	xor    %eax,%eax
    26f9:	48 8d 05 00 6a 00 00 	lea    0x6a00(%rip),%rax        # 9100 <g_global_data>
    2700:	48 8b 58 48          	mov    0x48(%rax),%rbx
    2704:	48 8d 70 48          	lea    0x48(%rax),%rsi
    2708:	48 01 fb             	add    %rdi,%rbx
    270b:	48 89 df             	mov    %rbx,%rdi
    270e:	4c 8b 7b 28          	mov    0x28(%rbx),%r15
    2712:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    2716:	4c 8b ab 98 00 00 00 	mov    0x98(%rbx),%r13
    271d:	e8 3e 55 00 00       	callq  7c60 <memcpy>
    2722:	48 8b 53 18          	mov    0x18(%rbx),%rdx
    2726:	48 8d 85 50 fd ff ff 	lea    -0x2b0(%rbp),%rax
    272d:	48 01 2b             	add    %rbp,(%rbx)
    2730:	48 01 6b 20          	add    %rbp,0x20(%rbx)
    2734:	4c 89 7b 28          	mov    %r15,0x28(%rbx)
    2738:	48 01 6b 58          	add    %rbp,0x58(%rbx)
    273c:	4c 89 73 30          	mov    %r14,0x30(%rbx)
    2740:	48 01 ea             	add    %rbp,%rdx
    2743:	48 01 6b 50          	add    %rbp,0x50(%rbx)
    2747:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    274b:	48 89 93 98 00 00 00 	mov    %rdx,0x98(%rbx)
    2752:	48 8b 53 08          	mov    0x8(%rbx),%rdx
    2756:	48 01 c2             	add    %rax,%rdx
    2759:	48 03 43 10          	add    0x10(%rbx),%rax
    275d:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    2761:	48 89 43 10          	mov    %rax,0x10(%rbx)
    2765:	48 8d 05 ac a6 00 00 	lea    0xa6ac(%rip),%rax        # ce18 <__intel_security_cookie>
    276c:	48 8b 00             	mov    (%rax),%rax
    276f:	48 89 85 58 fd fe ff 	mov    %rax,-0x102a8(%rbp)
    2776:	48 8d 05 ab a6 00 00 	lea    0xa6ab(%rip),%rax        # ce28 <EDMM_supported>
    277d:	8b 00                	mov    (%rax),%eax
    277f:	85 c0                	test   %eax,%eax
    2781:	0f 84 89 00 00 00    	je     2810 <do_init_thread+0x140>
    2787:	45 84 e4             	test   %r12b,%r12b
    278a:	0f 84 90 00 00 00    	je     2820 <do_init_thread+0x150>
    2790:	4d 85 ed             	test   %r13,%r13
    2793:	48 c7 43 30 01 00 00 	movq   $0x1,0x30(%rbx)
    279a:	00 
    279b:	75 78                	jne    2815 <do_init_thread+0x145>
    279d:	e8 ce f4 ff ff       	callq  1c70 <get_dynamic_stack_max_page>
    27a2:	89 c0                	mov    %eax,%eax
    27a4:	48 c1 e0 0c          	shl    $0xc,%rax
    27a8:	48 01 83 98 00 00 00 	add    %rax,0x98(%rbx)
    27af:	90                   	nop
    27b0:	48 8d 3d 49 d8 ff ff 	lea    -0x27b7(%rip),%rdi        # 0 <__ImageBase>
    27b7:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    27bc:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    27c1:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    27c8:	00 00 
    27ca:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    27d1:	00 00 
    27d3:	e8 58 15 00 00       	callq  3d30 <elf_tls_info>
    27d8:	85 c0                	test   %eax,%eax
    27da:	ba 01 00 00 00       	mov    $0x1,%edx
    27df:	75 0a                	jne    27eb <do_init_thread+0x11b>
    27e1:	48 83 7c 24 08 00    	cmpq   $0x0,0x8(%rsp)
    27e7:	75 57                	jne    2840 <do_init_thread+0x170>
    27e9:	31 d2                	xor    %edx,%edx
    27eb:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
    27f0:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    27f7:	00 00 
    27f9:	89 d0                	mov    %edx,%eax
    27fb:	0f 85 8c 00 00 00    	jne    288d <do_init_thread+0x1bd>
    2801:	48 83 c4 28          	add    $0x28,%rsp
    2805:	5b                   	pop    %rbx
    2806:	5d                   	pop    %rbp
    2807:	41 5c                	pop    %r12
    2809:	41 5d                	pop    %r13
    280b:	41 5e                	pop    %r14
    280d:	41 5f                	pop    %r15
    280f:	c3                   	retq   
    2810:	4d 85 ed             	test   %r13,%r13
    2813:	74 9b                	je     27b0 <do_init_thread+0xe0>
    2815:	4c 89 ab 98 00 00 00 	mov    %r13,0x98(%rbx)
    281c:	eb 92                	jmp    27b0 <do_init_thread+0xe0>
    281e:	66 90                	xchg   %ax,%ax
    2820:	4d 85 ed             	test   %r13,%r13
    2823:	75 f0                	jne    2815 <do_init_thread+0x145>
    2825:	48 89 ef             	mov    %rbp,%rdi
    2828:	e8 63 f3 ff ff       	callq  1b90 <is_dynamic_thread>
    282d:	85 c0                	test   %eax,%eax
    282f:	0f 85 68 ff ff ff    	jne    279d <do_init_thread+0xcd>
    2835:	e9 76 ff ff ff       	jmpq   27b0 <do_init_thread+0xe0>
    283a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2840:	48 8b 03             	mov    (%rbx),%rax
    2843:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    2847:	31 f6                	xor    %esi,%esi
    2849:	48 8d 90 ff 0f 00 00 	lea    0xfff(%rax),%rdx
    2850:	48 29 fa             	sub    %rdi,%rdx
    2853:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    285a:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx
    2861:	e8 47 54 00 00       	callq  7cad <memset>
    2866:	48 8b 7b 50          	mov    0x50(%rbx),%rdi
    286a:	48 8b 03             	mov    (%rbx),%rax
    286d:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    2872:	48 29 f8             	sub    %rdi,%rax
    2875:	48 39 c2             	cmp    %rax,%rdx
    2878:	0f 87 6b ff ff ff    	ja     27e9 <do_init_thread+0x119>
    287e:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    2883:	e8 d8 53 00 00       	callq  7c60 <memcpy>
    2888:	e9 5c ff ff ff       	jmpq   27e9 <do_init_thread+0x119>
    288d:	e8 5e 1c 00 00       	callq  44f0 <__stack_chk_fail>
    2892:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2899:	00 00 00 
    289c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000028a0 <do_ecall>:
    28a0:	55                   	push   %rbp
    28a1:	53                   	push   %rbx
    28a2:	48 89 d5             	mov    %rdx,%rbp
    28a5:	bb 01 00 00 00       	mov    $0x1,%ebx
    28aa:	48 83 ec 78          	sub    $0x78,%rsp
    28ae:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    28b5:	00 00 
    28b7:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    28bc:	31 c0                	xor    %eax,%eax
    28be:	89 7c 24 14          	mov    %edi,0x14(%rsp)
    28c2:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    28c7:	e8 a2 62 00 00       	callq  8b6e <get_enclave_state>
    28cc:	83 f8 02             	cmp    $0x2,%eax
    28cf:	74 1f                	je     28f0 <do_ecall+0x50>
    28d1:	48 8b 4c 24 68       	mov    0x68(%rsp),%rcx
    28d6:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    28dd:	00 00 
    28df:	89 d8                	mov    %ebx,%eax
    28e1:	0f 85 51 01 00 00    	jne    2a38 <do_ecall+0x198>
    28e7:	48 83 c4 78          	add    $0x78,%rsp
    28eb:	5b                   	pop    %rbx
    28ec:	5d                   	pop    %rbp
    28ed:	c3                   	retq   
    28ee:	66 90                	xchg   %ax,%ax
    28f0:	e8 ac 62 00 00       	callq  8ba1 <get_thread_data>
    28f5:	48 85 c0             	test   %rax,%rax
    28f8:	74 4a                	je     2944 <do_ecall+0xa4>
    28fa:	48 8b 48 08          	mov    0x8(%rax),%rcx
    28fe:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    2902:	74 2c                	je     2930 <do_ecall+0x90>
    2904:	e8 98 62 00 00       	callq  8ba1 <get_thread_data>
    2909:	48 8b 50 08          	mov    0x8(%rax),%rdx
    290d:	48 39 50 10          	cmp    %rdx,0x10(%rax)
    2911:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    2916:	74 48                	je     2960 <do_ecall+0xc0>
    2918:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    291d:	8b 7c 24 14          	mov    0x14(%rsp),%edi
    2921:	e8 9a fb ff ff       	callq  24c0 <_ZL10trts_ecalljPv>
    2926:	89 c3                	mov    %eax,%ebx
    2928:	eb a7                	jmp    28d1 <do_ecall+0x31>
    292a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2930:	48 8d 05 c9 67 00 00 	lea    0x67c9(%rip),%rax        # 9100 <g_global_data>
    2937:	48 8b 40 38          	mov    0x38(%rax),%rax
    293b:	48 85 c0             	test   %rax,%rax
    293e:	0f 84 7c 00 00 00    	je     29c0 <do_ecall+0x120>
    2944:	31 f6                	xor    %esi,%esi
    2946:	48 89 ef             	mov    %rbp,%rdi
    2949:	e8 82 fd ff ff       	callq  26d0 <do_init_thread>
    294e:	85 c0                	test   %eax,%eax
    2950:	89 c3                	mov    %eax,%ebx
    2952:	74 b0                	je     2904 <do_ecall+0x64>
    2954:	e9 78 ff ff ff       	jmpq   28d1 <do_ecall+0x31>
    2959:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2960:	e8 0b fd ff ff       	callq  2670 <_Z16_pthread_enabledv>
    2965:	84 c0                	test   %al,%al
    2967:	74 77                	je     29e0 <do_ecall+0x140>
    2969:	66 0f ef c0          	pxor   %xmm0,%xmm0
    296d:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    2972:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    2977:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    297c:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    2981:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    2986:	e8 27 56 00 00       	callq  7fb2 <setjmp>
    298b:	85 c0                	test   %eax,%eax
    298d:	74 71                	je     2a00 <do_ecall+0x160>
    298f:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    2994:	bb 09 00 00 00       	mov    $0x9,%ebx
    2999:	48 8b 46 10          	mov    0x10(%rsi),%rax
    299d:	48 89 46 08          	mov    %rax,0x8(%rsi)
    29a1:	bf 09 00 00 00       	mov    $0x9,%edi
    29a6:	e8 d5 fc ff ff       	callq  2680 <_Z24_pthread_tls_store_state9_status_t>
    29ab:	e8 10 fd ff ff       	callq  26c0 <_Z24_pthread_tls_destructorsv>
    29b0:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    29b5:	e8 f6 fc ff ff       	callq  26b0 <_Z20_pthread_wakeup_joinPv>
    29ba:	e9 12 ff ff ff       	jmpq   28d1 <do_ecall+0x31>
    29bf:	90                   	nop
    29c0:	e8 cb fc ff ff       	callq  2690 <_Z22_pthread_tls_get_statev>
    29c5:	83 f8 09             	cmp    $0x9,%eax
    29c8:	0f 84 76 ff ff ff    	je     2944 <do_ecall+0xa4>
    29ce:	83 7c 24 14 fa       	cmpl   $0xfffffffa,0x14(%rsp)
    29d3:	0f 85 2b ff ff ff    	jne    2904 <do_ecall+0x64>
    29d9:	e9 66 ff ff ff       	jmpq   2944 <do_ecall+0xa4>
    29de:	66 90                	xchg   %ax,%ax
    29e0:	0f c7 f0             	rdrand %eax
    29e3:	73 fb                	jae    29e0 <do_ecall+0x140>
    29e5:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    29ea:	8b 7c 24 14          	mov    0x14(%rsp),%edi
    29ee:	e8 6d fc ff ff       	callq  2660 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.isra.0.constprop.3>
    29f3:	89 c3                	mov    %eax,%ebx
    29f5:	e9 d7 fe ff ff       	jmpq   28d1 <do_ecall+0x31>
    29fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2a00:	48 8d 7c 24 20       	lea    0x20(%rsp),%rdi
    2a05:	e8 96 fc ff ff       	callq  26a0 <_Z26_pthread_tls_store_contextPv>
    2a0a:	0f c7 f0             	rdrand %eax
    2a0d:	73 fb                	jae    2a0a <do_ecall+0x16a>
    2a0f:	8b 6c 24 14          	mov    0x14(%rsp),%ebp
    2a13:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    2a18:	89 ef                	mov    %ebp,%edi
    2a1a:	e8 41 fc ff ff       	callq  2660 <_Z30_random_stack_noinline_wrapperI9_status_tJjPvEJRiRS1_EET_PFS4_DpT0_EDpOT1_.isra.0.constprop.3>
    2a1f:	83 fd fa             	cmp    $0xfffffffa,%ebp
    2a22:	89 c3                	mov    %eax,%ebx
    2a24:	0f 84 77 ff ff ff    	je     29a1 <do_ecall+0x101>
    2a2a:	83 fb 09             	cmp    $0x9,%ebx
    2a2d:	0f 85 78 ff ff ff    	jne    29ab <do_ecall+0x10b>
    2a33:	e9 69 ff ff ff       	jmpq   29a1 <do_ecall+0x101>
    2a38:	e8 b3 1a 00 00       	callq  44f0 <__stack_chk_fail>
    2a3d:	0f 1f 00             	nopl   (%rax)

0000000000002a40 <do_ecall_add_thread>:
    2a40:	55                   	push   %rbp
    2a41:	53                   	push   %rbx
    2a42:	48 89 fb             	mov    %rdi,%rbx
    2a45:	48 83 ec 08          	sub    $0x8,%rsp
    2a49:	e8 72 08 00 00       	callq  32c0 <is_utility_thread>
    2a4e:	48 85 db             	test   %rbx,%rbx
    2a51:	74 04                	je     2a57 <do_ecall_add_thread+0x17>
    2a53:	3c 01                	cmp    $0x1,%al
    2a55:	74 11                	je     2a68 <do_ecall_add_thread+0x28>
    2a57:	bb 01 00 00 00       	mov    $0x1,%ebx
    2a5c:	48 83 c4 08          	add    $0x8,%rsp
    2a60:	89 d8                	mov    %ebx,%eax
    2a62:	5b                   	pop    %rbx
    2a63:	5d                   	pop    %rbp
    2a64:	c3                   	retq   
    2a65:	0f 1f 00             	nopl   (%rax)
    2a68:	be 08 00 00 00       	mov    $0x8,%esi
    2a6d:	48 89 df             	mov    %rbx,%rdi
    2a70:	e8 4b e9 ff ff       	callq  13c0 <sgx_is_outside_enclave>
    2a75:	85 c0                	test   %eax,%eax
    2a77:	74 de                	je     2a57 <do_ecall_add_thread+0x17>
    2a79:	48 8b 2b             	mov    (%rbx),%rbp
    2a7c:	48 85 ed             	test   %rbp,%rbp
    2a7f:	74 d6                	je     2a57 <do_ecall_add_thread+0x17>
    2a81:	48 89 ef             	mov    %rbp,%rdi
    2a84:	0f ae e8             	lfence 
    2a87:	e8 84 f8 ff ff       	callq  2310 <_ZL11do_save_tcsPv>
    2a8c:	85 c0                	test   %eax,%eax
    2a8e:	89 c3                	mov    %eax,%ebx
    2a90:	75 ca                	jne    2a5c <do_ecall_add_thread+0x1c>
    2a92:	48 89 ef             	mov    %rbp,%rdi
    2a95:	e8 36 f6 ff ff       	callq  20d0 <do_add_thread>
    2a9a:	85 c0                	test   %eax,%eax
    2a9c:	89 c3                	mov    %eax,%ebx
    2a9e:	74 bc                	je     2a5c <do_ecall_add_thread+0x1c>
    2aa0:	e8 1b 08 00 00       	callq  32c0 <is_utility_thread>
    2aa5:	84 c0                	test   %al,%al
    2aa7:	74 b3                	je     2a5c <do_ecall_add_thread+0x1c>
    2aa9:	48 8b 15 20 a6 00 00 	mov    0xa620(%rip),%rdx        # d0d0 <_ZL10g_tcs_node>
    2ab0:	48 85 d2             	test   %rdx,%rdx
    2ab3:	74 a7                	je     2a5c <do_ecall_add_thread+0x1c>
    2ab5:	48 8b 0d 0c a6 00 00 	mov    0xa60c(%rip),%rcx        # d0c8 <_ZL12g_tcs_cookie>
    2abc:	48 8b 32             	mov    (%rdx),%rsi
    2abf:	48 8b 42 08          	mov    0x8(%rdx),%rax
    2ac3:	48 31 ce             	xor    %rcx,%rsi
    2ac6:	48 39 f5             	cmp    %rsi,%rbp
    2ac9:	74 42                	je     2b0d <do_ecall_add_thread+0xcd>
    2acb:	48 85 c0             	test   %rax,%rax
    2ace:	74 8c                	je     2a5c <do_ecall_add_thread+0x1c>
    2ad0:	48 8b 30             	mov    (%rax),%rsi
    2ad3:	48 31 ce             	xor    %rcx,%rsi
    2ad6:	48 39 f5             	cmp    %rsi,%rbp
    2ad9:	75 08                	jne    2ae3 <do_ecall_add_thread+0xa3>
    2adb:	eb 44                	jmp    2b21 <do_ecall_add_thread+0xe1>
    2add:	0f 1f 00             	nopl   (%rax)
    2ae0:	48 89 f8             	mov    %rdi,%rax
    2ae3:	48 8b 78 08          	mov    0x8(%rax),%rdi
    2ae7:	48 85 ff             	test   %rdi,%rdi
    2aea:	0f 84 6c ff ff ff    	je     2a5c <do_ecall_add_thread+0x1c>
    2af0:	48 8b 17             	mov    (%rdi),%rdx
    2af3:	48 31 ca             	xor    %rcx,%rdx
    2af6:	48 39 d5             	cmp    %rdx,%rbp
    2af9:	75 e5                	jne    2ae0 <do_ecall_add_thread+0xa0>
    2afb:	48 8b 57 08          	mov    0x8(%rdi),%rdx
    2aff:	48 89 50 08          	mov    %rdx,0x8(%rax)
    2b03:	e8 88 3c 00 00       	callq  6790 <dlfree>
    2b08:	e9 4f ff ff ff       	jmpq   2a5c <do_ecall_add_thread+0x1c>
    2b0d:	48 89 d7             	mov    %rdx,%rdi
    2b10:	48 89 05 b9 a5 00 00 	mov    %rax,0xa5b9(%rip)        # d0d0 <_ZL10g_tcs_node>
    2b17:	e8 74 3c 00 00       	callq  6790 <dlfree>
    2b1c:	e9 3b ff ff ff       	jmpq   2a5c <do_ecall_add_thread+0x1c>
    2b21:	48 89 c7             	mov    %rax,%rdi
    2b24:	48 89 d0             	mov    %rdx,%rax
    2b27:	eb d2                	jmp    2afb <do_ecall_add_thread+0xbb>
    2b29:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002b30 <do_uninit_enclave>:
    2b30:	48 8d 05 f1 a2 00 00 	lea    0xa2f1(%rip),%rax        # ce28 <EDMM_supported>
    2b37:	41 54                	push   %r12
    2b39:	55                   	push   %rbp
    2b3a:	53                   	push   %rbx
    2b3b:	8b 00                	mov    (%rax),%eax
    2b3d:	85 c0                	test   %eax,%eax
    2b3f:	0f 84 b0 00 00 00    	je     2bf5 <do_uninit_enclave+0xc5>
    2b45:	48 89 fd             	mov    %rdi,%rbp
    2b48:	e8 73 07 00 00       	callq  32c0 <is_utility_thread>
    2b4d:	84 c0                	test   %al,%al
    2b4f:	0f 84 93 00 00 00    	je     2be8 <do_uninit_enclave+0xb8>
    2b55:	f0 83 0d 63 a5 00 00 	lock orl $0x1,0xa563(%rip)        # d0c0 <g_uninit_flag>
    2b5c:	01 
    2b5d:	48 8b 1d 6c a5 00 00 	mov    0xa56c(%rip),%rbx        # d0d0 <_ZL10g_tcs_node>
    2b64:	48 c7 05 61 a5 00 00 	movq   $0x0,0xa561(%rip)        # d0d0 <_ZL10g_tcs_node>
    2b6b:	00 00 00 00 
    2b6f:	48 85 db             	test   %rbx,%rbx
    2b72:	74 3c                	je     2bb0 <do_uninit_enclave+0x80>
    2b74:	0f 1f 40 00          	nopl   0x0(%rax)
    2b78:	48 8b 33             	mov    (%rbx),%rsi
    2b7b:	48 33 35 46 a5 00 00 	xor    0xa546(%rip),%rsi        # d0c8 <_ZL12g_tcs_cookie>
    2b82:	48 39 f5             	cmp    %rsi,%rbp
    2b85:	74 15                	je     2b9c <do_uninit_enclave+0x6c>
    2b87:	48 8d 96 00 10 00 00 	lea    0x1000(%rsi),%rdx
    2b8e:	bf 10 04 00 00       	mov    $0x410,%edi
    2b93:	e8 58 f1 ff ff       	callq  1cf0 <sgx_accept_forward>
    2b98:	85 c0                	test   %eax,%eax
    2b9a:	75 59                	jne    2bf5 <do_uninit_enclave+0xc5>
    2b9c:	4c 8b 63 08          	mov    0x8(%rbx),%r12
    2ba0:	48 89 df             	mov    %rbx,%rdi
    2ba3:	e8 e8 3b 00 00       	callq  6790 <dlfree>
    2ba8:	4c 89 e3             	mov    %r12,%rbx
    2bab:	48 85 db             	test   %rbx,%rbx
    2bae:	75 c8                	jne    2b78 <do_uninit_enclave+0x48>
    2bb0:	48 8d 3d 0d a5 00 00 	lea    0xa50d(%rip),%rdi        # d0c4 <_ZL10g_ife_lock>
    2bb7:	e8 d4 52 00 00       	callq  7e90 <sgx_spin_lock>
    2bbc:	0f b6 05 47 a4 00 00 	movzbl 0xa447(%rip),%eax        # d00a <_ZL16g_is_first_ecall>
    2bc3:	84 c0                	test   %al,%al
    2bc5:	74 49                	je     2c10 <do_uninit_enclave+0xe0>
    2bc7:	48 8d 3d f6 a4 00 00 	lea    0xa4f6(%rip),%rdi        # d0c4 <_ZL10g_ife_lock>
    2bce:	e8 1d 53 00 00       	callq  7ef0 <sgx_spin_unlock>
    2bd3:	bf 03 00 00 00       	mov    $0x3,%edi
    2bd8:	e8 9e 5f 00 00       	callq  8b7b <set_enclave_state>
    2bdd:	5b                   	pop    %rbx
    2bde:	31 c0                	xor    %eax,%eax
    2be0:	5d                   	pop    %rbp
    2be1:	41 5c                	pop    %r12
    2be3:	c3                   	retq   
    2be4:	0f 1f 40 00          	nopl   0x0(%rax)
    2be8:	e8 03 f0 ff ff       	callq  1bf0 <is_dynamic_thread_exist>
    2bed:	85 c0                	test   %eax,%eax
    2bef:	0f 84 60 ff ff ff    	je     2b55 <do_uninit_enclave+0x25>
    2bf5:	bf 03 00 00 00       	mov    $0x3,%edi
    2bfa:	e8 7c 5f 00 00       	callq  8b7b <set_enclave_state>
    2bff:	5b                   	pop    %rbx
    2c00:	b8 01 00 00 00       	mov    $0x1,%eax
    2c05:	5d                   	pop    %rbp
    2c06:	41 5c                	pop    %r12
    2c08:	c3                   	retq   
    2c09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2c10:	e8 db 17 00 00       	callq  43f0 <uninit_global_object>
    2c15:	eb b0                	jmp    2bc7 <do_uninit_enclave+0x97>
    2c17:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2c1e:	00 00 

0000000000002c20 <trts_mprotect>:
    2c20:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
    2c25:	48 83 e4 c0          	and    $0xffffffffffffffc0,%rsp
    2c29:	41 ff 72 f8          	pushq  -0x8(%r10)
    2c2d:	55                   	push   %rbp
    2c2e:	48 89 e5             	mov    %rsp,%rbp
    2c31:	41 56                	push   %r14
    2c33:	41 55                	push   %r13
    2c35:	41 54                	push   %r12
    2c37:	41 52                	push   %r10
    2c39:	53                   	push   %rbx
    2c3a:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    2c41:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2c48:	00 00 
    2c4a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    2c4e:	31 c0                	xor    %eax,%eax
    2c50:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    2c56:	b8 02 00 00 00       	mov    $0x2,%eax
    2c5b:	0f 85 8f 00 00 00    	jne    2cf0 <trts_mprotect+0xd0>
    2c61:	48 85 f6             	test   %rsi,%rsi
    2c64:	49 89 f4             	mov    %rsi,%r12
    2c67:	0f 84 83 00 00 00    	je     2cf0 <trts_mprotect+0xd0>
    2c6d:	f7 c6 ff 0f 00 00    	test   $0xfff,%esi
    2c73:	75 7b                	jne    2cf0 <trts_mprotect+0xd0>
    2c75:	48 8d 05 a8 a1 00 00 	lea    0xa1a8(%rip),%rax        # ce24 <g_sdk_version>
    2c7c:	48 89 fb             	mov    %rdi,%rbx
    2c7f:	49 89 d5             	mov    %rdx,%r13
    2c82:	83 38 01             	cmpl   $0x1,(%rax)
    2c85:	0f 84 8d 00 00 00    	je     2d18 <trts_mprotect+0xf8>
    2c8b:	4c 8d b5 50 ff ff ff 	lea    -0xb0(%rbp),%r14
    2c92:	4c 89 e8             	mov    %r13,%rax
    2c95:	31 f6                	xor    %esi,%esi
    2c97:	48 0d 20 02 00 00    	or     $0x220,%rax
    2c9d:	ba 38 00 00 00       	mov    $0x38,%edx
    2ca2:	49 01 dc             	add    %rbx,%r12
    2ca5:	49 8d 7e 08          	lea    0x8(%r14),%rdi
    2ca9:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
    2cb0:	41 83 e5 06          	and    $0x6,%r13d
    2cb4:	e8 f4 4f 00 00       	callq  7cad <memset>
    2cb9:	4c 39 e3             	cmp    %r12,%rbx
    2cbc:	73 2e                	jae    2cec <trts_mprotect+0xcc>
    2cbe:	66 90                	xchg   %ax,%ax
    2cc0:	48 89 de             	mov    %rbx,%rsi
    2cc3:	4c 89 f7             	mov    %r14,%rdi
    2cc6:	e8 d1 61 00 00       	callq  8e9c <do_emodpe>
    2ccb:	49 83 fd 06          	cmp    $0x6,%r13
    2ccf:	74 0f                	je     2ce0 <trts_mprotect+0xc0>
    2cd1:	48 89 de             	mov    %rbx,%rsi
    2cd4:	4c 89 f7             	mov    %r14,%rdi
    2cd7:	e8 a6 61 00 00       	callq  8e82 <do_eaccept>
    2cdc:	85 c0                	test   %eax,%eax
    2cde:	75 10                	jne    2cf0 <trts_mprotect+0xd0>
    2ce0:	48 81 c3 00 10 00 00 	add    $0x1000,%rbx
    2ce7:	4c 39 e3             	cmp    %r12,%rbx
    2cea:	72 d4                	jb     2cc0 <trts_mprotect+0xa0>
    2cec:	31 c0                	xor    %eax,%eax
    2cee:	66 90                	xchg   %ax,%ax
    2cf0:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
    2cf4:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    2cfb:	00 00 
    2cfd:	75 2d                	jne    2d2c <trts_mprotect+0x10c>
    2cff:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    2d06:	5b                   	pop    %rbx
    2d07:	41 5a                	pop    %r10
    2d09:	41 5c                	pop    %r12
    2d0b:	41 5d                	pop    %r13
    2d0d:	41 5e                	pop    %r14
    2d0f:	5d                   	pop    %rbp
    2d10:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
    2d14:	c3                   	retq   
    2d15:	0f 1f 00             	nopl   (%rax)
    2d18:	b9 fc ff ff ff       	mov    $0xfffffffc,%ecx
    2d1d:	e8 1e 00 00 00       	callq  2d40 <change_permissions_ocall>
    2d22:	85 c0                	test   %eax,%eax
    2d24:	0f 84 61 ff ff ff    	je     2c8b <trts_mprotect+0x6b>
    2d2a:	eb c4                	jmp    2cf0 <trts_mprotect+0xd0>
    2d2c:	e8 bf 17 00 00       	callq  44f0 <__stack_chk_fail>
    2d31:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2d38:	00 00 00 
    2d3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002d40 <change_permissions_ocall>:
    2d40:	41 55                	push   %r13
    2d42:	41 54                	push   %r12
    2d44:	49 89 fd             	mov    %rdi,%r13
    2d47:	55                   	push   %rbp
    2d48:	53                   	push   %rbx
    2d49:	bf 18 00 00 00       	mov    $0x18,%edi
    2d4e:	49 89 f4             	mov    %rsi,%r12
    2d51:	48 89 d5             	mov    %rdx,%rbp
    2d54:	89 cb                	mov    %ecx,%ebx
    2d56:	48 83 ec 08          	sub    $0x8,%rsp
    2d5a:	e8 b1 e6 ff ff       	callq  1410 <sgx_ocalloc>
    2d5f:	48 85 c0             	test   %rax,%rax
    2d62:	74 2c                	je     2d90 <change_permissions_ocall+0x50>
    2d64:	89 df                	mov    %ebx,%edi
    2d66:	4c 89 28             	mov    %r13,(%rax)
    2d69:	4c 89 60 08          	mov    %r12,0x8(%rax)
    2d6d:	48 89 68 10          	mov    %rbp,0x10(%rax)
    2d71:	48 89 c6             	mov    %rax,%rsi
    2d74:	e8 37 00 00 00       	callq  2db0 <sgx_ocall>
    2d79:	89 c3                	mov    %eax,%ebx
    2d7b:	e8 80 e7 ff ff       	callq  1500 <sgx_ocfree>
    2d80:	48 83 c4 08          	add    $0x8,%rsp
    2d84:	89 d8                	mov    %ebx,%eax
    2d86:	5b                   	pop    %rbx
    2d87:	5d                   	pop    %rbp
    2d88:	41 5c                	pop    %r12
    2d8a:	41 5d                	pop    %r13
    2d8c:	c3                   	retq   
    2d8d:	0f 1f 00             	nopl   (%rax)
    2d90:	e8 6b e7 ff ff       	callq  1500 <sgx_ocfree>
    2d95:	bb 01 00 00 00       	mov    $0x1,%ebx
    2d9a:	48 83 c4 08          	add    $0x8,%rsp
    2d9e:	89 d8                	mov    %ebx,%eax
    2da0:	5b                   	pop    %rbx
    2da1:	5d                   	pop    %rbp
    2da2:	41 5c                	pop    %r12
    2da4:	41 5d                	pop    %r13
    2da6:	c3                   	retq   
    2da7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2dae:	00 00 

0000000000002db0 <sgx_ocall>:
    2db0:	8d 47 05             	lea    0x5(%rdi),%eax
    2db3:	83 f8 03             	cmp    $0x3,%eax
    2db6:	76 12                	jbe    2dca <sgx_ocall+0x1a>
    2db8:	85 ff                	test   %edi,%edi
    2dba:	74 0e                	je     2dca <sgx_ocall+0x1a>
    2dbc:	48 8d 15 5d 62 00 00 	lea    0x625d(%rip),%rdx        # 9020 <g_dyn_entry_table>
    2dc3:	89 f8                	mov    %edi,%eax
    2dc5:	48 3b 02             	cmp    (%rdx),%rax
    2dc8:	73 06                	jae    2dd0 <sgx_ocall+0x20>
    2dca:	e9 06 60 00 00       	jmpq   8dd5 <__morestack>
    2dcf:	90                   	nop
    2dd0:	b8 01 10 00 00       	mov    $0x1001,%eax
    2dd5:	c3                   	retq   
    2dd6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2ddd:	00 00 00 

0000000000002de0 <update_ocall_lastsp>:
    2de0:	53                   	push   %rbx
    2de1:	48 89 fb             	mov    %rdi,%rbx
    2de4:	e8 b8 5d 00 00       	callq  8ba1 <get_thread_data>
    2de9:	48 8b 50 08          	mov    0x8(%rax),%rdx
    2ded:	48 39 50 10          	cmp    %rdx,0x10(%rax)
    2df1:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    2df5:	74 21                	je     2e18 <update_ocall_lastsp+0x38>
    2df7:	48 8b b2 90 00 00 00 	mov    0x90(%rdx),%rsi
    2dfe:	48 8d 4e 01          	lea    0x1(%rsi),%rcx
    2e02:	48 89 8b 90 00 00 00 	mov    %rcx,0x90(%rbx)
    2e09:	48 89 58 08          	mov    %rbx,0x8(%rax)
    2e0d:	48 89 d0             	mov    %rdx,%rax
    2e10:	5b                   	pop    %rbx
    2e11:	c3                   	retq   
    2e12:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2e18:	48 c7 83 90 00 00 00 	movq   $0x1,0x90(%rbx)
    2e1f:	01 00 00 00 
    2e23:	48 89 58 08          	mov    %rbx,0x8(%rax)
    2e27:	48 89 d0             	mov    %rdx,%rax
    2e2a:	5b                   	pop    %rbx
    2e2b:	c3                   	retq   
    2e2c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002e30 <do_oret>:
    2e30:	53                   	push   %rbx
    2e31:	48 89 fb             	mov    %rdi,%rbx
    2e34:	48 83 ec 10          	sub    $0x10,%rsp
    2e38:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2e3f:	00 00 
    2e41:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    2e46:	31 c0                	xor    %eax,%eax
    2e48:	e8 54 5d 00 00       	callq  8ba1 <get_thread_data>
    2e4d:	48 8b 78 08          	mov    0x8(%rax),%rdi
    2e51:	48 85 ff             	test   %rdi,%rdi
    2e54:	48 89 3c 24          	mov    %rdi,(%rsp)
    2e58:	74 46                	je     2ea0 <do_oret+0x70>
    2e5a:	48 89 e2             	mov    %rsp,%rdx
    2e5d:	48 39 fa             	cmp    %rdi,%rdx
    2e60:	73 3e                	jae    2ea0 <do_oret+0x70>
    2e62:	48 8b 50 10          	mov    0x10(%rax),%rdx
    2e66:	48 8d 8a 10 ff ff ff 	lea    -0xf0(%rdx),%rcx
    2e6d:	48 39 f9             	cmp    %rdi,%rcx
    2e70:	72 2e                	jb     2ea0 <do_oret+0x70>
    2e72:	48 81 7f 20 44 49 43 	cmpq   $0x4f434944,0x20(%rdi)
    2e79:	4f 
    2e7a:	75 24                	jne    2ea0 <do_oret+0x70>
    2e7c:	48 8b 4f 30          	mov    0x30(%rdi),%rcx
    2e80:	48 39 ca             	cmp    %rcx,%rdx
    2e83:	72 1b                	jb     2ea0 <do_oret+0x70>
    2e85:	48 39 f9             	cmp    %rdi,%rcx
    2e88:	76 16                	jbe    2ea0 <do_oret+0x70>
    2e8a:	48 89 48 08          	mov    %rcx,0x8(%rax)
    2e8e:	48 89 de             	mov    %rbx,%rsi
    2e91:	e8 4e 5f 00 00       	callq  8de4 <asm_oret>
    2e96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2e9d:	00 00 00 
    2ea0:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    2ea5:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    2eac:	00 00 
    2eae:	b8 01 00 00 00       	mov    $0x1,%eax
    2eb3:	75 06                	jne    2ebb <do_oret+0x8b>
    2eb5:	48 83 c4 10          	add    $0x10,%rsp
    2eb9:	5b                   	pop    %rbx
    2eba:	c3                   	retq   
    2ebb:	e8 30 16 00 00       	callq  44f0 <__stack_chk_fail>

0000000000002ec0 <trim_range_ocall>:
    2ec0:	55                   	push   %rbp
    2ec1:	53                   	push   %rbx
    2ec2:	48 89 fd             	mov    %rdi,%rbp
    2ec5:	bf 10 00 00 00       	mov    $0x10,%edi
    2eca:	48 89 f3             	mov    %rsi,%rbx
    2ecd:	48 83 ec 08          	sub    $0x8,%rsp
    2ed1:	e8 3a e5 ff ff       	callq  1410 <sgx_ocalloc>
    2ed6:	48 85 c0             	test   %rax,%rax
    2ed9:	74 25                	je     2f00 <trim_range_ocall+0x40>
    2edb:	48 89 28             	mov    %rbp,(%rax)
    2ede:	48 89 58 08          	mov    %rbx,0x8(%rax)
    2ee2:	48 89 c6             	mov    %rax,%rsi
    2ee5:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    2eea:	e8 c1 fe ff ff       	callq  2db0 <sgx_ocall>
    2eef:	89 c3                	mov    %eax,%ebx
    2ef1:	e8 0a e6 ff ff       	callq  1500 <sgx_ocfree>
    2ef6:	48 83 c4 08          	add    $0x8,%rsp
    2efa:	89 d8                	mov    %ebx,%eax
    2efc:	5b                   	pop    %rbx
    2efd:	5d                   	pop    %rbp
    2efe:	c3                   	retq   
    2eff:	90                   	nop
    2f00:	e8 fb e5 ff ff       	callq  1500 <sgx_ocfree>
    2f05:	bb 01 00 00 00       	mov    $0x1,%ebx
    2f0a:	48 83 c4 08          	add    $0x8,%rsp
    2f0e:	89 d8                	mov    %ebx,%eax
    2f10:	5b                   	pop    %rbx
    2f11:	5d                   	pop    %rbp
    2f12:	c3                   	retq   
    2f13:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2f1a:	00 00 00 
    2f1d:	0f 1f 00             	nopl   (%rax)

0000000000002f20 <trim_range_commit_ocall>:
    2f20:	53                   	push   %rbx
    2f21:	48 89 fb             	mov    %rdi,%rbx
    2f24:	bf 08 00 00 00       	mov    $0x8,%edi
    2f29:	e8 e2 e4 ff ff       	callq  1410 <sgx_ocalloc>
    2f2e:	48 85 c0             	test   %rax,%rax
    2f31:	74 1d                	je     2f50 <trim_range_commit_ocall+0x30>
    2f33:	48 89 18             	mov    %rbx,(%rax)
    2f36:	48 89 c6             	mov    %rax,%rsi
    2f39:	bf fd ff ff ff       	mov    $0xfffffffd,%edi
    2f3e:	e8 6d fe ff ff       	callq  2db0 <sgx_ocall>
    2f43:	89 c3                	mov    %eax,%ebx
    2f45:	e8 b6 e5 ff ff       	callq  1500 <sgx_ocfree>
    2f4a:	89 d8                	mov    %ebx,%eax
    2f4c:	5b                   	pop    %rbx
    2f4d:	c3                   	retq   
    2f4e:	66 90                	xchg   %ax,%ax
    2f50:	bb 01 00 00 00       	mov    $0x1,%ebx
    2f55:	e8 a6 e5 ff ff       	callq  1500 <sgx_ocfree>
    2f5a:	89 d8                	mov    %ebx,%eax
    2f5c:	5b                   	pop    %rbx
    2f5d:	c3                   	retq   
    2f5e:	66 90                	xchg   %ax,%ax

0000000000002f60 <get_enclave_size>:
    2f60:	48 8d 05 99 61 00 00 	lea    0x6199(%rip),%rax        # 9100 <g_global_data>
    2f67:	48 8b 40 08          	mov    0x8(%rax),%rax
    2f6b:	c3                   	retq   
    2f6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002f70 <get_enclave_end>:
    2f70:	48 83 ec 08          	sub    $0x8,%rsp
    2f74:	e8 ed 5b 00 00       	callq  8b66 <get_enclave_base>
    2f79:	48 8d 15 80 61 00 00 	lea    0x6180(%rip),%rdx        # 9100 <g_global_data>
    2f80:	48 8b 52 08          	mov    0x8(%rdx),%rdx
    2f84:	48 83 c4 08          	add    $0x8,%rsp
    2f88:	48 8d 44 10 ff       	lea    -0x1(%rax,%rdx,1),%rax
    2f8d:	c3                   	retq   
    2f8e:	66 90                	xchg   %ax,%ax

0000000000002f90 <get_heap_base>:
    2f90:	48 8d 05 69 61 00 00 	lea    0x6169(%rip),%rax        # 9100 <g_global_data>
    2f97:	48 8b 40 10          	mov    0x10(%rax),%rax
    2f9b:	48 03 05 26 a0 00 00 	add    0xa026(%rip),%rax        # cfc8 <_GLOBAL_OFFSET_TABLE_+0x18>
    2fa2:	c3                   	retq   
    2fa3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    2faa:	00 00 00 
    2fad:	0f 1f 00             	nopl   (%rax)

0000000000002fb0 <get_heap_size>:
    2fb0:	48 8d 15 71 9e 00 00 	lea    0x9e71(%rip),%rdx        # ce28 <EDMM_supported>
    2fb7:	48 8d 35 42 61 00 00 	lea    0x6142(%rip),%rsi        # 9100 <g_global_data>
    2fbe:	8b 12                	mov    (%rdx),%edx
    2fc0:	48 8b 46 18          	mov    0x18(%rsi),%rax
    2fc4:	85 d2                	test   %edx,%edx
    2fc6:	74 40                	je     3008 <get_heap_size+0x58>
    2fc8:	8b 96 30 01 00 00    	mov    0x130(%rsi),%edx
    2fce:	85 d2                	test   %edx,%edx
    2fd0:	74 36                	je     3008 <get_heap_size+0x58>
    2fd2:	31 c9                	xor    %ecx,%ecx
    2fd4:	0f 1f 40 00          	nopl   0x0(%rax)
    2fd8:	89 ca                	mov    %ecx,%edx
    2fda:	48 c1 e2 05          	shl    $0x5,%rdx
    2fde:	48 01 f2             	add    %rsi,%rdx
    2fe1:	0f b7 ba 38 01 00 00 	movzwl 0x138(%rdx),%edi
    2fe8:	66 83 ff 03          	cmp    $0x3,%di
    2fec:	75 0d                	jne    2ffb <get_heap_size+0x4b>
    2fee:	8b 92 3c 01 00 00    	mov    0x13c(%rdx),%edx
    2ff4:	48 c1 e2 0c          	shl    $0xc,%rdx
    2ff8:	48 01 d0             	add    %rdx,%rax
    2ffb:	8b 96 30 01 00 00    	mov    0x130(%rsi),%edx
    3001:	83 c1 01             	add    $0x1,%ecx
    3004:	39 ca                	cmp    %ecx,%edx
    3006:	77 d0                	ja     2fd8 <get_heap_size+0x28>
    3008:	f3 c3                	repz retq 
    300a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000003010 <get_heap_min_size>:
    3010:	48 8d 0d e9 60 00 00 	lea    0x60e9(%rip),%rcx        # 9100 <g_global_data>
    3017:	8b 81 30 01 00 00    	mov    0x130(%rcx),%eax
    301d:	85 c0                	test   %eax,%eax
    301f:	74 3d                	je     305e <get_heap_min_size+0x4e>
    3021:	0f b7 81 38 01 00 00 	movzwl 0x138(%rcx),%eax
    3028:	66 83 f8 01          	cmp    $0x1,%ax
    302c:	74 3a                	je     3068 <get_heap_min_size+0x58>
    302e:	31 c0                	xor    %eax,%eax
    3030:	eb 1f                	jmp    3051 <get_heap_min_size+0x41>
    3032:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3038:	89 c6                	mov    %eax,%esi
    303a:	48 89 f2             	mov    %rsi,%rdx
    303d:	48 c1 e2 05          	shl    $0x5,%rdx
    3041:	48 01 ca             	add    %rcx,%rdx
    3044:	0f b7 92 38 01 00 00 	movzwl 0x138(%rdx),%edx
    304b:	66 83 fa 01          	cmp    $0x1,%dx
    304f:	74 19                	je     306a <get_heap_min_size+0x5a>
    3051:	8b 91 30 01 00 00    	mov    0x130(%rcx),%edx
    3057:	83 c0 01             	add    $0x1,%eax
    305a:	39 c2                	cmp    %eax,%edx
    305c:	77 da                	ja     3038 <get_heap_min_size+0x28>
    305e:	31 c0                	xor    %eax,%eax
    3060:	c3                   	retq   
    3061:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3068:	31 f6                	xor    %esi,%esi
    306a:	48 c1 e6 05          	shl    $0x5,%rsi
    306e:	48 01 f1             	add    %rsi,%rcx
    3071:	8b 81 3c 01 00 00    	mov    0x13c(%rcx),%eax
    3077:	48 c1 e0 0c          	shl    $0xc,%rax
    307b:	c3                   	retq   
    307c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003080 <get_rsrv_base>:
    3080:	48 8d 05 79 60 00 00 	lea    0x6079(%rip),%rax        # 9100 <g_global_data>
    3087:	48 8b 40 20          	mov    0x20(%rax),%rax
    308b:	48 03 05 36 9f 00 00 	add    0x9f36(%rip),%rax        # cfc8 <_GLOBAL_OFFSET_TABLE_+0x18>
    3092:	c3                   	retq   
    3093:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    309a:	00 00 00 
    309d:	0f 1f 00             	nopl   (%rax)

00000000000030a0 <get_rsrv_end>:
    30a0:	48 8d 05 81 9d 00 00 	lea    0x9d81(%rip),%rax        # ce28 <EDMM_supported>
    30a7:	48 8d 0d 52 60 00 00 	lea    0x6052(%rip),%rcx        # 9100 <g_global_data>
    30ae:	8b 00                	mov    (%rax),%eax
    30b0:	4c 8b 41 20          	mov    0x20(%rcx),%r8
    30b4:	4c 03 05 0d 9f 00 00 	add    0x9f0d(%rip),%r8        # cfc8 <_GLOBAL_OFFSET_TABLE_+0x18>
    30bb:	48 8b 79 28          	mov    0x28(%rcx),%rdi
    30bf:	85 c0                	test   %eax,%eax
    30c1:	74 3d                	je     3100 <get_rsrv_end+0x60>
    30c3:	8b 81 30 01 00 00    	mov    0x130(%rcx),%eax
    30c9:	85 c0                	test   %eax,%eax
    30cb:	74 33                	je     3100 <get_rsrv_end+0x60>
    30cd:	31 d2                	xor    %edx,%edx
    30cf:	90                   	nop
    30d0:	89 d0                	mov    %edx,%eax
    30d2:	48 c1 e0 05          	shl    $0x5,%rax
    30d6:	48 01 c8             	add    %rcx,%rax
    30d9:	0f b7 b0 38 01 00 00 	movzwl 0x138(%rax),%esi
    30e0:	66 83 fe 16          	cmp    $0x16,%si
    30e4:	75 0d                	jne    30f3 <get_rsrv_end+0x53>
    30e6:	8b 80 3c 01 00 00    	mov    0x13c(%rax),%eax
    30ec:	48 c1 e0 0c          	shl    $0xc,%rax
    30f0:	48 01 c7             	add    %rax,%rdi
    30f3:	8b 81 30 01 00 00    	mov    0x130(%rcx),%eax
    30f9:	83 c2 01             	add    $0x1,%edx
    30fc:	39 d0                	cmp    %edx,%eax
    30fe:	77 d0                	ja     30d0 <get_rsrv_end+0x30>
    3100:	4a 8d 44 07 ff       	lea    -0x1(%rdi,%r8,1),%rax
    3105:	c3                   	retq   
    3106:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    310d:	00 00 00 

0000000000003110 <get_rsrv_size>:
    3110:	48 8d 15 11 9d 00 00 	lea    0x9d11(%rip),%rdx        # ce28 <EDMM_supported>
    3117:	48 8d 35 e2 5f 00 00 	lea    0x5fe2(%rip),%rsi        # 9100 <g_global_data>
    311e:	8b 12                	mov    (%rdx),%edx
    3120:	48 8b 46 28          	mov    0x28(%rsi),%rax
    3124:	85 d2                	test   %edx,%edx
    3126:	74 40                	je     3168 <get_rsrv_size+0x58>
    3128:	8b 96 30 01 00 00    	mov    0x130(%rsi),%edx
    312e:	85 d2                	test   %edx,%edx
    3130:	74 36                	je     3168 <get_rsrv_size+0x58>
    3132:	31 c9                	xor    %ecx,%ecx
    3134:	0f 1f 40 00          	nopl   0x0(%rax)
    3138:	89 ca                	mov    %ecx,%edx
    313a:	48 c1 e2 05          	shl    $0x5,%rdx
    313e:	48 01 f2             	add    %rsi,%rdx
    3141:	0f b7 ba 38 01 00 00 	movzwl 0x138(%rdx),%edi
    3148:	66 83 ff 16          	cmp    $0x16,%di
    314c:	75 0d                	jne    315b <get_rsrv_size+0x4b>
    314e:	8b 92 3c 01 00 00    	mov    0x13c(%rdx),%edx
    3154:	48 c1 e2 0c          	shl    $0xc,%rdx
    3158:	48 01 d0             	add    %rdx,%rax
    315b:	8b 96 30 01 00 00    	mov    0x130(%rsi),%edx
    3161:	83 c1 01             	add    $0x1,%ecx
    3164:	39 ca                	cmp    %ecx,%edx
    3166:	77 d0                	ja     3138 <get_rsrv_size+0x28>
    3168:	f3 c3                	repz retq 
    316a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000003170 <get_rsrv_min_size>:
    3170:	48 8d 0d 89 5f 00 00 	lea    0x5f89(%rip),%rcx        # 9100 <g_global_data>
    3177:	8b 81 30 01 00 00    	mov    0x130(%rcx),%eax
    317d:	85 c0                	test   %eax,%eax
    317f:	74 3d                	je     31be <get_rsrv_min_size+0x4e>
    3181:	0f b7 81 38 01 00 00 	movzwl 0x138(%rcx),%eax
    3188:	66 83 f8 14          	cmp    $0x14,%ax
    318c:	74 3a                	je     31c8 <get_rsrv_min_size+0x58>
    318e:	31 c0                	xor    %eax,%eax
    3190:	eb 1f                	jmp    31b1 <get_rsrv_min_size+0x41>
    3192:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3198:	89 c6                	mov    %eax,%esi
    319a:	48 89 f2             	mov    %rsi,%rdx
    319d:	48 c1 e2 05          	shl    $0x5,%rdx
    31a1:	48 01 ca             	add    %rcx,%rdx
    31a4:	0f b7 92 38 01 00 00 	movzwl 0x138(%rdx),%edx
    31ab:	66 83 fa 14          	cmp    $0x14,%dx
    31af:	74 19                	je     31ca <get_rsrv_min_size+0x5a>
    31b1:	8b 91 30 01 00 00    	mov    0x130(%rcx),%edx
    31b7:	83 c0 01             	add    $0x1,%eax
    31ba:	39 c2                	cmp    %eax,%edx
    31bc:	77 da                	ja     3198 <get_rsrv_min_size+0x28>
    31be:	31 c0                	xor    %eax,%eax
    31c0:	c3                   	retq   
    31c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    31c8:	31 f6                	xor    %esi,%esi
    31ca:	48 c1 e6 05          	shl    $0x5,%rsi
    31ce:	48 01 f1             	add    %rsi,%rcx
    31d1:	8b 81 3c 01 00 00    	mov    0x13c(%rcx),%eax
    31d7:	48 c1 e0 0c          	shl    $0xc,%rax
    31db:	c3                   	retq   
    31dc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000031e0 <get_errno_addr>:
    31e0:	48 83 ec 08          	sub    $0x8,%rsp
    31e4:	e8 b8 59 00 00       	callq  8ba1 <get_thread_data>
    31e9:	48 83 c4 08          	add    $0x8,%rsp
    31ed:	48 83 c0 40          	add    $0x40,%rax
    31f1:	c3                   	retq   
    31f2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    31f9:	00 00 00 
    31fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003200 <feature_supported>:
    3200:	31 c0                	xor    %eax,%eax
    3202:	48 85 ff             	test   %rdi,%rdi
    3205:	74 3b                	je     3242 <feature_supported+0x42>
    3207:	31 d2                	xor    %edx,%edx
    3209:	eb 0d                	jmp    3218 <feature_supported+0x18>
    320b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3210:	48 85 c0             	test   %rax,%rax
    3213:	44 89 c2             	mov    %r8d,%edx
    3216:	78 28                	js     3240 <feature_supported+0x40>
    3218:	44 8d 42 01          	lea    0x1(%rdx),%r8d
    321c:	89 d0                	mov    %edx,%eax
    321e:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    3222:	45 89 c1             	mov    %r8d,%r9d
    3225:	41 c1 e1 06          	shl    $0x6,%r9d
    3229:	44 39 ce             	cmp    %r9d,%esi
    322c:	73 e2                	jae    3210 <feature_supported+0x10>
    322e:	c1 e2 06             	shl    $0x6,%edx
    3231:	89 f1                	mov    %esi,%ecx
    3233:	29 d1                	sub    %edx,%ecx
    3235:	48 d3 e8             	shr    %cl,%rax
    3238:	83 e0 01             	and    $0x1,%eax
    323b:	c3                   	retq   
    323c:	0f 1f 40 00          	nopl   0x0(%rax)
    3240:	31 c0                	xor    %eax,%eax
    3242:	f3 c3                	repz retq 
    3244:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    324b:	00 00 00 
    324e:	66 90                	xchg   %ax,%ax

0000000000003250 <is_stack_addr>:
    3250:	55                   	push   %rbp
    3251:	53                   	push   %rbx
    3252:	48 89 f5             	mov    %rsi,%rbp
    3255:	48 89 fb             	mov    %rdi,%rbx
    3258:	48 83 ec 08          	sub    $0x8,%rsp
    325c:	e8 40 59 00 00       	callq  8ba1 <get_thread_data>
    3261:	31 c9                	xor    %ecx,%ecx
    3263:	48 01 dd             	add    %rbx,%rbp
    3266:	0f 92 c1             	setb   %cl
    3269:	48 3b 68 10          	cmp    0x10(%rax),%rbp
    326d:	0f 96 c2             	setbe  %dl
    3270:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    3274:	0f 96 c0             	setbe  %al
    3277:	21 d0                	and    %edx,%eax
    3279:	48 85 c9             	test   %rcx,%rcx
    327c:	0f 94 c2             	sete   %dl
    327f:	48 83 c4 08          	add    $0x8,%rsp
    3283:	21 d0                	and    %edx,%eax
    3285:	5b                   	pop    %rbx
    3286:	5d                   	pop    %rbp
    3287:	c3                   	retq   
    3288:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    328f:	00 

0000000000003290 <is_valid_sp>:
    3290:	40 f6 c7 07          	test   $0x7,%dil
    3294:	74 0a                	je     32a0 <is_valid_sp+0x10>
    3296:	31 c0                	xor    %eax,%eax
    3298:	c3                   	retq   
    3299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    32a0:	53                   	push   %rbx
    32a1:	48 89 fb             	mov    %rdi,%rbx
    32a4:	e8 f8 58 00 00       	callq  8ba1 <get_thread_data>
    32a9:	48 3b 58 10          	cmp    0x10(%rax),%rbx
    32ad:	0f 96 c2             	setbe  %dl
    32b0:	48 3b 58 18          	cmp    0x18(%rax),%rbx
    32b4:	5b                   	pop    %rbx
    32b5:	0f 93 c0             	setae  %al
    32b8:	21 d0                	and    %edx,%eax
    32ba:	c3                   	retq   
    32bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000032c0 <is_utility_thread>:
    32c0:	48 83 ec 08          	sub    $0x8,%rsp
    32c4:	e8 d8 58 00 00       	callq  8ba1 <get_thread_data>
    32c9:	31 d2                	xor    %edx,%edx
    32cb:	48 85 c0             	test   %rax,%rax
    32ce:	74 07                	je     32d7 <is_utility_thread+0x17>
    32d0:	48 8b 50 30          	mov    0x30(%rax),%rdx
    32d4:	83 e2 01             	and    $0x1,%edx
    32d7:	89 d0                	mov    %edx,%eax
    32d9:	48 83 c4 08          	add    $0x8,%rsp
    32dd:	c3                   	retq   
    32de:	66 90                	xchg   %ax,%ax

00000000000032e0 <get_max_tcs_num>:
    32e0:	48 8d 05 19 5e 00 00 	lea    0x5e19(%rip),%rax        # 9100 <g_global_data>
    32e7:	48 8b 40 40          	mov    0x40(%rax),%rax
    32eb:	c3                   	retq   
    32ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000032f0 <internal_handle_exception>:
    32f0:	41 56                	push   %r14
    32f2:	41 55                	push   %r13
    32f4:	41 54                	push   %r12
    32f6:	55                   	push   %rbp
    32f7:	48 89 fd             	mov    %rdi,%rbp
    32fa:	53                   	push   %rbx
    32fb:	e8 a1 58 00 00       	callq  8ba1 <get_thread_data>
    3300:	49 89 c4             	mov    %rax,%r12
    3303:	48 8b 40 60          	mov    0x60(%rax),%rax
    3307:	48 85 c0             	test   %rax,%rax
    330a:	79 0e                	jns    331a <internal_handle_exception+0x2a>
    330c:	49 c7 44 24 60 ff ff 	movq   $0xffffffffffffffff,0x60(%r12)
    3313:	ff ff 
    3315:	e8 b6 5b 00 00       	callq  8ed0 <abort>
    331a:	48 83 c0 01          	add    $0x1,%rax
    331e:	48 8d 3d bb 9d 00 00 	lea    0x9dbb(%rip),%rdi        # d0e0 <_ZL14g_handler_lock>
    3325:	49 89 44 24 60       	mov    %rax,0x60(%r12)
    332a:	e8 61 4b 00 00       	callq  7e90 <sgx_spin_lock>
    332f:	48 8b 05 b2 9d 00 00 	mov    0x9db2(%rip),%rax        # d0e8 <_ZL12g_first_node>
    3336:	48 85 c0             	test   %rax,%rax
    3339:	0f 84 e7 00 00 00    	je     3426 <internal_handle_exception+0x136>
    333f:	31 db                	xor    %ebx,%ebx
    3341:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3348:	48 8b 40 08          	mov    0x8(%rax),%rax
    334c:	48 83 c3 08          	add    $0x8,%rbx
    3350:	48 85 c0             	test   %rax,%rax
    3353:	75 f3                	jne    3348 <internal_handle_exception+0x58>
    3355:	48 85 db             	test   %rbx,%rbx
    3358:	0f 84 c8 00 00 00    	je     3426 <internal_handle_exception+0x136>
    335e:	48 89 df             	mov    %rbx,%rdi
    3361:	e8 0a 1a 00 00       	callq  4d70 <dlmalloc>
    3366:	48 85 c0             	test   %rax,%rax
    3369:	49 89 c5             	mov    %rax,%r13
    336c:	0f 84 d8 00 00 00    	je     344a <internal_handle_exception+0x15a>
    3372:	48 8b 05 6f 9d 00 00 	mov    0x9d6f(%rip),%rax        # d0e8 <_ZL12g_first_node>
    3379:	48 85 c0             	test   %rax,%rax
    337c:	74 1e                	je     339c <internal_handle_exception+0xac>
    337e:	4c 89 ea             	mov    %r13,%rdx
    3381:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3388:	48 8b 08             	mov    (%rax),%rcx
    338b:	48 8b 40 08          	mov    0x8(%rax),%rax
    338f:	48 83 c2 08          	add    $0x8,%rdx
    3393:	48 89 4a f8          	mov    %rcx,-0x8(%rdx)
    3397:	48 85 c0             	test   %rax,%rax
    339a:	75 ec                	jne    3388 <internal_handle_exception+0x98>
    339c:	48 8d 3d 3d 9d 00 00 	lea    0x9d3d(%rip),%rdi        # d0e0 <_ZL14g_handler_lock>
    33a3:	e8 48 4b 00 00       	callq  7ef0 <sgx_spin_unlock>
    33a8:	48 85 db             	test   %rbx,%rbx
    33ab:	74 55                	je     3402 <internal_handle_exception+0x112>
    33ad:	4d 89 ee             	mov    %r13,%r14
    33b0:	eb 10                	jmp    33c2 <internal_handle_exception+0xd2>
    33b2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    33b8:	49 83 c6 08          	add    $0x8,%r14
    33bc:	48 83 eb 08          	sub    $0x8,%rbx
    33c0:	74 40                	je     3402 <internal_handle_exception+0x112>
    33c2:	49 8b 06             	mov    (%r14),%rax
    33c5:	48 33 05 0c 9d 00 00 	xor    0x9d0c(%rip),%rax        # d0d8 <_ZL12g_veh_cookie>
    33cc:	48 89 ef             	mov    %rbp,%rdi
    33cf:	ff d0                	callq  *%rax
    33d1:	83 f8 ff             	cmp    $0xffffffff,%eax
    33d4:	75 e2                	jne    33b8 <internal_handle_exception+0xc8>
    33d6:	4c 89 ef             	mov    %r13,%rdi
    33d9:	e8 b2 33 00 00       	callq  6790 <dlfree>
    33de:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    33e2:	e8 a9 fe ff ff       	callq  3290 <is_valid_sp>
    33e7:	84 c0                	test   %al,%al
    33e9:	0f 84 1d ff ff ff    	je     330c <internal_handle_exception+0x1c>
    33ef:	49 83 6c 24 60 01    	subq   $0x1,0x60(%r12)
    33f5:	48 89 ef             	mov    %rbp,%rdi
    33f8:	e8 e2 5a 00 00       	callq  8edf <continue_execution>
    33fd:	e9 0a ff ff ff       	jmpq   330c <internal_handle_exception+0x1c>
    3402:	4c 89 ef             	mov    %r13,%rdi
    3405:	e8 86 33 00 00       	callq  6790 <dlfree>
    340a:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    340e:	e8 7d fe ff ff       	callq  3290 <is_valid_sp>
    3413:	84 c0                	test   %al,%al
    3415:	0f 84 f1 fe ff ff    	je     330c <internal_handle_exception+0x1c>
    341b:	49 c7 44 24 60 ff ff 	movq   $0xffffffffffffffff,0x60(%r12)
    3422:	ff ff 
    3424:	eb cf                	jmp    33f5 <internal_handle_exception+0x105>
    3426:	48 8d 3d b3 9c 00 00 	lea    0x9cb3(%rip),%rdi        # d0e0 <_ZL14g_handler_lock>
    342d:	31 db                	xor    %ebx,%ebx
    342f:	e8 bc 4a 00 00       	callq  7ef0 <sgx_spin_unlock>
    3434:	49 c7 44 24 60 ff ff 	movq   $0xffffffffffffffff,0x60(%r12)
    343b:	ff ff 
    343d:	48 89 ef             	mov    %rbp,%rdi
    3440:	e8 9a 5a 00 00       	callq  8edf <continue_execution>
    3445:	e9 14 ff ff ff       	jmpq   335e <internal_handle_exception+0x6e>
    344a:	48 8d 3d 8f 9c 00 00 	lea    0x9c8f(%rip),%rdi        # d0e0 <_ZL14g_handler_lock>
    3451:	e8 9a 4a 00 00       	callq  7ef0 <sgx_spin_unlock>
    3456:	e9 b1 fe ff ff       	jmpq   330c <internal_handle_exception+0x1c>
    345b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003460 <sgx_register_exception_handler>:
    3460:	41 54                	push   %r12
    3462:	55                   	push   %rbp
    3463:	41 89 fc             	mov    %edi,%r12d
    3466:	53                   	push   %rbx
    3467:	48 89 f5             	mov    %rsi,%rbp
    346a:	48 83 ec 10          	sub    $0x10,%rsp
    346e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3475:	00 00 
    3477:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    347c:	31 c0                	xor    %eax,%eax
    347e:	48 83 3d 52 9c 00 00 	cmpq   $0x0,0x9c52(%rip)        # d0d8 <_ZL12g_veh_cookie>
    3485:	00 
    3486:	0f 84 ac 00 00 00    	je     3538 <sgx_register_exception_handler+0xd8>
    348c:	31 f6                	xor    %esi,%esi
    348e:	48 89 ef             	mov    %rbp,%rdi
    3491:	e8 da de ff ff       	callq  1370 <sgx_is_within_enclave>
    3496:	85 c0                	test   %eax,%eax
    3498:	0f 84 c2 00 00 00    	je     3560 <sgx_register_exception_handler+0x100>
    349e:	bf 10 00 00 00       	mov    $0x10,%edi
    34a3:	e8 c8 18 00 00       	callq  4d70 <dlmalloc>
    34a8:	48 85 c0             	test   %rax,%rax
    34ab:	48 89 c3             	mov    %rax,%rbx
    34ae:	0f 84 ac 00 00 00    	je     3560 <sgx_register_exception_handler+0x100>
    34b4:	48 33 2d 1d 9c 00 00 	xor    0x9c1d(%rip),%rbp        # d0d8 <_ZL12g_veh_cookie>
    34bb:	48 8d 3d 1e 9c 00 00 	lea    0x9c1e(%rip),%rdi        # d0e0 <_ZL14g_handler_lock>
    34c2:	48 89 28             	mov    %rbp,(%rax)
    34c5:	e8 c6 49 00 00       	callq  7e90 <sgx_spin_lock>
    34ca:	48 8b 05 17 9c 00 00 	mov    0x9c17(%rip),%rax        # d0e8 <_ZL12g_first_node>
    34d1:	48 85 c0             	test   %rax,%rax
    34d4:	74 05                	je     34db <sgx_register_exception_handler+0x7b>
    34d6:	45 85 e4             	test   %r12d,%r12d
    34d9:	74 40                	je     351b <sgx_register_exception_handler+0xbb>
    34db:	48 89 43 08          	mov    %rax,0x8(%rbx)
    34df:	48 89 1d 02 9c 00 00 	mov    %rbx,0x9c02(%rip)        # d0e8 <_ZL12g_first_node>
    34e6:	48 8d 3d f3 9b 00 00 	lea    0x9bf3(%rip),%rdi        # d0e0 <_ZL14g_handler_lock>
    34ed:	e8 fe 49 00 00       	callq  7ef0 <sgx_spin_unlock>
    34f2:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    34f7:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    34fe:	00 00 
    3500:	48 89 d8             	mov    %rbx,%rax
    3503:	0f 85 91 00 00 00    	jne    359a <sgx_register_exception_handler+0x13a>
    3509:	48 83 c4 10          	add    $0x10,%rsp
    350d:	5b                   	pop    %rbx
    350e:	5d                   	pop    %rbp
    350f:	41 5c                	pop    %r12
    3511:	c3                   	retq   
    3512:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3518:	48 89 d0             	mov    %rdx,%rax
    351b:	48 8b 50 08          	mov    0x8(%rax),%rdx
    351f:	48 85 d2             	test   %rdx,%rdx
    3522:	75 f4                	jne    3518 <sgx_register_exception_handler+0xb8>
    3524:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    352b:	00 
    352c:	48 89 58 08          	mov    %rbx,0x8(%rax)
    3530:	eb b4                	jmp    34e6 <sgx_register_exception_handler+0x86>
    3532:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3538:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    353f:	00 
    3540:	48 89 e3             	mov    %rsp,%rbx
    3543:	eb 0a                	jmp    354f <sgx_register_exception_handler+0xef>
    3545:	0f 1f 00             	nopl   (%rax)
    3548:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    354d:	75 19                	jne    3568 <sgx_register_exception_handler+0x108>
    354f:	be 08 00 00 00       	mov    $0x8,%esi
    3554:	48 89 df             	mov    %rbx,%rdi
    3557:	e8 f4 df ff ff       	callq  1550 <sgx_read_rand>
    355c:	85 c0                	test   %eax,%eax
    355e:	74 e8                	je     3548 <sgx_register_exception_handler+0xe8>
    3560:	31 db                	xor    %ebx,%ebx
    3562:	eb 8e                	jmp    34f2 <sgx_register_exception_handler+0x92>
    3564:	0f 1f 40 00          	nopl   0x0(%rax)
    3568:	48 8d 3d 71 9b 00 00 	lea    0x9b71(%rip),%rdi        # d0e0 <_ZL14g_handler_lock>
    356f:	e8 1c 49 00 00       	callq  7e90 <sgx_spin_lock>
    3574:	48 83 3d 5c 9b 00 00 	cmpq   $0x0,0x9b5c(%rip)        # d0d8 <_ZL12g_veh_cookie>
    357b:	00 
    357c:	75 0b                	jne    3589 <sgx_register_exception_handler+0x129>
    357e:	48 8b 04 24          	mov    (%rsp),%rax
    3582:	48 89 05 4f 9b 00 00 	mov    %rax,0x9b4f(%rip)        # d0d8 <_ZL12g_veh_cookie>
    3589:	48 8d 3d 50 9b 00 00 	lea    0x9b50(%rip),%rdi        # d0e0 <_ZL14g_handler_lock>
    3590:	e8 5b 49 00 00       	callq  7ef0 <sgx_spin_unlock>
    3595:	e9 f2 fe ff ff       	jmpq   348c <sgx_register_exception_handler+0x2c>
    359a:	e8 51 0f 00 00       	callq  44f0 <__stack_chk_fail>
    359f:	90                   	nop

00000000000035a0 <sgx_unregister_exception_handler>:
    35a0:	31 c0                	xor    %eax,%eax
    35a2:	48 85 ff             	test   %rdi,%rdi
    35a5:	74 51                	je     35f8 <sgx_unregister_exception_handler+0x58>
    35a7:	53                   	push   %rbx
    35a8:	48 89 fb             	mov    %rdi,%rbx
    35ab:	48 8d 3d 2e 9b 00 00 	lea    0x9b2e(%rip),%rdi        # d0e0 <_ZL14g_handler_lock>
    35b2:	e8 d9 48 00 00       	callq  7e90 <sgx_spin_lock>
    35b7:	48 8b 15 2a 9b 00 00 	mov    0x9b2a(%rip),%rdx        # d0e8 <_ZL12g_first_node>
    35be:	48 85 d2             	test   %rdx,%rdx
    35c1:	74 1e                	je     35e1 <sgx_unregister_exception_handler+0x41>
    35c3:	48 39 da             	cmp    %rbx,%rdx
    35c6:	75 10                	jne    35d8 <sgx_unregister_exception_handler+0x38>
    35c8:	eb 5e                	jmp    3628 <sgx_unregister_exception_handler+0x88>
    35ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    35d0:	48 39 d8             	cmp    %rbx,%rax
    35d3:	74 2b                	je     3600 <sgx_unregister_exception_handler+0x60>
    35d5:	48 89 c2             	mov    %rax,%rdx
    35d8:	48 8b 42 08          	mov    0x8(%rdx),%rax
    35dc:	48 85 c0             	test   %rax,%rax
    35df:	75 ef                	jne    35d0 <sgx_unregister_exception_handler+0x30>
    35e1:	48 8d 3d f8 9a 00 00 	lea    0x9af8(%rip),%rdi        # d0e0 <_ZL14g_handler_lock>
    35e8:	e8 03 49 00 00       	callq  7ef0 <sgx_spin_unlock>
    35ed:	31 c0                	xor    %eax,%eax
    35ef:	5b                   	pop    %rbx
    35f0:	c3                   	retq   
    35f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    35f8:	f3 c3                	repz retq 
    35fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3600:	48 8b 43 08          	mov    0x8(%rbx),%rax
    3604:	48 8d 3d d5 9a 00 00 	lea    0x9ad5(%rip),%rdi        # d0e0 <_ZL14g_handler_lock>
    360b:	48 89 42 08          	mov    %rax,0x8(%rdx)
    360f:	e8 dc 48 00 00       	callq  7ef0 <sgx_spin_unlock>
    3614:	48 89 df             	mov    %rbx,%rdi
    3617:	e8 74 31 00 00       	callq  6790 <dlfree>
    361c:	b8 01 00 00 00       	mov    $0x1,%eax
    3621:	5b                   	pop    %rbx
    3622:	c3                   	retq   
    3623:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3628:	48 8b 43 08          	mov    0x8(%rbx),%rax
    362c:	48 8d 3d ad 9a 00 00 	lea    0x9aad(%rip),%rdi        # d0e0 <_ZL14g_handler_lock>
    3633:	48 89 05 ae 9a 00 00 	mov    %rax,0x9aae(%rip)        # d0e8 <_ZL12g_first_node>
    363a:	e8 b1 48 00 00       	callq  7ef0 <sgx_spin_unlock>
    363f:	eb d3                	jmp    3614 <sgx_unregister_exception_handler+0x74>
    3641:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3648:	00 00 00 
    364b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003650 <trts_handle_exception>:
    3650:	41 55                	push   %r13
    3652:	41 54                	push   %r12
    3654:	55                   	push   %rbp
    3655:	53                   	push   %rbx
    3656:	48 89 fb             	mov    %rdi,%rbx
    3659:	48 83 ec 08          	sub    $0x8,%rsp
    365d:	e8 3f 55 00 00       	callq  8ba1 <get_thread_data>
    3662:	48 85 c0             	test   %rax,%rax
    3665:	74 51                	je     36b8 <trts_handle_exception+0x68>
    3667:	48 85 db             	test   %rbx,%rbx
    366a:	74 4c                	je     36b8 <trts_handle_exception+0x68>
    366c:	48 89 df             	mov    %rbx,%rdi
    366f:	48 89 c5             	mov    %rax,%rbp
    3672:	e8 39 e0 ff ff       	callq  16b0 <check_static_stack_canary>
    3677:	85 c0                	test   %eax,%eax
    3679:	75 3d                	jne    36b8 <trts_handle_exception+0x68>
    367b:	e8 ee 54 00 00       	callq  8b6e <get_enclave_state>
    3680:	83 f8 02             	cmp    $0x2,%eax
    3683:	75 33                	jne    36b8 <trts_handle_exception+0x68>
    3685:	48 83 7d 60 ff       	cmpq   $0xffffffffffffffff,0x60(%rbp)
    368a:	74 2c                	je     36b8 <trts_handle_exception+0x68>
    368c:	48 8b 45 10          	mov    0x10(%rbp),%rax
    3690:	48 05 b0 02 01 00    	add    $0x102b0,%rax
    3696:	48 39 c3             	cmp    %rax,%rbx
    3699:	75 1d                	jne    36b8 <trts_handle_exception+0x68>
    369b:	4c 8b 65 20          	mov    0x20(%rbp),%r12
    369f:	4c 89 e0             	mov    %r12,%rax
    36a2:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
    36a8:	48 2d 00 10 00 00    	sub    $0x1000,%rax
    36ae:	48 39 c3             	cmp    %rax,%rbx
    36b1:	74 25                	je     36d8 <trts_handle_exception+0x88>
    36b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    36b8:	48 8d 05 e1 99 00 00 	lea    0x99e1(%rip),%rax        # d0a0 <g_enclave_state>
    36bf:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    36c5:	b8 06 10 00 00       	mov    $0x1006,%eax
    36ca:	48 83 c4 08          	add    $0x8,%rsp
    36ce:	5b                   	pop    %rbx
    36cf:	5d                   	pop    %rbp
    36d0:	41 5c                	pop    %r12
    36d2:	41 5d                	pop    %r13
    36d4:	c3                   	retq   
    36d5:	0f 1f 00             	nopl   (%rax)
    36d8:	49 8b 5c 24 20       	mov    0x20(%r12),%rbx
    36dd:	31 f6                	xor    %esi,%esi
    36df:	48 89 df             	mov    %rbx,%rdi
    36e2:	e8 69 fb ff ff       	callq  3250 <is_stack_addr>
    36e7:	84 c0                	test   %al,%al
    36e9:	0f 84 81 00 00 00    	je     3770 <trts_handle_exception+0x120>
    36ef:	48 81 eb 18 01 00 00 	sub    $0x118,%rbx
    36f6:	be 18 01 00 00       	mov    $0x118,%esi
    36fb:	48 83 e3 f0          	and    $0xfffffffffffffff0,%rbx
    36ff:	48 89 df             	mov    %rbx,%rdi
    3702:	e8 49 fb ff ff       	callq  3250 <is_stack_addr>
    3707:	84 c0                	test   %al,%al
    3709:	74 65                	je     3770 <trts_handle_exception+0x120>
    370b:	4c 8d 6b f8          	lea    -0x8(%rbx),%r13
    370f:	be 08 00 00 00       	mov    $0x8,%esi
    3714:	4c 89 ef             	mov    %r13,%rdi
    3717:	e8 34 fb ff ff       	callq  3250 <is_stack_addr>
    371c:	84 c0                	test   %al,%al
    371e:	74 50                	je     3770 <trts_handle_exception+0x120>
    3720:	48 8b 85 98 00 00 00 	mov    0x98(%rbp),%rax
    3727:	4c 39 e8             	cmp    %r13,%rax
    372a:	76 5b                	jbe    3787 <trts_handle_exception+0x137>
    372c:	48 8d 98 ff 0f 00 00 	lea    0xfff(%rax),%rbx
    3733:	4c 29 eb             	sub    %r13,%rbx
    3736:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx
    373d:	48 39 d8             	cmp    %rbx,%rax
    3740:	76 2e                	jbe    3770 <trts_handle_exception+0x120>
    3742:	48 29 d8             	sub    %rbx,%rax
    3745:	48 3b 45 18          	cmp    0x18(%rbp),%rax
    3749:	48 89 c7             	mov    %rax,%rdi
    374c:	72 22                	jb     3770 <trts_handle_exception+0x120>
    374e:	48 89 de             	mov    %rbx,%rsi
    3751:	48 c1 ee 0c          	shr    $0xc,%rsi
    3755:	48 85 f6             	test   %rsi,%rsi
    3758:	74 16                	je     3770 <trts_handle_exception+0x120>
    375a:	e8 61 e7 ff ff       	callq  1ec0 <apply_pages_within_exception>
    375f:	85 c0                	test   %eax,%eax
    3761:	75 0d                	jne    3770 <trts_handle_exception+0x120>
    3763:	48 29 9d 98 00 00 00 	sub    %rbx,0x98(%rbp)
    376a:	e9 5b ff ff ff       	jmpq   36ca <trts_handle_exception+0x7a>
    376f:	90                   	nop
    3770:	48 8d 05 29 99 00 00 	lea    0x9929(%rip),%rax        # d0a0 <g_enclave_state>
    3777:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    377d:	b8 09 10 00 00       	mov    $0x1009,%eax
    3782:	e9 43 ff ff ff       	jmpq   36ca <trts_handle_exception+0x7a>
    3787:	49 8b 84 24 88 00 00 	mov    0x88(%r12),%rax
    378e:	00 
    378f:	48 3b 05 42 98 00 00 	cmp    0x9842(%rip),%rax        # cfd8 <_GLOBAL_OFFSET_TABLE_+0x28>
    3796:	0f 84 05 01 00 00    	je     38a1 <trts_handle_exception+0x251>
    379c:	41 80 bc 24 a3 00 00 	cmpb   $0x0,0xa3(%r12)
    37a3:	00 00 
    37a5:	0f 89 0d ff ff ff    	jns    36b8 <trts_handle_exception+0x68>
    37ab:	41 0f b6 94 24 a0 00 	movzbl 0xa0(%r12),%edx
    37b2:	00 00 
    37b4:	48 8d 0d 35 fb ff ff 	lea    -0x4cb(%rip),%rcx        # 32f0 <internal_handle_exception>
    37bb:	89 93 90 00 00 00    	mov    %edx,0x90(%rbx)
    37c1:	41 0f b6 94 24 a1 00 	movzbl 0xa1(%r12),%edx
    37c8:	00 00 
    37ca:	83 e2 07             	and    $0x7,%edx
    37cd:	89 93 94 00 00 00    	mov    %edx,0x94(%rbx)
    37d3:	49 8b 14 24          	mov    (%r12),%rdx
    37d7:	48 89 13             	mov    %rdx,(%rbx)
    37da:	49 8b 54 24 08       	mov    0x8(%r12),%rdx
    37df:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    37e3:	49 8b 54 24 10       	mov    0x10(%r12),%rdx
    37e8:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    37ec:	49 8b 54 24 18       	mov    0x18(%r12),%rdx
    37f1:	48 89 53 18          	mov    %rdx,0x18(%rbx)
    37f5:	49 8b 54 24 20       	mov    0x20(%r12),%rdx
    37fa:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    37fe:	49 8b 54 24 28       	mov    0x28(%r12),%rdx
    3803:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    3807:	49 8b 54 24 30       	mov    0x30(%r12),%rdx
    380c:	48 89 53 30          	mov    %rdx,0x30(%rbx)
    3810:	49 8b 54 24 38       	mov    0x38(%r12),%rdx
    3815:	48 89 53 38          	mov    %rdx,0x38(%rbx)
    3819:	49 8b 94 24 80 00 00 	mov    0x80(%r12),%rdx
    3820:	00 
    3821:	48 89 83 88 00 00 00 	mov    %rax,0x88(%rbx)
    3828:	48 89 93 80 00 00 00 	mov    %rdx,0x80(%rbx)
    382f:	49 8b 54 24 40       	mov    0x40(%r12),%rdx
    3834:	48 89 53 40          	mov    %rdx,0x40(%rbx)
    3838:	49 8b 54 24 48       	mov    0x48(%r12),%rdx
    383d:	48 89 53 48          	mov    %rdx,0x48(%rbx)
    3841:	49 8b 54 24 50       	mov    0x50(%r12),%rdx
    3846:	48 89 53 50          	mov    %rdx,0x50(%rbx)
    384a:	49 8b 54 24 58       	mov    0x58(%r12),%rdx
    384f:	48 89 53 58          	mov    %rdx,0x58(%rbx)
    3853:	49 8b 54 24 60       	mov    0x60(%r12),%rdx
    3858:	48 89 53 60          	mov    %rdx,0x60(%rbx)
    385c:	49 8b 54 24 68       	mov    0x68(%r12),%rdx
    3861:	48 89 53 68          	mov    %rdx,0x68(%rbx)
    3865:	49 8b 54 24 70       	mov    0x70(%r12),%rdx
    386a:	48 89 53 70          	mov    %rdx,0x70(%rbx)
    386e:	49 8b 54 24 78       	mov    0x78(%r12),%rdx
    3873:	48 89 53 78          	mov    %rdx,0x78(%rbx)
    3877:	49 89 8c 24 88 00 00 	mov    %rcx,0x88(%r12)
    387e:	00 
    387f:	4d 89 6c 24 20       	mov    %r13,0x20(%r12)
    3884:	49 89 1c 24          	mov    %rbx,(%r12)
    3888:	49 89 5c 24 38       	mov    %rbx,0x38(%r12)
    388d:	48 89 43 f8          	mov    %rax,-0x8(%rbx)
    3891:	31 c0                	xor    %eax,%eax
    3893:	41 80 a4 24 a3 00 00 	andb   $0x7f,0xa3(%r12)
    389a:	00 7f 
    389c:	e9 29 fe ff ff       	jmpq   36ca <trts_handle_exception+0x7a>
    38a1:	49 83 3c 24 00       	cmpq   $0x0,(%r12)
    38a6:	0f 85 f0 fe ff ff    	jne    379c <trts_handle_exception+0x14c>
    38ac:	48 83 c0 03          	add    $0x3,%rax
    38b0:	49 83 8c 24 80 00 00 	orq    $0x1,0x80(%r12)
    38b7:	00 01 
    38b9:	49 89 84 24 88 00 00 	mov    %rax,0x88(%r12)
    38c0:	00 
    38c1:	31 c0                	xor    %eax,%eax
    38c3:	e9 02 fe ff ff       	jmpq   36ca <trts_handle_exception+0x7a>
    38c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    38cf:	00 

00000000000038d0 <get_xfeature_state>:
    38d0:	48 83 ec 08          	sub    $0x8,%rsp
    38d4:	e8 57 4c 00 00       	callq  8530 <sgx_self_report>
    38d9:	48 8b 40 38          	mov    0x38(%rax),%rax
    38dd:	31 d2                	xor    %edx,%edx
    38df:	48 83 f8 03          	cmp    $0x3,%rax
    38e3:	0f 95 c2             	setne  %dl
    38e6:	89 15 b8 97 00 00    	mov    %edx,0x97b8(%rip)        # d0a4 <g_xsave_enabled>
    38ec:	48 83 c4 08          	add    $0x8,%rsp
    38f0:	c3                   	retq   
    38f1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    38f8:	00 00 00 
    38fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003900 <do_relocs>:
    3900:	48 01 fe             	add    %rdi,%rsi
    3903:	48 01 fa             	add    %rdi,%rdx
    3906:	48 85 c9             	test   %rcx,%rcx
    3909:	0f 84 42 02 00 00    	je     3b51 <do_relocs+0x251>
    390f:	55                   	push   %rbp
    3910:	4c 8d 15 19 57 00 00 	lea    0x5719(%rip),%r10        # 9030 <g_dyn_entry_table+0x10>
    3917:	53                   	push   %rbx
    3918:	45 31 c9             	xor    %r9d,%r9d
    391b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3920:	4c 8b 46 08          	mov    0x8(%rsi),%r8
    3924:	4c 8b 1e             	mov    (%rsi),%r11
    3927:	44 89 c0             	mov    %r8d,%eax
    392a:	49 01 fb             	add    %rdi,%r11
    392d:	48 83 f8 12          	cmp    $0x12,%rax
    3931:	0f 87 cb 00 00 00    	ja     3a02 <do_relocs+0x102>
    3937:	49 63 04 82          	movslq (%r10,%rax,4),%rax
    393b:	4c 01 d0             	add    %r10,%rax
    393e:	ff e0                	jmpq   *%rax
    3940:	48 8b 58 28          	mov    0x28(%rax),%rbx
    3944:	48 8b 40 30          	mov    0x30(%rax),%rax
    3948:	48 83 f8 01          	cmp    $0x1,%rax
    394c:	76 0b                	jbe    3959 <do_relocs+0x59>
    394e:	48 8d 5c 03 ff       	lea    -0x1(%rbx,%rax,1),%rbx
    3953:	48 f7 d8             	neg    %rax
    3956:	48 21 c3             	and    %rax,%rbx
    3959:	48 85 db             	test   %rbx,%rbx
    395c:	0f 84 a0 00 00 00    	je     3a02 <do_relocs+0x102>
    3962:	48 8b 46 10          	mov    0x10(%rsi),%rax
    3966:	49 03 40 08          	add    0x8(%r8),%rax
    396a:	48 29 d8             	sub    %rbx,%rax
    396d:	49 89 03             	mov    %rax,(%r11)
    3970:	49 83 c1 01          	add    $0x1,%r9
    3974:	48 83 c6 18          	add    $0x18,%rsi
    3978:	4c 39 c9             	cmp    %r9,%rcx
    397b:	75 a3                	jne    3920 <do_relocs+0x20>
    397d:	31 c0                	xor    %eax,%eax
    397f:	5b                   	pop    %rbx
    3980:	5d                   	pop    %rbp
    3981:	c3                   	retq   
    3982:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3988:	49 c1 e8 20          	shr    $0x20,%r8
    398c:	4b 8d 04 40          	lea    (%r8,%r8,2),%rax
    3990:	4c 8d 04 c2          	lea    (%rdx,%rax,8),%r8
    3994:	41 0f b6 40 04       	movzbl 0x4(%r8),%eax
    3999:	c0 e8 04             	shr    $0x4,%al
    399c:	3c 02                	cmp    $0x2,%al
    399e:	0f 84 44 01 00 00    	je     3ae8 <do_relocs+0x1e8>
    39a4:	4d 85 c0             	test   %r8,%r8
    39a7:	74 c7                	je     3970 <do_relocs+0x70>
    39a9:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    39af:	75 51                	jne    3a02 <do_relocs+0x102>
    39b1:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    39b6:	75 4a                	jne    3a02 <do_relocs+0x102>
    39b8:	48 8b 5f 20          	mov    0x20(%rdi),%rbx
    39bc:	48 01 fb             	add    %rdi,%rbx
    39bf:	48 85 db             	test   %rbx,%rbx
    39c2:	48 89 d8             	mov    %rbx,%rax
    39c5:	74 3b                	je     3a02 <do_relocs+0x102>
    39c7:	0f b7 6f 38          	movzwl 0x38(%rdi),%ebp
    39cb:	85 ed                	test   %ebp,%ebp
    39cd:	74 33                	je     3a02 <do_relocs+0x102>
    39cf:	83 3b 07             	cmpl   $0x7,(%rbx)
    39d2:	0f 84 68 ff ff ff    	je     3940 <do_relocs+0x40>
    39d8:	83 ed 01             	sub    $0x1,%ebp
    39db:	48 8d 1c ed 00 00 00 	lea    0x0(,%rbp,8),%rbx
    39e2:	00 
    39e3:	48 29 eb             	sub    %rbp,%rbx
    39e6:	48 8d 5c d8 38       	lea    0x38(%rax,%rbx,8),%rbx
    39eb:	eb 0c                	jmp    39f9 <do_relocs+0xf9>
    39ed:	0f 1f 00             	nopl   (%rax)
    39f0:	83 38 07             	cmpl   $0x7,(%rax)
    39f3:	0f 84 47 ff ff ff    	je     3940 <do_relocs+0x40>
    39f9:	48 83 c0 38          	add    $0x38,%rax
    39fd:	48 39 c3             	cmp    %rax,%rbx
    3a00:	75 ee                	jne    39f0 <do_relocs+0xf0>
    3a02:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3a07:	5b                   	pop    %rbx
    3a08:	5d                   	pop    %rbp
    3a09:	c3                   	retq   
    3a0a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    3a10:	49 c1 e8 20          	shr    $0x20,%r8
    3a14:	4b 8d 04 40          	lea    (%r8,%r8,2),%rax
    3a18:	4c 8d 04 c2          	lea    (%rdx,%rax,8),%r8
    3a1c:	41 0f b6 40 04       	movzbl 0x4(%r8),%eax
    3a21:	c0 e8 04             	shr    $0x4,%al
    3a24:	3c 02                	cmp    $0x2,%al
    3a26:	0f 84 04 01 00 00    	je     3b30 <do_relocs+0x230>
    3a2c:	4d 85 c0             	test   %r8,%r8
    3a2f:	0f 84 3b ff ff ff    	je     3970 <do_relocs+0x70>
    3a35:	48 8b 46 10          	mov    0x10(%rsi),%rax
    3a39:	49 03 40 08          	add    0x8(%r8),%rax
    3a3d:	49 83 c1 01          	add    $0x1,%r9
    3a41:	48 83 c6 18          	add    $0x18,%rsi
    3a45:	4c 39 c9             	cmp    %r9,%rcx
    3a48:	49 89 03             	mov    %rax,(%r11)
    3a4b:	0f 85 cf fe ff ff    	jne    3920 <do_relocs+0x20>
    3a51:	e9 27 ff ff ff       	jmpq   397d <do_relocs+0x7d>
    3a56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3a5d:	00 00 00 
    3a60:	49 83 c1 01          	add    $0x1,%r9
    3a64:	48 83 c6 18          	add    $0x18,%rsi
    3a68:	49 c7 03 01 00 00 00 	movq   $0x1,(%r11)
    3a6f:	4c 39 c9             	cmp    %r9,%rcx
    3a72:	0f 85 a8 fe ff ff    	jne    3920 <do_relocs+0x20>
    3a78:	e9 00 ff ff ff       	jmpq   397d <do_relocs+0x7d>
    3a7d:	0f 1f 00             	nopl   (%rax)
    3a80:	48 8b 46 10          	mov    0x10(%rsi),%rax
    3a84:	49 83 c1 01          	add    $0x1,%r9
    3a88:	48 83 c6 18          	add    $0x18,%rsi
    3a8c:	48 01 f8             	add    %rdi,%rax
    3a8f:	4c 39 c9             	cmp    %r9,%rcx
    3a92:	49 89 03             	mov    %rax,(%r11)
    3a95:	0f 85 85 fe ff ff    	jne    3920 <do_relocs+0x20>
    3a9b:	e9 dd fe ff ff       	jmpq   397d <do_relocs+0x7d>
    3aa0:	49 c1 e8 20          	shr    $0x20,%r8
    3aa4:	4b 8d 04 40          	lea    (%r8,%r8,2),%rax
    3aa8:	4c 8d 04 c2          	lea    (%rdx,%rax,8),%r8
    3aac:	41 0f b6 40 04       	movzbl 0x4(%r8),%eax
    3ab1:	c0 e8 04             	shr    $0x4,%al
    3ab4:	3c 02                	cmp    $0x2,%al
    3ab6:	74 58                	je     3b10 <do_relocs+0x210>
    3ab8:	4d 85 c0             	test   %r8,%r8
    3abb:	0f 84 af fe ff ff    	je     3970 <do_relocs+0x70>
    3ac1:	48 8b 46 10          	mov    0x10(%rsi),%rax
    3ac5:	49 83 c1 01          	add    $0x1,%r9
    3ac9:	48 83 c6 18          	add    $0x18,%rsi
    3acd:	48 01 f8             	add    %rdi,%rax
    3ad0:	49 03 40 08          	add    0x8(%r8),%rax
    3ad4:	4c 39 c9             	cmp    %r9,%rcx
    3ad7:	49 89 03             	mov    %rax,(%r11)
    3ada:	0f 85 40 fe ff ff    	jne    3920 <do_relocs+0x20>
    3ae0:	e9 98 fe ff ff       	jmpq   397d <do_relocs+0x7d>
    3ae5:	0f 1f 00             	nopl   (%rax)
    3ae8:	49 83 78 08 00       	cmpq   $0x0,0x8(%r8)
    3aed:	0f 85 b1 fe ff ff    	jne    39a4 <do_relocs+0xa4>
    3af3:	49 83 c1 01          	add    $0x1,%r9
    3af7:	48 83 c6 18          	add    $0x18,%rsi
    3afb:	4c 39 c9             	cmp    %r9,%rcx
    3afe:	0f 85 1c fe ff ff    	jne    3920 <do_relocs+0x20>
    3b04:	e9 74 fe ff ff       	jmpq   397d <do_relocs+0x7d>
    3b09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3b10:	49 83 78 08 00       	cmpq   $0x0,0x8(%r8)
    3b15:	75 a1                	jne    3ab8 <do_relocs+0x1b8>
    3b17:	49 83 c1 01          	add    $0x1,%r9
    3b1b:	48 83 c6 18          	add    $0x18,%rsi
    3b1f:	4c 39 c9             	cmp    %r9,%rcx
    3b22:	0f 85 f8 fd ff ff    	jne    3920 <do_relocs+0x20>
    3b28:	e9 50 fe ff ff       	jmpq   397d <do_relocs+0x7d>
    3b2d:	0f 1f 00             	nopl   (%rax)
    3b30:	49 83 78 08 00       	cmpq   $0x0,0x8(%r8)
    3b35:	0f 85 f1 fe ff ff    	jne    3a2c <do_relocs+0x12c>
    3b3b:	49 83 c1 01          	add    $0x1,%r9
    3b3f:	48 83 c6 18          	add    $0x18,%rsi
    3b43:	4c 39 c9             	cmp    %r9,%rcx
    3b46:	0f 85 d4 fd ff ff    	jne    3920 <do_relocs+0x20>
    3b4c:	e9 2c fe ff ff       	jmpq   397d <do_relocs+0x7d>
    3b51:	31 c0                	xor    %eax,%eax
    3b53:	c3                   	retq   
    3b54:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    3b5b:	00 00 00 
    3b5e:	66 90                	xchg   %ax,%ax

0000000000003b60 <relocate_enclave>:
    3b60:	48 85 ff             	test   %rdi,%rdi
    3b63:	0f 84 c0 01 00 00    	je     3d29 <relocate_enclave+0x1c9>
    3b69:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    3b6f:	0f 85 b4 01 00 00    	jne    3d29 <relocate_enclave+0x1c9>
    3b75:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    3b7a:	0f 85 a9 01 00 00    	jne    3d29 <relocate_enclave+0x1c9>
    3b80:	41 57                	push   %r15
    3b82:	41 56                	push   %r14
    3b84:	41 55                	push   %r13
    3b86:	41 54                	push   %r12
    3b88:	55                   	push   %rbp
    3b89:	53                   	push   %rbx
    3b8a:	48 89 fb             	mov    %rdi,%rbx
    3b8d:	48 83 ec 10          	sub    $0x10,%rsp
    3b91:	48 03 5f 20          	add    0x20(%rdi),%rbx
    3b95:	0f 84 ff 00 00 00    	je     3c9a <relocate_enclave+0x13a>
    3b9b:	31 ed                	xor    %ebp,%ebp
    3b9d:	66 83 7f 38 00       	cmpw   $0x0,0x38(%rdi)
    3ba2:	49 89 fd             	mov    %rdi,%r13
    3ba5:	4c 8d 25 d0 54 00 00 	lea    0x54d0(%rip),%r12        # 907c <g_dyn_entry_table+0x5c>
    3bac:	75 1e                	jne    3bcc <relocate_enclave+0x6c>
    3bae:	e9 65 01 00 00       	jmpq   3d18 <relocate_enclave+0x1b8>
    3bb3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3bb8:	41 0f b7 45 38       	movzwl 0x38(%r13),%eax
    3bbd:	83 c5 01             	add    $0x1,%ebp
    3bc0:	48 83 c3 38          	add    $0x38,%rbx
    3bc4:	39 e8                	cmp    %ebp,%eax
    3bc6:	0f 86 4c 01 00 00    	jbe    3d18 <relocate_enclave+0x1b8>
    3bcc:	83 3b 02             	cmpl   $0x2,(%rbx)
    3bcf:	75 e7                	jne    3bb8 <relocate_enclave+0x58>
    3bd1:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    3bd5:	48 8b 43 18          	mov    0x18(%rbx),%rax
    3bd9:	48 c1 ea 04          	shr    $0x4,%rdx
    3bdd:	4c 01 e8             	add    %r13,%rax
    3be0:	48 85 d2             	test   %rdx,%rdx
    3be3:	49 89 c0             	mov    %rax,%r8
    3be6:	74 d0                	je     3bb8 <relocate_enclave+0x58>
    3be8:	4c 8b 08             	mov    (%rax),%r9
    3beb:	4d 85 c9             	test   %r9,%r9
    3bee:	74 c8                	je     3bb8 <relocate_enclave+0x58>
    3bf0:	48 c1 e2 04          	shl    $0x4,%rdx
    3bf4:	45 31 ff             	xor    %r15d,%r15d
    3bf7:	45 31 f6             	xor    %r14d,%r14d
    3bfa:	48 01 c2             	add    %rax,%rdx
    3bfd:	45 31 d2             	xor    %r10d,%r10d
    3c00:	31 c0                	xor    %eax,%eax
    3c02:	31 f6                	xor    %esi,%esi
    3c04:	45 31 db             	xor    %r11d,%r11d
    3c07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3c0e:	00 00 
    3c10:	49 83 f9 17          	cmp    $0x17,%r9
    3c14:	77 12                	ja     3c28 <relocate_enclave+0xc8>
    3c16:	4b 63 3c 8c          	movslq (%r12,%r9,4),%rdi
    3c1a:	4c 01 e7             	add    %r12,%rdi
    3c1d:	ff e7                	jmpq   *%rdi
    3c1f:	90                   	nop
    3c20:	4d 8b 50 08          	mov    0x8(%r8),%r10
    3c24:	0f 1f 40 00          	nopl   0x0(%rax)
    3c28:	49 83 c0 10          	add    $0x10,%r8
    3c2c:	49 39 d0             	cmp    %rdx,%r8
    3c2f:	74 08                	je     3c39 <relocate_enclave+0xd9>
    3c31:	4d 8b 08             	mov    (%r8),%r9
    3c34:	4d 85 c9             	test   %r9,%r9
    3c37:	75 d7                	jne    3c10 <relocate_enclave+0xb0>
    3c39:	48 85 f6             	test   %rsi,%rsi
    3c3c:	0f 84 be 00 00 00    	je     3d00 <relocate_enclave+0x1a0>
    3c42:	4d 85 f6             	test   %r14,%r14
    3c45:	4c 89 14 24          	mov    %r10,(%rsp)
    3c49:	74 4f                	je     3c9a <relocate_enclave+0x13a>
    3c4b:	31 d2                	xor    %edx,%edx
    3c4d:	4c 89 ef             	mov    %r13,%rdi
    3c50:	4c 89 5c 24 08       	mov    %r11,0x8(%rsp)
    3c55:	49 f7 f6             	div    %r14
    3c58:	4c 89 da             	mov    %r11,%rdx
    3c5b:	48 89 c1             	mov    %rax,%rcx
    3c5e:	e8 9d fc ff ff       	callq  3900 <do_relocs>
    3c63:	85 c0                	test   %eax,%eax
    3c65:	4c 8b 5c 24 08       	mov    0x8(%rsp),%r11
    3c6a:	4c 8b 14 24          	mov    (%rsp),%r10
    3c6e:	75 2a                	jne    3c9a <relocate_enclave+0x13a>
    3c70:	4d 85 d2             	test   %r10,%r10
    3c73:	0f 84 3f ff ff ff    	je     3bb8 <relocate_enclave+0x58>
    3c79:	31 d2                	xor    %edx,%edx
    3c7b:	4c 89 f8             	mov    %r15,%rax
    3c7e:	4c 89 d6             	mov    %r10,%rsi
    3c81:	49 f7 f6             	div    %r14
    3c84:	4c 89 ef             	mov    %r13,%rdi
    3c87:	4c 89 da             	mov    %r11,%rdx
    3c8a:	48 89 c1             	mov    %rax,%rcx
    3c8d:	e8 6e fc ff ff       	callq  3900 <do_relocs>
    3c92:	85 c0                	test   %eax,%eax
    3c94:	0f 84 1e ff ff ff    	je     3bb8 <relocate_enclave+0x58>
    3c9a:	48 83 c4 10          	add    $0x10,%rsp
    3c9e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3ca3:	5b                   	pop    %rbx
    3ca4:	5d                   	pop    %rbp
    3ca5:	41 5c                	pop    %r12
    3ca7:	41 5d                	pop    %r13
    3ca9:	41 5e                	pop    %r14
    3cab:	41 5f                	pop    %r15
    3cad:	c3                   	retq   
    3cae:	66 90                	xchg   %ax,%ax
    3cb0:	4d 8b 58 08          	mov    0x8(%r8),%r11
    3cb4:	e9 6f ff ff ff       	jmpq   3c28 <relocate_enclave+0xc8>
    3cb9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3cc0:	4d 8b 78 08          	mov    0x8(%r8),%r15
    3cc4:	e9 5f ff ff ff       	jmpq   3c28 <relocate_enclave+0xc8>
    3cc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3cd0:	49 8b 40 08          	mov    0x8(%r8),%rax
    3cd4:	e9 4f ff ff ff       	jmpq   3c28 <relocate_enclave+0xc8>
    3cd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3ce0:	49 8b 70 08          	mov    0x8(%r8),%rsi
    3ce4:	e9 3f ff ff ff       	jmpq   3c28 <relocate_enclave+0xc8>
    3ce9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3cf0:	4d 8b 70 08          	mov    0x8(%r8),%r14
    3cf4:	e9 2f ff ff ff       	jmpq   3c28 <relocate_enclave+0xc8>
    3cf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3d00:	4d 85 d2             	test   %r10,%r10
    3d03:	0f 84 af fe ff ff    	je     3bb8 <relocate_enclave+0x58>
    3d09:	4d 85 f6             	test   %r14,%r14
    3d0c:	0f 85 67 ff ff ff    	jne    3c79 <relocate_enclave+0x119>
    3d12:	eb 86                	jmp    3c9a <relocate_enclave+0x13a>
    3d14:	0f 1f 40 00          	nopl   0x0(%rax)
    3d18:	48 83 c4 10          	add    $0x10,%rsp
    3d1c:	31 c0                	xor    %eax,%eax
    3d1e:	5b                   	pop    %rbx
    3d1f:	5d                   	pop    %rbp
    3d20:	41 5c                	pop    %r12
    3d22:	41 5d                	pop    %r13
    3d24:	41 5e                	pop    %r14
    3d26:	41 5f                	pop    %r15
    3d28:	c3                   	retq   
    3d29:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3d2e:	c3                   	retq   
    3d2f:	90                   	nop

0000000000003d30 <elf_tls_info>:
    3d30:	48 85 ff             	test   %rdi,%rdi
    3d33:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3d38:	74 08                	je     3d42 <elf_tls_info+0x12>
    3d3a:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    3d40:	74 06                	je     3d48 <elf_tls_info+0x18>
    3d42:	f3 c3                	repz retq 
    3d44:	0f 1f 40 00          	nopl   0x0(%rax)
    3d48:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    3d4d:	75 f3                	jne    3d42 <elf_tls_info+0x12>
    3d4f:	48 8b 47 20          	mov    0x20(%rdi),%rax
    3d53:	48 01 f8             	add    %rdi,%rax
    3d56:	48 85 f6             	test   %rsi,%rsi
    3d59:	41 0f 94 c0          	sete   %r8b
    3d5d:	48 85 d2             	test   %rdx,%rdx
    3d60:	0f 94 c1             	sete   %cl
    3d63:	41 08 c8             	or     %cl,%r8b
    3d66:	75 61                	jne    3dc9 <elf_tls_info+0x99>
    3d68:	48 85 c0             	test   %rax,%rax
    3d6b:	74 5c                	je     3dc9 <elf_tls_info+0x99>
    3d6d:	0f b7 4f 38          	movzwl 0x38(%rdi),%ecx
    3d71:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    3d78:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    3d7f:	85 c9                	test   %ecx,%ecx
    3d81:	74 2b                	je     3dae <elf_tls_info+0x7e>
    3d83:	83 38 07             	cmpl   $0x7,(%rax)
    3d86:	74 30                	je     3db8 <elf_tls_info+0x88>
    3d88:	44 8d 41 ff          	lea    -0x1(%rcx),%r8d
    3d8c:	4a 8d 0c c5 00 00 00 	lea    0x0(,%r8,8),%rcx
    3d93:	00 
    3d94:	4c 29 c1             	sub    %r8,%rcx
    3d97:	48 8d 4c c8 38       	lea    0x38(%rax,%rcx,8),%rcx
    3d9c:	eb 07                	jmp    3da5 <elf_tls_info+0x75>
    3d9e:	66 90                	xchg   %ax,%ax
    3da0:	83 38 07             	cmpl   $0x7,(%rax)
    3da3:	74 13                	je     3db8 <elf_tls_info+0x88>
    3da5:	48 83 c0 38          	add    $0x38,%rax
    3da9:	48 39 c8             	cmp    %rcx,%rax
    3dac:	75 f2                	jne    3da0 <elf_tls_info+0x70>
    3dae:	31 c0                	xor    %eax,%eax
    3db0:	c3                   	retq   
    3db1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3db8:	48 03 78 10          	add    0x10(%rax),%rdi
    3dbc:	48 89 3e             	mov    %rdi,(%rsi)
    3dbf:	48 8b 40 20          	mov    0x20(%rax),%rax
    3dc3:	48 89 02             	mov    %rax,(%rdx)
    3dc6:	31 c0                	xor    %eax,%eax
    3dc8:	c3                   	retq   
    3dc9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3dce:	c3                   	retq   
    3dcf:	90                   	nop

0000000000003dd0 <elf_get_init_array>:
    3dd0:	48 85 ff             	test   %rdi,%rdi
    3dd3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3dd8:	74 08                	je     3de2 <elf_get_init_array+0x12>
    3dda:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    3de0:	74 06                	je     3de8 <elf_get_init_array+0x18>
    3de2:	f3 c3                	repz retq 
    3de4:	0f 1f 40 00          	nopl   0x0(%rax)
    3de8:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    3ded:	75 f3                	jne    3de2 <elf_get_init_array+0x12>
    3def:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    3df3:	48 01 f9             	add    %rdi,%rcx
    3df6:	48 85 f6             	test   %rsi,%rsi
    3df9:	41 0f 94 c0          	sete   %r8b
    3dfd:	48 85 d2             	test   %rdx,%rdx
    3e00:	0f 94 c0             	sete   %al
    3e03:	41 08 c0             	or     %al,%r8b
    3e06:	0f 85 97 00 00 00    	jne    3ea3 <elf_get_init_array+0xd3>
    3e0c:	48 85 c9             	test   %rcx,%rcx
    3e0f:	0f 84 8e 00 00 00    	je     3ea3 <elf_get_init_array+0xd3>
    3e15:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
    3e19:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    3e20:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    3e27:	85 c0                	test   %eax,%eax
    3e29:	74 75                	je     3ea0 <elf_get_init_array+0xd0>
    3e2b:	44 8d 40 ff          	lea    -0x1(%rax),%r8d
    3e2f:	4a 8d 04 c5 00 00 00 	lea    0x0(,%r8,8),%rax
    3e36:	00 
    3e37:	4c 29 c0             	sub    %r8,%rax
    3e3a:	4c 8d 54 c1 38       	lea    0x38(%rcx,%rax,8),%r10
    3e3f:	eb 10                	jmp    3e51 <elf_get_init_array+0x81>
    3e41:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3e48:	48 83 c1 38          	add    $0x38,%rcx
    3e4c:	4c 39 d1             	cmp    %r10,%rcx
    3e4f:	74 4f                	je     3ea0 <elf_get_init_array+0xd0>
    3e51:	83 39 02             	cmpl   $0x2,(%rcx)
    3e54:	75 f2                	jne    3e48 <elf_get_init_array+0x78>
    3e56:	4c 8b 49 20          	mov    0x20(%rcx),%r9
    3e5a:	48 8b 41 18          	mov    0x18(%rcx),%rax
    3e5e:	49 c1 e9 04          	shr    $0x4,%r9
    3e62:	48 01 f8             	add    %rdi,%rax
    3e65:	4d 85 c9             	test   %r9,%r9
    3e68:	74 de                	je     3e48 <elf_get_init_array+0x78>
    3e6a:	49 c1 e1 04          	shl    $0x4,%r9
    3e6e:	49 01 c1             	add    %rax,%r9
    3e71:	eb 1b                	jmp    3e8e <elf_get_init_array+0xbe>
    3e73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3e78:	49 83 f8 1b          	cmp    $0x1b,%r8
    3e7c:	75 07                	jne    3e85 <elf_get_init_array+0xb5>
    3e7e:	4c 8b 40 08          	mov    0x8(%rax),%r8
    3e82:	4c 89 02             	mov    %r8,(%rdx)
    3e85:	48 83 c0 10          	add    $0x10,%rax
    3e89:	49 39 c1             	cmp    %rax,%r9
    3e8c:	74 ba                	je     3e48 <elf_get_init_array+0x78>
    3e8e:	4c 8b 00             	mov    (%rax),%r8
    3e91:	49 83 f8 19          	cmp    $0x19,%r8
    3e95:	75 e1                	jne    3e78 <elf_get_init_array+0xa8>
    3e97:	4c 8b 40 08          	mov    0x8(%rax),%r8
    3e9b:	4c 89 06             	mov    %r8,(%rsi)
    3e9e:	eb e5                	jmp    3e85 <elf_get_init_array+0xb5>
    3ea0:	31 c0                	xor    %eax,%eax
    3ea2:	c3                   	retq   
    3ea3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3ea8:	c3                   	retq   
    3ea9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003eb0 <elf_get_uninit_array>:
    3eb0:	48 85 ff             	test   %rdi,%rdi
    3eb3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3eb8:	74 08                	je     3ec2 <elf_get_uninit_array+0x12>
    3eba:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    3ec0:	74 06                	je     3ec8 <elf_get_uninit_array+0x18>
    3ec2:	f3 c3                	repz retq 
    3ec4:	0f 1f 40 00          	nopl   0x0(%rax)
    3ec8:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    3ecd:	75 f3                	jne    3ec2 <elf_get_uninit_array+0x12>
    3ecf:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    3ed3:	48 01 f9             	add    %rdi,%rcx
    3ed6:	48 85 f6             	test   %rsi,%rsi
    3ed9:	41 0f 94 c0          	sete   %r8b
    3edd:	48 85 d2             	test   %rdx,%rdx
    3ee0:	0f 94 c0             	sete   %al
    3ee3:	41 08 c0             	or     %al,%r8b
    3ee6:	0f 85 97 00 00 00    	jne    3f83 <elf_get_uninit_array+0xd3>
    3eec:	48 85 c9             	test   %rcx,%rcx
    3eef:	0f 84 8e 00 00 00    	je     3f83 <elf_get_uninit_array+0xd3>
    3ef5:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
    3ef9:	48 c7 06 00 00 00 00 	movq   $0x0,(%rsi)
    3f00:	48 c7 02 00 00 00 00 	movq   $0x0,(%rdx)
    3f07:	85 c0                	test   %eax,%eax
    3f09:	74 75                	je     3f80 <elf_get_uninit_array+0xd0>
    3f0b:	44 8d 40 ff          	lea    -0x1(%rax),%r8d
    3f0f:	4a 8d 04 c5 00 00 00 	lea    0x0(,%r8,8),%rax
    3f16:	00 
    3f17:	4c 29 c0             	sub    %r8,%rax
    3f1a:	4c 8d 54 c1 38       	lea    0x38(%rcx,%rax,8),%r10
    3f1f:	eb 10                	jmp    3f31 <elf_get_uninit_array+0x81>
    3f21:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3f28:	48 83 c1 38          	add    $0x38,%rcx
    3f2c:	4c 39 d1             	cmp    %r10,%rcx
    3f2f:	74 4f                	je     3f80 <elf_get_uninit_array+0xd0>
    3f31:	83 39 02             	cmpl   $0x2,(%rcx)
    3f34:	75 f2                	jne    3f28 <elf_get_uninit_array+0x78>
    3f36:	4c 8b 49 20          	mov    0x20(%rcx),%r9
    3f3a:	48 8b 41 18          	mov    0x18(%rcx),%rax
    3f3e:	49 c1 e9 04          	shr    $0x4,%r9
    3f42:	48 01 f8             	add    %rdi,%rax
    3f45:	4d 85 c9             	test   %r9,%r9
    3f48:	74 de                	je     3f28 <elf_get_uninit_array+0x78>
    3f4a:	49 c1 e1 04          	shl    $0x4,%r9
    3f4e:	49 01 c1             	add    %rax,%r9
    3f51:	eb 1b                	jmp    3f6e <elf_get_uninit_array+0xbe>
    3f53:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    3f58:	49 83 f8 1c          	cmp    $0x1c,%r8
    3f5c:	75 07                	jne    3f65 <elf_get_uninit_array+0xb5>
    3f5e:	4c 8b 40 08          	mov    0x8(%rax),%r8
    3f62:	4c 89 02             	mov    %r8,(%rdx)
    3f65:	48 83 c0 10          	add    $0x10,%rax
    3f69:	49 39 c1             	cmp    %rax,%r9
    3f6c:	74 ba                	je     3f28 <elf_get_uninit_array+0x78>
    3f6e:	4c 8b 00             	mov    (%rax),%r8
    3f71:	49 83 f8 1a          	cmp    $0x1a,%r8
    3f75:	75 e1                	jne    3f58 <elf_get_uninit_array+0xa8>
    3f77:	4c 8b 40 08          	mov    0x8(%rax),%r8
    3f7b:	4c 89 06             	mov    %r8,(%rsi)
    3f7e:	eb e5                	jmp    3f65 <elf_get_uninit_array+0xb5>
    3f80:	31 c0                	xor    %eax,%eax
    3f82:	c3                   	retq   
    3f83:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    3f88:	c3                   	retq   
    3f89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003f90 <change_protection>:
    3f90:	48 85 ff             	test   %rdi,%rdi
    3f93:	b8 01 00 00 00       	mov    $0x1,%eax
    3f98:	0f 84 02 01 00 00    	je     40a0 <change_protection+0x110>
    3f9e:	81 3f 7f 45 4c 46    	cmpl   $0x464c457f,(%rdi)
    3fa4:	74 0a                	je     3fb0 <change_protection+0x20>
    3fa6:	f3 c3                	repz retq 
    3fa8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    3faf:	00 
    3fb0:	66 83 7f 10 03       	cmpw   $0x3,0x10(%rdi)
    3fb5:	75 ef                	jne    3fa6 <change_protection+0x16>
    3fb7:	41 56                	push   %r14
    3fb9:	41 55                	push   %r13
    3fbb:	41 54                	push   %r12
    3fbd:	55                   	push   %rbp
    3fbe:	53                   	push   %rbx
    3fbf:	48 89 fb             	mov    %rdi,%rbx
    3fc2:	48 03 5f 20          	add    0x20(%rdi),%rbx
    3fc6:	0f 84 cb 00 00 00    	je     4097 <change_protection+0x107>
    3fcc:	0f b7 47 38          	movzwl 0x38(%rdi),%eax
    3fd0:	49 89 fc             	mov    %rdi,%r12
    3fd3:	85 c0                	test   %eax,%eax
    3fd5:	0f 84 25 01 00 00    	je     4100 <change_protection+0x170>
    3fdb:	83 3b 02             	cmpl   $0x2,(%rbx)
    3fde:	0f 84 ab 01 00 00    	je     418f <change_protection+0x1ff>
    3fe4:	8d 50 ff             	lea    -0x1(%rax),%edx
    3fe7:	48 8d 04 d5 00 00 00 	lea    0x0(,%rdx,8),%rax
    3fee:	00 
    3fef:	48 29 d0             	sub    %rdx,%rax
    3ff2:	48 8d 54 c3 38       	lea    0x38(%rbx,%rax,8),%rdx
    3ff7:	48 89 d8             	mov    %rbx,%rax
    3ffa:	eb 0d                	jmp    4009 <change_protection+0x79>
    3ffc:	0f 1f 40 00          	nopl   0x0(%rax)
    4000:	83 38 02             	cmpl   $0x2,(%rax)
    4003:	0f 84 8f 01 00 00    	je     4198 <change_protection+0x208>
    4009:	48 83 c0 38          	add    $0x38,%rax
    400d:	48 39 d0             	cmp    %rdx,%rax
    4010:	75 ee                	jne    4000 <change_protection+0x70>
    4012:	45 31 f6             	xor    %r14d,%r14d
    4015:	45 31 ed             	xor    %r13d,%r13d
    4018:	48 bd ff ff ff ff 02 	movabs $0x2ffffffff,%rbp
    401f:	00 00 00 
    4022:	eb 1b                	jmp    403f <change_protection+0xaf>
    4024:	0f 1f 40 00          	nopl   0x0(%rax)
    4028:	41 0f b7 44 24 38    	movzwl 0x38(%r12),%eax
    402e:	41 83 c5 01          	add    $0x1,%r13d
    4032:	48 83 c3 38          	add    $0x38,%rbx
    4036:	44 39 e8             	cmp    %r13d,%eax
    4039:	0f 86 c1 00 00 00    	jbe    4100 <change_protection+0x170>
    403f:	45 85 f6             	test   %r14d,%r14d
    4042:	74 0c                	je     4050 <change_protection+0xc0>
    4044:	48 8b 03             	mov    (%rbx),%rax
    4047:	48 21 e8             	and    %rbp,%rax
    404a:	48 83 f8 01          	cmp    $0x1,%rax
    404e:	74 58                	je     40a8 <change_protection+0x118>
    4050:	81 3b 52 e5 74 64    	cmpl   $0x6474e552,(%rbx)
    4056:	75 d0                	jne    4028 <change_protection+0x98>
    4058:	48 8b 43 10          	mov    0x10(%rbx),%rax
    405c:	48 89 c7             	mov    %rax,%rdi
    405f:	48 03 43 28          	add    0x28(%rbx),%rax
    4063:	48 81 e7 00 f0 ff ff 	and    $0xfffffffffffff000,%rdi
    406a:	4c 01 e7             	add    %r12,%rdi
    406d:	48 89 c6             	mov    %rax,%rsi
    4070:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    4077:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    407e:	4c 01 e6             	add    %r12,%rsi
    4081:	48 39 f7             	cmp    %rsi,%rdi
    4084:	74 a2                	je     4028 <change_protection+0x98>
    4086:	48 29 fe             	sub    %rdi,%rsi
    4089:	ba 01 00 00 00       	mov    $0x1,%edx
    408e:	e8 8d eb ff ff       	callq  2c20 <trts_mprotect>
    4093:	85 c0                	test   %eax,%eax
    4095:	74 91                	je     4028 <change_protection+0x98>
    4097:	5b                   	pop    %rbx
    4098:	5d                   	pop    %rbp
    4099:	41 5c                	pop    %r12
    409b:	41 5d                	pop    %r13
    409d:	41 5e                	pop    %r14
    409f:	c3                   	retq   
    40a0:	f3 c3                	repz retq 
    40a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    40a8:	48 8b 43 10          	mov    0x10(%rbx),%rax
    40ac:	8b 7b 04             	mov    0x4(%rbx),%edi
    40af:	48 89 c1             	mov    %rax,%rcx
    40b2:	48 03 43 28          	add    0x28(%rbx),%rax
    40b6:	89 fa                	mov    %edi,%edx
    40b8:	c1 ea 02             	shr    $0x2,%edx
    40bb:	48 81 e1 00 f0 ff ff 	and    $0xfffffffffffff000,%rcx
    40c2:	83 e2 01             	and    $0x1,%edx
    40c5:	48 89 c6             	mov    %rax,%rsi
    40c8:	48 89 d0             	mov    %rdx,%rax
    40cb:	48 81 c6 ff 0f 00 00 	add    $0xfff,%rsi
    40d2:	48 83 c8 04          	or     $0x4,%rax
    40d6:	48 81 e6 00 f0 ff ff 	and    $0xfffffffffffff000,%rsi
    40dd:	83 e7 01             	and    $0x1,%edi
    40e0:	49 8d 3c 0c          	lea    (%r12,%rcx,1),%rdi
    40e4:	48 0f 45 d0          	cmovne %rax,%rdx
    40e8:	48 29 ce             	sub    %rcx,%rsi
    40eb:	e8 30 eb ff ff       	callq  2c20 <trts_mprotect>
    40f0:	85 c0                	test   %eax,%eax
    40f2:	0f 84 58 ff ff ff    	je     4050 <change_protection+0xc0>
    40f8:	eb 9d                	jmp    4097 <change_protection+0x107>
    40fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4100:	8b 05 2a 51 00 00    	mov    0x512a(%rip),%eax        # 9230 <g_global_data+0x130>
    4106:	31 c9                	xor    %ecx,%ecx
    4108:	48 8d 3d f1 4f 00 00 	lea    0x4ff1(%rip),%rdi        # 9100 <g_global_data>
    410f:	85 c0                	test   %eax,%eax
    4111:	75 12                	jne    4125 <change_protection+0x195>
    4113:	eb 82                	jmp    4097 <change_protection+0x107>
    4115:	0f 1f 00             	nopl   (%rax)
    4118:	8b 05 12 51 00 00    	mov    0x5112(%rip),%eax        # 9230 <g_global_data+0x130>
    411e:	83 c1 01             	add    $0x1,%ecx
    4121:	39 c8                	cmp    %ecx,%eax
    4123:	76 63                	jbe    4188 <change_protection+0x1f8>
    4125:	89 c8                	mov    %ecx,%eax
    4127:	48 89 c2             	mov    %rax,%rdx
    412a:	48 c1 e2 05          	shl    $0x5,%rdx
    412e:	48 01 fa             	add    %rdi,%rdx
    4131:	0f b7 b2 38 01 00 00 	movzwl 0x138(%rdx),%esi
    4138:	66 83 fe 14          	cmp    $0x14,%si
    413c:	75 da                	jne    4118 <change_protection+0x188>
    413e:	48 83 c0 0a          	add    $0xa,%rax
    4142:	48 c1 e0 05          	shl    $0x5,%rax
    4146:	48 01 f8             	add    %rdi,%rax
    4149:	48 8b 40 10          	mov    0x10(%rax),%rax
    414d:	48 3d 07 02 00 00    	cmp    $0x207,%rax
    4153:	75 c3                	jne    4118 <change_protection+0x188>
    4155:	8b 82 3c 01 00 00    	mov    0x13c(%rdx),%eax
    415b:	85 c0                	test   %eax,%eax
    415d:	74 b9                	je     4118 <change_protection+0x188>
    415f:	8b b2 3c 01 00 00    	mov    0x13c(%rdx),%esi
    4165:	48 8b ba 40 01 00 00 	mov    0x140(%rdx),%rdi
    416c:	ba 03 00 00 00       	mov    $0x3,%edx
    4171:	5b                   	pop    %rbx
    4172:	5d                   	pop    %rbp
    4173:	4c 01 e7             	add    %r12,%rdi
    4176:	41 5c                	pop    %r12
    4178:	41 5d                	pop    %r13
    417a:	41 5e                	pop    %r14
    417c:	48 c1 e6 0c          	shl    $0xc,%rsi
    4180:	e9 9b ea ff ff       	jmpq   2c20 <trts_mprotect>
    4185:	0f 1f 00             	nopl   (%rax)
    4188:	31 c0                	xor    %eax,%eax
    418a:	e9 08 ff ff ff       	jmpq   4097 <change_protection+0x107>
    418f:	48 89 d8             	mov    %rbx,%rax
    4192:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4198:	48 8b 48 20          	mov    0x20(%rax),%rcx
    419c:	48 8b 70 18          	mov    0x18(%rax),%rsi
    41a0:	48 c1 e9 04          	shr    $0x4,%rcx
    41a4:	4c 01 e6             	add    %r12,%rsi
    41a7:	48 85 c9             	test   %rcx,%rcx
    41aa:	48 89 f0             	mov    %rsi,%rax
    41ad:	0f 84 5f fe ff ff    	je     4012 <change_protection+0x82>
    41b3:	48 8b 16             	mov    (%rsi),%rdx
    41b6:	48 85 d2             	test   %rdx,%rdx
    41b9:	0f 84 53 fe ff ff    	je     4012 <change_protection+0x82>
    41bf:	48 83 fa 16          	cmp    $0x16,%rdx
    41c3:	74 2b                	je     41f0 <change_protection+0x260>
    41c5:	48 c1 e1 04          	shl    $0x4,%rcx
    41c9:	48 01 f1             	add    %rsi,%rcx
    41cc:	eb 14                	jmp    41e2 <change_protection+0x252>
    41ce:	66 90                	xchg   %ax,%ax
    41d0:	48 8b 10             	mov    (%rax),%rdx
    41d3:	48 85 d2             	test   %rdx,%rdx
    41d6:	0f 84 36 fe ff ff    	je     4012 <change_protection+0x82>
    41dc:	48 83 fa 16          	cmp    $0x16,%rdx
    41e0:	74 0e                	je     41f0 <change_protection+0x260>
    41e2:	48 83 c0 10          	add    $0x10,%rax
    41e6:	48 39 c8             	cmp    %rcx,%rax
    41e9:	75 e5                	jne    41d0 <change_protection+0x240>
    41eb:	e9 22 fe ff ff       	jmpq   4012 <change_protection+0x82>
    41f0:	41 be 01 00 00 00    	mov    $0x1,%r14d
    41f6:	e9 1a fe ff ff       	jmpq   4015 <change_protection+0x85>
    41fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000004200 <__cxa_atexit>:
    4200:	41 55                	push   %r13
    4202:	41 54                	push   %r12
    4204:	49 89 d5             	mov    %rdx,%r13
    4207:	55                   	push   %rbp
    4208:	53                   	push   %rbx
    4209:	48 89 fd             	mov    %rdi,%rbp
    420c:	49 89 f4             	mov    %rsi,%r12
    420f:	48 83 ec 18          	sub    $0x18,%rsp
    4213:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    421a:	00 00 
    421c:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    4221:	31 c0                	xor    %eax,%eax
    4223:	48 83 3d c5 8e 00 00 	cmpq   $0x0,0x8ec5(%rip)        # d0f0 <g_exit_function_cookie>
    422a:	00 
    422b:	0f 84 8f 00 00 00    	je     42c0 <__cxa_atexit+0xc0>
    4231:	31 f6                	xor    %esi,%esi
    4233:	48 89 ef             	mov    %rbp,%rdi
    4236:	e8 35 d1 ff ff       	callq  1370 <sgx_is_within_enclave>
    423b:	85 c0                	test   %eax,%eax
    423d:	0f 84 a5 00 00 00    	je     42e8 <__cxa_atexit+0xe8>
    4243:	bf 20 00 00 00       	mov    $0x20,%edi
    4248:	e8 23 0b 00 00       	callq  4d70 <dlmalloc>
    424d:	48 85 c0             	test   %rax,%rax
    4250:	48 89 c3             	mov    %rax,%rbx
    4253:	0f 84 8f 00 00 00    	je     42e8 <__cxa_atexit+0xe8>
    4259:	48 8b 05 90 8e 00 00 	mov    0x8e90(%rip),%rax        # d0f0 <g_exit_function_cookie>
    4260:	48 8d 3d 91 8e 00 00 	lea    0x8e91(%rip),%rdi        # d0f8 <g_exit_function_lock>
    4267:	4c 89 6b 10          	mov    %r13,0x10(%rbx)
    426b:	48 31 c5             	xor    %rax,%rbp
    426e:	49 31 c4             	xor    %rax,%r12
    4271:	48 89 2b             	mov    %rbp,(%rbx)
    4274:	4c 89 63 08          	mov    %r12,0x8(%rbx)
    4278:	e8 13 3c 00 00       	callq  7e90 <sgx_spin_lock>
    427d:	48 8b 05 7c 8e 00 00 	mov    0x8e7c(%rip),%rax        # d100 <g_exit_function>
    4284:	48 8d 3d 6d 8e 00 00 	lea    0x8e6d(%rip),%rdi        # d0f8 <g_exit_function_lock>
    428b:	48 89 1d 6e 8e 00 00 	mov    %rbx,0x8e6e(%rip)        # d100 <g_exit_function>
    4292:	48 89 43 18          	mov    %rax,0x18(%rbx)
    4296:	e8 55 3c 00 00       	callq  7ef0 <sgx_spin_unlock>
    429b:	31 c0                	xor    %eax,%eax
    429d:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    42a2:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    42a9:	00 00 
    42ab:	75 75                	jne    4322 <__cxa_atexit+0x122>
    42ad:	48 83 c4 18          	add    $0x18,%rsp
    42b1:	5b                   	pop    %rbx
    42b2:	5d                   	pop    %rbp
    42b3:	41 5c                	pop    %r12
    42b5:	41 5d                	pop    %r13
    42b7:	c3                   	retq   
    42b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    42bf:	00 
    42c0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    42c7:	00 
    42c8:	48 89 e3             	mov    %rsp,%rbx
    42cb:	eb 0a                	jmp    42d7 <__cxa_atexit+0xd7>
    42cd:	0f 1f 00             	nopl   (%rax)
    42d0:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    42d5:	75 19                	jne    42f0 <__cxa_atexit+0xf0>
    42d7:	be 08 00 00 00       	mov    $0x8,%esi
    42dc:	48 89 df             	mov    %rbx,%rdi
    42df:	e8 6c d2 ff ff       	callq  1550 <sgx_read_rand>
    42e4:	85 c0                	test   %eax,%eax
    42e6:	74 e8                	je     42d0 <__cxa_atexit+0xd0>
    42e8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    42ed:	eb ae                	jmp    429d <__cxa_atexit+0x9d>
    42ef:	90                   	nop
    42f0:	48 8d 3d 01 8e 00 00 	lea    0x8e01(%rip),%rdi        # d0f8 <g_exit_function_lock>
    42f7:	e8 94 3b 00 00       	callq  7e90 <sgx_spin_lock>
    42fc:	48 83 3d ec 8d 00 00 	cmpq   $0x0,0x8dec(%rip)        # d0f0 <g_exit_function_cookie>
    4303:	00 
    4304:	75 0b                	jne    4311 <__cxa_atexit+0x111>
    4306:	48 8b 04 24          	mov    (%rsp),%rax
    430a:	48 89 05 df 8d 00 00 	mov    %rax,0x8ddf(%rip)        # d0f0 <g_exit_function_cookie>
    4311:	48 8d 3d e0 8d 00 00 	lea    0x8de0(%rip),%rdi        # d0f8 <g_exit_function_lock>
    4318:	e8 d3 3b 00 00       	callq  7ef0 <sgx_spin_unlock>
    431d:	e9 0f ff ff ff       	jmpq   4231 <__cxa_atexit+0x31>
    4322:	e8 c9 01 00 00       	callq  44f0 <__stack_chk_fail>
    4327:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    432e:	00 00 

0000000000004330 <atexit>:
    4330:	48 8b 15 f9 8c 00 00 	mov    0x8cf9(%rip),%rdx        # d030 <__dso_handle>
    4337:	31 f6                	xor    %esi,%esi
    4339:	e9 c2 fe ff ff       	jmpq   4200 <__cxa_atexit>
    433e:	66 90                	xchg   %ax,%ax

0000000000004340 <init_global_object>:
    4340:	55                   	push   %rbp
    4341:	53                   	push   %rbx
    4342:	48 8d 3d b7 bc ff ff 	lea    -0x4349(%rip),%rdi        # 0 <__ImageBase>
    4349:	48 83 ec 28          	sub    $0x28,%rsp
    434d:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    4352:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    4357:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    435e:	00 00 
    4360:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4367:	00 00 
    4369:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    436e:	31 c0                	xor    %eax,%eax
    4370:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    4377:	00 00 
    4379:	e8 52 fa ff ff       	callq  3dd0 <elf_get_init_array>
    437e:	85 c0                	test   %eax,%eax
    4380:	75 0a                	jne    438c <init_global_object+0x4c>
    4382:	48 8b 5c 24 08       	mov    0x8(%rsp),%rbx
    4387:	48 85 db             	test   %rbx,%rbx
    438a:	75 1c                	jne    43a8 <init_global_object+0x68>
    438c:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    4391:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    4398:	00 00 
    439a:	75 41                	jne    43dd <init_global_object+0x9d>
    439c:	48 83 c4 28          	add    $0x28,%rsp
    43a0:	5b                   	pop    %rbx
    43a1:	5d                   	pop    %rbp
    43a2:	c3                   	retq   
    43a3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    43a8:	48 8b 6c 24 10       	mov    0x10(%rsp),%rbp
    43ad:	48 85 ed             	test   %rbp,%rbp
    43b0:	74 da                	je     438c <init_global_object+0x4c>
    43b2:	48 8d 05 47 bc ff ff 	lea    -0x43b9(%rip),%rax        # 0 <__ImageBase>
    43b9:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
    43bd:	48 01 c3             	add    %rax,%rbx
    43c0:	48 01 dd             	add    %rbx,%rbp
    43c3:	48 39 eb             	cmp    %rbp,%rbx
    43c6:	73 c4                	jae    438c <init_global_object+0x4c>
    43c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    43cf:	00 
    43d0:	ff 13                	callq  *(%rbx)
    43d2:	48 83 c3 08          	add    $0x8,%rbx
    43d6:	48 39 dd             	cmp    %rbx,%rbp
    43d9:	77 f5                	ja     43d0 <init_global_object+0x90>
    43db:	eb af                	jmp    438c <init_global_object+0x4c>
    43dd:	e8 0e 01 00 00       	callq  44f0 <__stack_chk_fail>
    43e2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    43e9:	00 00 00 
    43ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000043f0 <uninit_global_object>:
    43f0:	55                   	push   %rbp
    43f1:	53                   	push   %rbx
    43f2:	48 83 ec 28          	sub    $0x28,%rsp
    43f6:	48 8b 1d 03 8d 00 00 	mov    0x8d03(%rip),%rbx        # d100 <g_exit_function>
    43fd:	48 c7 05 f8 8c 00 00 	movq   $0x0,0x8cf8(%rip)        # d100 <g_exit_function>
    4404:	00 00 00 00 
    4408:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    440f:	00 00 
    4411:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    4416:	31 c0                	xor    %eax,%eax
    4418:	48 85 db             	test   %rbx,%rbx
    441b:	74 2a                	je     4447 <uninit_global_object+0x57>
    441d:	0f 1f 00             	nopl   (%rax)
    4420:	48 8b 05 c9 8c 00 00 	mov    0x8cc9(%rip),%rax        # d0f0 <g_exit_function_cookie>
    4427:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    442b:	48 31 c7             	xor    %rax,%rdi
    442e:	48 33 03             	xor    (%rbx),%rax
    4431:	ff d0                	callq  *%rax
    4433:	48 8b 6b 18          	mov    0x18(%rbx),%rbp
    4437:	48 89 df             	mov    %rbx,%rdi
    443a:	e8 51 23 00 00       	callq  6790 <dlfree>
    443f:	48 85 ed             	test   %rbp,%rbp
    4442:	48 89 eb             	mov    %rbp,%rbx
    4445:	75 d9                	jne    4420 <uninit_global_object+0x30>
    4447:	48 8d 54 24 10       	lea    0x10(%rsp),%rdx
    444c:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    4451:	48 8d 3d a8 bb ff ff 	lea    -0x4458(%rip),%rdi        # 0 <__ImageBase>
    4458:	e8 53 fa ff ff       	callq  3eb0 <elf_get_uninit_array>
    445d:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    4462:	48 85 c0             	test   %rax,%rax
    4465:	74 47                	je     44ae <uninit_global_object+0xbe>
    4467:	48 8b 4c 24 10       	mov    0x10(%rsp),%rcx
    446c:	48 85 c9             	test   %rcx,%rcx
    446f:	74 3d                	je     44ae <uninit_global_object+0xbe>
    4471:	48 8d 15 88 bb ff ff 	lea    -0x4478(%rip),%rdx        # 0 <__ImageBase>
    4478:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    447c:	48 01 c2             	add    %rax,%rdx
    447f:	48 8d 44 0a f8       	lea    -0x8(%rdx,%rcx,1),%rax
    4484:	48 39 c2             	cmp    %rax,%rdx
    4487:	77 25                	ja     44ae <uninit_global_object+0xbe>
    4489:	48 89 c5             	mov    %rax,%rbp
    448c:	48 8d 58 f8          	lea    -0x8(%rax),%rbx
    4490:	48 29 d5             	sub    %rdx,%rbp
    4493:	48 f7 d5             	not    %rbp
    4496:	48 83 e5 f8          	and    $0xfffffffffffffff8,%rbp
    449a:	48 01 c5             	add    %rax,%rbp
    449d:	eb 05                	jmp    44a4 <uninit_global_object+0xb4>
    449f:	90                   	nop
    44a0:	48 83 eb 08          	sub    $0x8,%rbx
    44a4:	ff 10                	callq  *(%rax)
    44a6:	48 39 eb             	cmp    %rbp,%rbx
    44a9:	48 89 d8             	mov    %rbx,%rax
    44ac:	75 f2                	jne    44a0 <uninit_global_object+0xb0>
    44ae:	48 8b 44 24 18       	mov    0x18(%rsp),%rax
    44b3:	64 48 33 04 25 28 00 	xor    %fs:0x28,%rax
    44ba:	00 00 
    44bc:	75 07                	jne    44c5 <uninit_global_object+0xd5>
    44be:	48 83 c4 28          	add    $0x28,%rsp
    44c2:	5b                   	pop    %rbx
    44c3:	5d                   	pop    %rbp
    44c4:	c3                   	retq   
    44c5:	e8 26 00 00 00       	callq  44f0 <__stack_chk_fail>
    44ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000044d0 <__tls_get_addr>:
    44d0:	53                   	push   %rbx
    44d1:	48 89 fb             	mov    %rdi,%rbx
    44d4:	e8 c8 46 00 00       	callq  8ba1 <get_thread_data>
    44d9:	48 8b 40 50          	mov    0x50(%rax),%rax
    44dd:	48 03 43 08          	add    0x8(%rbx),%rax
    44e1:	5b                   	pop    %rbx
    44e2:	c3                   	retq   
    44e3:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    44ea:	00 00 00 
    44ed:	0f 1f 00             	nopl   (%rax)

00000000000044f0 <__stack_chk_fail>:
    44f0:	48 83 ec 08          	sub    $0x8,%rsp
    44f4:	e8 d7 49 00 00       	callq  8ed0 <abort>
    44f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004500 <__stack_chk_fail_local>:
    4500:	48 83 ec 08          	sub    $0x8,%rsp
    4504:	e8 c7 49 00 00       	callq  8ed0 <abort>
    4509:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004510 <__intel_security_check_cookie>:
    4510:	48 39 3d 01 89 00 00 	cmp    %rdi,0x8901(%rip)        # ce18 <__intel_security_cookie>
    4517:	75 02                	jne    451b <__intel_security_check_cookie+0xb>
    4519:	f3 c3                	repz retq 
    451b:	48 83 ec 08          	sub    $0x8,%rsp
    451f:	e8 ac 49 00 00       	callq  8ed0 <abort>
    4524:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    452b:	00 00 00 
    452e:	66 90                	xchg   %ax,%ax

0000000000004530 <init_mparams>:
    4530:	48 83 ec 18          	sub    $0x18,%rsp
    4534:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    453b:	00 00 
    453d:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    4542:	31 c0                	xor    %eax,%eax
    4544:	b8 01 00 00 00       	mov    $0x1,%eax
    4549:	87 05 c1 8f 00 00    	xchg   %eax,0x8fc1(%rip)        # d510 <malloc_global_mutex>
    454f:	85 c0                	test   %eax,%eax
    4551:	74 1f                	je     4572 <init_mparams+0x42>
    4553:	48 8d 15 b6 8f 00 00 	lea    0x8fb6(%rip),%rdx        # d510 <malloc_global_mutex>
    455a:	b9 01 00 00 00       	mov    $0x1,%ecx
    455f:	90                   	nop
    4560:	8b 02                	mov    (%rdx),%eax
    4562:	85 c0                	test   %eax,%eax
    4564:	75 fa                	jne    4560 <init_mparams+0x30>
    4566:	89 c8                	mov    %ecx,%eax
    4568:	87 05 a2 8f 00 00    	xchg   %eax,0x8fa2(%rip)        # d510 <malloc_global_mutex>
    456e:	85 c0                	test   %eax,%eax
    4570:	75 ee                	jne    4560 <init_mparams+0x30>
    4572:	48 83 3d 66 8f 00 00 	cmpq   $0x0,0x8f66(%rip)        # d4e0 <mparams>
    4579:	00 
    457a:	75 6b                	jne    45e7 <init_mparams+0xb7>
    457c:	48 89 e7             	mov    %rsp,%rdi
    457f:	be 08 00 00 00       	mov    $0x8,%esi
    4584:	48 c7 05 61 8f 00 00 	movq   $0x1000,0x8f61(%rip)        # d4f0 <mparams+0x10>
    458b:	00 10 00 00 
    458f:	48 c7 05 4e 8f 00 00 	movq   $0x1000,0x8f4e(%rip)        # d4e8 <mparams+0x8>
    4596:	00 10 00 00 
    459a:	48 c7 05 53 8f 00 00 	movq   $0xffffffffffffffff,0x8f53(%rip)        # d4f8 <mparams+0x18>
    45a1:	ff ff ff ff 
    45a5:	48 c7 05 50 8f 00 00 	movq   $0x200000,0x8f50(%rip)        # d500 <mparams+0x20>
    45ac:	00 00 20 00 
    45b0:	c7 05 4e 8f 00 00 02 	movl   $0x2,0x8f4e(%rip)        # d508 <mparams+0x28>
    45b7:	00 00 00 
    45ba:	48 c7 05 cb 8e 00 00 	movq   $0x2,0x8ecb(%rip)        # d490 <_gm_+0x370>
    45c1:	02 00 00 00 
    45c5:	e8 86 cf ff ff       	callq  1550 <sgx_read_rand>
    45ca:	85 c0                	test   %eax,%eax
    45cc:	75 3d                	jne    460b <init_mparams+0xdb>
    45ce:	48 8b 04 24          	mov    (%rsp),%rax
    45d2:	48 35 55 55 55 55    	xor    $0x55555555,%rax
    45d8:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    45dc:	48 83 c8 08          	or     $0x8,%rax
    45e0:	48 89 05 f9 8e 00 00 	mov    %rax,0x8ef9(%rip)        # d4e0 <mparams>
    45e7:	c7 05 1f 8f 00 00 00 	movl   $0x0,0x8f1f(%rip)        # d510 <malloc_global_mutex>
    45ee:	00 00 00 
    45f1:	b8 01 00 00 00       	mov    $0x1,%eax
    45f6:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    45fb:	64 48 33 34 25 28 00 	xor    %fs:0x28,%rsi
    4602:	00 00 
    4604:	75 0a                	jne    4610 <init_mparams+0xe0>
    4606:	48 83 c4 18          	add    $0x18,%rsp
    460a:	c3                   	retq   
    460b:	e8 c0 48 00 00       	callq  8ed0 <abort>
    4610:	e8 db fe ff ff       	callq  44f0 <__stack_chk_fail>
    4615:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    461c:	00 00 00 
    461f:	90                   	nop

0000000000004620 <dispose_chunk>:
    4620:	55                   	push   %rbp
    4621:	53                   	push   %rbx
    4622:	48 8d 04 16          	lea    (%rsi,%rdx,1),%rax
    4626:	48 83 ec 08          	sub    $0x8,%rsp
    462a:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    462e:	f6 c1 01             	test   $0x1,%cl
    4631:	75 6d                	jne    46a0 <dispose_chunk+0x80>
    4633:	83 e1 03             	and    $0x3,%ecx
    4636:	0f 84 db 00 00 00    	je     4717 <dispose_chunk+0xf7>
    463c:	48 8b 0e             	mov    (%rsi),%rcx
    463f:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
    4643:	48 29 ce             	sub    %rcx,%rsi
    4646:	48 01 ca             	add    %rcx,%rdx
    4649:	49 39 f1             	cmp    %rsi,%r9
    464c:	0f 87 ee 02 00 00    	ja     4940 <dispose_chunk+0x320>
    4652:	48 39 77 20          	cmp    %rsi,0x20(%rdi)
    4656:	0f 84 6c 02 00 00    	je     48c8 <dispose_chunk+0x2a8>
    465c:	48 c1 e9 03          	shr    $0x3,%rcx
    4660:	4c 8b 46 18          	mov    0x18(%rsi),%r8
    4664:	48 83 f9 1f          	cmp    $0x1f,%rcx
    4668:	0f 87 b2 02 00 00    	ja     4920 <dispose_chunk+0x300>
    466e:	44 8d 1c 09          	lea    (%rcx,%rcx,1),%r11d
    4672:	4c 8b 56 10          	mov    0x10(%rsi),%r10
    4676:	4e 8d 5c df 48       	lea    0x48(%rdi,%r11,8),%r11
    467b:	4d 39 d3             	cmp    %r10,%r11
    467e:	0f 85 fc 05 00 00    	jne    4c80 <dispose_chunk+0x660>
    4684:	4d 39 d0             	cmp    %r10,%r8
    4687:	0f 84 2b 05 00 00    	je     4bb8 <dispose_chunk+0x598>
    468d:	4d 39 c3             	cmp    %r8,%r11
    4690:	0f 85 56 06 00 00    	jne    4cec <dispose_chunk+0x6cc>
    4696:	4d 89 42 18          	mov    %r8,0x18(%r10)
    469a:	4d 89 50 10          	mov    %r10,0x10(%r8)
    469e:	eb 04                	jmp    46a4 <dispose_chunk+0x84>
    46a0:	4c 8b 4f 18          	mov    0x18(%rdi),%r9
    46a4:	49 39 c1             	cmp    %rax,%r9
    46a7:	0f 87 93 02 00 00    	ja     4940 <dispose_chunk+0x320>
    46ad:	48 8b 48 08          	mov    0x8(%rax),%rcx
    46b1:	f6 c1 02             	test   $0x2,%cl
    46b4:	74 6a                	je     4720 <dispose_chunk+0x100>
    46b6:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    46ba:	48 89 48 08          	mov    %rcx,0x8(%rax)
    46be:	48 89 d0             	mov    %rdx,%rax
    46c1:	48 83 c8 01          	or     $0x1,%rax
    46c5:	48 89 46 08          	mov    %rax,0x8(%rsi)
    46c9:	48 89 14 16          	mov    %rdx,(%rsi,%rdx,1)
    46cd:	48 89 d1             	mov    %rdx,%rcx
    46d0:	48 c1 e9 03          	shr    $0x3,%rcx
    46d4:	48 83 f9 1f          	cmp    $0x1f,%rcx
    46d8:	0f 87 c2 00 00 00    	ja     47a0 <dispose_chunk+0x180>
    46de:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    46e1:	44 8b 07             	mov    (%rdi),%r8d
    46e4:	48 8d 54 c7 48       	lea    0x48(%rdi,%rax,8),%rdx
    46e9:	b8 01 00 00 00       	mov    $0x1,%eax
    46ee:	d3 e0                	shl    %cl,%eax
    46f0:	41 85 c0             	test   %eax,%r8d
    46f3:	0f 84 a7 01 00 00    	je     48a0 <dispose_chunk+0x280>
    46f9:	48 8b 42 10          	mov    0x10(%rdx),%rax
    46fd:	48 3b 47 18          	cmp    0x18(%rdi),%rax
    4701:	0f 82 39 02 00 00    	jb     4940 <dispose_chunk+0x320>
    4707:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    470b:	48 89 70 18          	mov    %rsi,0x18(%rax)
    470f:	48 89 46 10          	mov    %rax,0x10(%rsi)
    4713:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    4717:	48 83 c4 08          	add    $0x8,%rsp
    471b:	5b                   	pop    %rbx
    471c:	5d                   	pop    %rbp
    471d:	c3                   	retq   
    471e:	66 90                	xchg   %ax,%ax
    4720:	48 39 47 28          	cmp    %rax,0x28(%rdi)
    4724:	4c 8b 5f 20          	mov    0x20(%rdi),%r11
    4728:	0f 84 42 02 00 00    	je     4970 <dispose_chunk+0x350>
    472e:	49 39 c3             	cmp    %rax,%r11
    4731:	0f 84 c9 01 00 00    	je     4900 <dispose_chunk+0x2e0>
    4737:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    473b:	4c 8b 40 18          	mov    0x18(%rax),%r8
    473f:	48 01 ca             	add    %rcx,%rdx
    4742:	48 c1 e9 03          	shr    $0x3,%rcx
    4746:	48 83 f9 1f          	cmp    $0x1f,%rcx
    474a:	0f 87 58 02 00 00    	ja     49a8 <dispose_chunk+0x388>
    4750:	8d 1c 09             	lea    (%rcx,%rcx,1),%ebx
    4753:	4c 8b 50 10          	mov    0x10(%rax),%r10
    4757:	48 8d 5c df 48       	lea    0x48(%rdi,%rbx,8),%rbx
    475c:	4c 39 d3             	cmp    %r10,%rbx
    475f:	0f 85 44 05 00 00    	jne    4ca9 <dispose_chunk+0x689>
    4765:	4d 39 d0             	cmp    %r10,%r8
    4768:	0f 84 b2 04 00 00    	je     4c20 <dispose_chunk+0x600>
    476e:	4c 39 c3             	cmp    %r8,%rbx
    4771:	0f 85 d6 03 00 00    	jne    4b4d <dispose_chunk+0x52d>
    4777:	4d 89 42 18          	mov    %r8,0x18(%r10)
    477b:	4d 89 50 10          	mov    %r10,0x10(%r8)
    477f:	48 89 d0             	mov    %rdx,%rax
    4782:	48 83 c8 01          	or     $0x1,%rax
    4786:	4c 39 de             	cmp    %r11,%rsi
    4789:	48 89 46 08          	mov    %rax,0x8(%rsi)
    478d:	48 89 14 16          	mov    %rdx,(%rsi,%rdx,1)
    4791:	0f 85 36 ff ff ff    	jne    46cd <dispose_chunk+0xad>
    4797:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    479b:	e9 77 ff ff ff       	jmpq   4717 <dispose_chunk+0xf7>
    47a0:	48 89 d0             	mov    %rdx,%rax
    47a3:	48 c1 e8 08          	shr    $0x8,%rax
    47a7:	85 c0                	test   %eax,%eax
    47a9:	0f 84 01 01 00 00    	je     48b0 <dispose_chunk+0x290>
    47af:	3d ff ff 00 00       	cmp    $0xffff,%eax
    47b4:	0f 87 d6 02 00 00    	ja     4a90 <dispose_chunk+0x470>
    47ba:	0f bd c0             	bsr    %eax,%eax
    47bd:	b9 26 00 00 00       	mov    $0x26,%ecx
    47c2:	48 89 d3             	mov    %rdx,%rbx
    47c5:	83 f0 1f             	xor    $0x1f,%eax
    47c8:	41 b8 1f 00 00 00    	mov    $0x1f,%r8d
    47ce:	29 c1                	sub    %eax,%ecx
    47d0:	41 29 c0             	sub    %eax,%r8d
    47d3:	b8 01 00 00 00       	mov    $0x1,%eax
    47d8:	48 d3 eb             	shr    %cl,%rbx
    47db:	48 89 d9             	mov    %rbx,%rcx
    47de:	83 e1 01             	and    $0x1,%ecx
    47e1:	46 8d 1c 41          	lea    (%rcx,%r8,2),%r11d
    47e5:	4c 89 d9             	mov    %r11,%rcx
    47e8:	4e 8d 14 dd 58 02 00 	lea    0x258(,%r11,8),%r10
    47ef:	00 
    47f0:	d3 e0                	shl    %cl,%eax
    47f2:	44 8b 47 04          	mov    0x4(%rdi),%r8d
    47f6:	89 4e 38             	mov    %ecx,0x38(%rsi)
    47f9:	48 c7 46 28 00 00 00 	movq   $0x0,0x28(%rsi)
    4800:	00 
    4801:	48 c7 46 20 00 00 00 	movq   $0x0,0x20(%rsi)
    4808:	00 
    4809:	44 85 c0             	test   %r8d,%eax
    480c:	0f 84 36 01 00 00    	je     4948 <dispose_chunk+0x328>
    4812:	83 f9 1f             	cmp    $0x1f,%ecx
    4815:	4e 8b 84 df 58 02 00 	mov    0x258(%rdi,%r11,8),%r8
    481c:	00 
    481d:	49 89 d2             	mov    %rdx,%r10
    4820:	74 34                	je     4856 <dispose_chunk+0x236>
    4822:	d1 e9                	shr    %ecx
    4824:	b8 39 00 00 00       	mov    $0x39,%eax
    4829:	29 c8                	sub    %ecx,%eax
    482b:	89 c1                	mov    %eax,%ecx
    482d:	49 d3 e2             	shl    %cl,%r10
    4830:	eb 24                	jmp    4856 <dispose_chunk+0x236>
    4832:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4838:	4c 89 d0             	mov    %r10,%rax
    483b:	4d 01 d2             	add    %r10,%r10
    483e:	48 c1 e8 3f          	shr    $0x3f,%rax
    4842:	48 83 c0 04          	add    $0x4,%rax
    4846:	49 8b 0c c0          	mov    (%r8,%rax,8),%rcx
    484a:	48 85 c9             	test   %rcx,%rcx
    484d:	0f 84 15 02 00 00    	je     4a68 <dispose_chunk+0x448>
    4853:	49 89 c8             	mov    %rcx,%r8
    4856:	49 8b 40 08          	mov    0x8(%r8),%rax
    485a:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    485e:	48 39 d0             	cmp    %rdx,%rax
    4861:	75 d5                	jne    4838 <dispose_chunk+0x218>
    4863:	4d 39 c1             	cmp    %r8,%r9
    4866:	49 8b 40 10          	mov    0x10(%r8),%rax
    486a:	0f 87 d0 00 00 00    	ja     4940 <dispose_chunk+0x320>
    4870:	49 39 c1             	cmp    %rax,%r9
    4873:	0f 87 c7 00 00 00    	ja     4940 <dispose_chunk+0x320>
    4879:	48 89 70 18          	mov    %rsi,0x18(%rax)
    487d:	49 89 70 10          	mov    %rsi,0x10(%r8)
    4881:	48 89 46 10          	mov    %rax,0x10(%rsi)
    4885:	4c 89 46 18          	mov    %r8,0x18(%rsi)
    4889:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
    4890:	00 
    4891:	e9 81 fe ff ff       	jmpq   4717 <dispose_chunk+0xf7>
    4896:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    489d:	00 00 00 
    48a0:	44 09 c0             	or     %r8d,%eax
    48a3:	89 07                	mov    %eax,(%rdi)
    48a5:	48 89 d0             	mov    %rdx,%rax
    48a8:	e9 5a fe ff ff       	jmpq   4707 <dispose_chunk+0xe7>
    48ad:	0f 1f 00             	nopl   (%rax)
    48b0:	b8 01 00 00 00       	mov    $0x1,%eax
    48b5:	41 ba 58 02 00 00    	mov    $0x258,%r10d
    48bb:	31 c9                	xor    %ecx,%ecx
    48bd:	45 31 db             	xor    %r11d,%r11d
    48c0:	e9 2d ff ff ff       	jmpq   47f2 <dispose_chunk+0x1d2>
    48c5:	0f 1f 00             	nopl   (%rax)
    48c8:	48 8b 48 08          	mov    0x8(%rax),%rcx
    48cc:	49 89 c8             	mov    %rcx,%r8
    48cf:	41 83 e0 03          	and    $0x3,%r8d
    48d3:	49 83 f8 03          	cmp    $0x3,%r8
    48d7:	0f 85 c7 fd ff ff    	jne    46a4 <dispose_chunk+0x84>
    48dd:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    48e1:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    48e5:	48 89 48 08          	mov    %rcx,0x8(%rax)
    48e9:	48 89 d1             	mov    %rdx,%rcx
    48ec:	48 83 c9 01          	or     $0x1,%rcx
    48f0:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    48f4:	48 89 10             	mov    %rdx,(%rax)
    48f7:	e9 1b fe ff ff       	jmpq   4717 <dispose_chunk+0xf7>
    48fc:	0f 1f 40 00          	nopl   0x0(%rax)
    4900:	48 03 57 08          	add    0x8(%rdi),%rdx
    4904:	48 89 77 20          	mov    %rsi,0x20(%rdi)
    4908:	48 89 d0             	mov    %rdx,%rax
    490b:	48 89 57 08          	mov    %rdx,0x8(%rdi)
    490f:	48 83 c8 01          	or     $0x1,%rax
    4913:	48 89 46 08          	mov    %rax,0x8(%rsi)
    4917:	48 89 14 16          	mov    %rdx,(%rsi,%rdx,1)
    491b:	e9 f7 fd ff ff       	jmpq   4717 <dispose_chunk+0xf7>
    4920:	49 39 f0             	cmp    %rsi,%r8
    4923:	48 8b 5e 30          	mov    0x30(%rsi),%rbx
    4927:	0f 84 3b 02 00 00    	je     4b68 <dispose_chunk+0x548>
    492d:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    4931:	49 39 c9             	cmp    %rcx,%r9
    4934:	77 0a                	ja     4940 <dispose_chunk+0x320>
    4936:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    493a:	0f 84 70 01 00 00    	je     4ab0 <dispose_chunk+0x490>
    4940:	e8 8b 45 00 00       	callq  8ed0 <abort>
    4945:	0f 1f 00             	nopl   (%rax)
    4948:	44 09 c0             	or     %r8d,%eax
    494b:	89 47 04             	mov    %eax,0x4(%rdi)
    494e:	4a 89 b4 df 58 02 00 	mov    %rsi,0x258(%rdi,%r11,8)
    4955:	00 
    4956:	4c 01 d7             	add    %r10,%rdi
    4959:	48 89 7e 30          	mov    %rdi,0x30(%rsi)
    495d:	48 89 76 18          	mov    %rsi,0x18(%rsi)
    4961:	48 89 76 10          	mov    %rsi,0x10(%rsi)
    4965:	e9 ad fd ff ff       	jmpq   4717 <dispose_chunk+0xf7>
    496a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4970:	48 03 57 10          	add    0x10(%rdi),%rdx
    4974:	48 89 77 28          	mov    %rsi,0x28(%rdi)
    4978:	48 89 57 10          	mov    %rdx,0x10(%rdi)
    497c:	48 83 ca 01          	or     $0x1,%rdx
    4980:	4c 39 de             	cmp    %r11,%rsi
    4983:	48 89 56 08          	mov    %rdx,0x8(%rsi)
    4987:	0f 85 8a fd ff ff    	jne    4717 <dispose_chunk+0xf7>
    498d:	48 c7 47 20 00 00 00 	movq   $0x0,0x20(%rdi)
    4994:	00 
    4995:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    499c:	00 
    499d:	e9 75 fd ff ff       	jmpq   4717 <dispose_chunk+0xf7>
    49a2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    49a8:	49 39 c0             	cmp    %rax,%r8
    49ab:	48 8b 68 30          	mov    0x30(%rax),%rbp
    49af:	0f 84 1b 02 00 00    	je     4bd0 <dispose_chunk+0x5b0>
    49b5:	48 8b 48 10          	mov    0x10(%rax),%rcx
    49b9:	49 39 c9             	cmp    %rcx,%r9
    49bc:	77 82                	ja     4940 <dispose_chunk+0x320>
    49be:	48 39 41 18          	cmp    %rax,0x18(%rcx)
    49c2:	0f 85 78 ff ff ff    	jne    4940 <dispose_chunk+0x320>
    49c8:	49 39 40 10          	cmp    %rax,0x10(%r8)
    49cc:	0f 85 6e ff ff ff    	jne    4940 <dispose_chunk+0x320>
    49d2:	4c 89 41 18          	mov    %r8,0x18(%rcx)
    49d6:	49 89 48 10          	mov    %rcx,0x10(%r8)
    49da:	48 85 ed             	test   %rbp,%rbp
    49dd:	0f 84 9c fd ff ff    	je     477f <dispose_chunk+0x15f>
    49e3:	44 8b 50 38          	mov    0x38(%rax),%r10d
    49e7:	4c 89 d1             	mov    %r10,%rcx
    49ea:	4e 8d 14 d7          	lea    (%rdi,%r10,8),%r10
    49ee:	49 39 82 58 02 00 00 	cmp    %rax,0x258(%r10)
    49f5:	0f 84 5d 02 00 00    	je     4c58 <dispose_chunk+0x638>
    49fb:	49 39 e9             	cmp    %rbp,%r9
    49fe:	0f 87 3c ff ff ff    	ja     4940 <dispose_chunk+0x320>
    4a04:	48 39 45 20          	cmp    %rax,0x20(%rbp)
    4a08:	0f 84 92 02 00 00    	je     4ca0 <dispose_chunk+0x680>
    4a0e:	4c 89 45 28          	mov    %r8,0x28(%rbp)
    4a12:	4d 85 c0             	test   %r8,%r8
    4a15:	0f 84 64 fd ff ff    	je     477f <dispose_chunk+0x15f>
    4a1b:	4d 39 c8             	cmp    %r9,%r8
    4a1e:	0f 82 1c ff ff ff    	jb     4940 <dispose_chunk+0x320>
    4a24:	48 8b 48 20          	mov    0x20(%rax),%rcx
    4a28:	49 89 68 30          	mov    %rbp,0x30(%r8)
    4a2c:	48 85 c9             	test   %rcx,%rcx
    4a2f:	74 11                	je     4a42 <dispose_chunk+0x422>
    4a31:	49 39 c9             	cmp    %rcx,%r9
    4a34:	0f 87 06 ff ff ff    	ja     4940 <dispose_chunk+0x320>
    4a3a:	49 89 48 20          	mov    %rcx,0x20(%r8)
    4a3e:	4c 89 41 30          	mov    %r8,0x30(%rcx)
    4a42:	48 8b 40 28          	mov    0x28(%rax),%rax
    4a46:	48 85 c0             	test   %rax,%rax
    4a49:	0f 84 30 fd ff ff    	je     477f <dispose_chunk+0x15f>
    4a4f:	49 39 c1             	cmp    %rax,%r9
    4a52:	0f 87 e8 fe ff ff    	ja     4940 <dispose_chunk+0x320>
    4a58:	49 89 40 28          	mov    %rax,0x28(%r8)
    4a5c:	4c 89 40 30          	mov    %r8,0x30(%rax)
    4a60:	e9 1a fd ff ff       	jmpq   477f <dispose_chunk+0x15f>
    4a65:	0f 1f 00             	nopl   (%rax)
    4a68:	49 8d 14 c0          	lea    (%r8,%rax,8),%rdx
    4a6c:	48 39 57 18          	cmp    %rdx,0x18(%rdi)
    4a70:	0f 87 ca fe ff ff    	ja     4940 <dispose_chunk+0x320>
    4a76:	49 89 34 c0          	mov    %rsi,(%r8,%rax,8)
    4a7a:	4c 89 46 30          	mov    %r8,0x30(%rsi)
    4a7e:	48 89 76 18          	mov    %rsi,0x18(%rsi)
    4a82:	48 89 76 10          	mov    %rsi,0x10(%rsi)
    4a86:	e9 8c fc ff ff       	jmpq   4717 <dispose_chunk+0xf7>
    4a8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4a90:	b8 00 00 00 80       	mov    $0x80000000,%eax
    4a95:	41 ba 50 03 00 00    	mov    $0x350,%r10d
    4a9b:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    4aa0:	41 bb 1f 00 00 00    	mov    $0x1f,%r11d
    4aa6:	e9 47 fd ff ff       	jmpq   47f2 <dispose_chunk+0x1d2>
    4aab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4ab0:	49 39 70 10          	cmp    %rsi,0x10(%r8)
    4ab4:	0f 85 86 fe ff ff    	jne    4940 <dispose_chunk+0x320>
    4aba:	4c 89 41 18          	mov    %r8,0x18(%rcx)
    4abe:	49 89 48 10          	mov    %rcx,0x10(%r8)
    4ac2:	48 85 db             	test   %rbx,%rbx
    4ac5:	0f 84 d9 fb ff ff    	je     46a4 <dispose_chunk+0x84>
    4acb:	44 8b 56 38          	mov    0x38(%rsi),%r10d
    4acf:	4c 89 d1             	mov    %r10,%rcx
    4ad2:	4e 8d 14 d7          	lea    (%rdi,%r10,8),%r10
    4ad6:	49 39 b2 58 02 00 00 	cmp    %rsi,0x258(%r10)
    4add:	0f 84 4d 01 00 00    	je     4c30 <dispose_chunk+0x610>
    4ae3:	49 39 d9             	cmp    %rbx,%r9
    4ae6:	0f 87 54 fe ff ff    	ja     4940 <dispose_chunk+0x320>
    4aec:	48 39 73 20          	cmp    %rsi,0x20(%rbx)
    4af0:	0f 84 81 01 00 00    	je     4c77 <dispose_chunk+0x657>
    4af6:	4c 89 43 28          	mov    %r8,0x28(%rbx)
    4afa:	4d 85 c0             	test   %r8,%r8
    4afd:	0f 84 a1 fb ff ff    	je     46a4 <dispose_chunk+0x84>
    4b03:	4d 39 c1             	cmp    %r8,%r9
    4b06:	0f 87 34 fe ff ff    	ja     4940 <dispose_chunk+0x320>
    4b0c:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    4b10:	49 89 58 30          	mov    %rbx,0x30(%r8)
    4b14:	48 85 c9             	test   %rcx,%rcx
    4b17:	74 11                	je     4b2a <dispose_chunk+0x50a>
    4b19:	49 39 c9             	cmp    %rcx,%r9
    4b1c:	0f 87 1e fe ff ff    	ja     4940 <dispose_chunk+0x320>
    4b22:	49 89 48 20          	mov    %rcx,0x20(%r8)
    4b26:	4c 89 41 30          	mov    %r8,0x30(%rcx)
    4b2a:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    4b2e:	48 85 c9             	test   %rcx,%rcx
    4b31:	0f 84 6d fb ff ff    	je     46a4 <dispose_chunk+0x84>
    4b37:	49 39 c9             	cmp    %rcx,%r9
    4b3a:	0f 87 00 fe ff ff    	ja     4940 <dispose_chunk+0x320>
    4b40:	49 89 48 28          	mov    %rcx,0x28(%r8)
    4b44:	4c 89 41 30          	mov    %r8,0x30(%rcx)
    4b48:	e9 57 fb ff ff       	jmpq   46a4 <dispose_chunk+0x84>
    4b4d:	4d 39 c1             	cmp    %r8,%r9
    4b50:	0f 87 ea fd ff ff    	ja     4940 <dispose_chunk+0x320>
    4b56:	49 39 40 10          	cmp    %rax,0x10(%r8)
    4b5a:	0f 84 17 fc ff ff    	je     4777 <dispose_chunk+0x157>
    4b60:	e9 db fd ff ff       	jmpq   4940 <dispose_chunk+0x320>
    4b65:	0f 1f 00             	nopl   (%rax)
    4b68:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    4b6c:	4c 8d 56 28          	lea    0x28(%rsi),%r10
    4b70:	48 85 c9             	test   %rcx,%rcx
    4b73:	0f 84 4f 01 00 00    	je     4cc8 <dispose_chunk+0x6a8>
    4b79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4b80:	49 89 c8             	mov    %rcx,%r8
    4b83:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    4b87:	4d 89 d3             	mov    %r10,%r11
    4b8a:	4d 8d 50 28          	lea    0x28(%r8),%r10
    4b8e:	48 85 c9             	test   %rcx,%rcx
    4b91:	75 ed                	jne    4b80 <dispose_chunk+0x560>
    4b93:	49 8b 48 20          	mov    0x20(%r8),%rcx
    4b97:	4d 8d 50 20          	lea    0x20(%r8),%r10
    4b9b:	48 85 c9             	test   %rcx,%rcx
    4b9e:	75 e0                	jne    4b80 <dispose_chunk+0x560>
    4ba0:	4d 39 d9             	cmp    %r11,%r9
    4ba3:	0f 87 97 fd ff ff    	ja     4940 <dispose_chunk+0x320>
    4ba9:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    4bb0:	e9 0d ff ff ff       	jmpq   4ac2 <dispose_chunk+0x4a2>
    4bb5:	0f 1f 00             	nopl   (%rax)
    4bb8:	41 b8 fe ff ff ff    	mov    $0xfffffffe,%r8d
    4bbe:	41 d3 c0             	rol    %cl,%r8d
    4bc1:	44 21 07             	and    %r8d,(%rdi)
    4bc4:	e9 db fa ff ff       	jmpq   46a4 <dispose_chunk+0x84>
    4bc9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4bd0:	48 8b 48 28          	mov    0x28(%rax),%rcx
    4bd4:	4c 8d 50 28          	lea    0x28(%rax),%r10
    4bd8:	48 85 c9             	test   %rcx,%rcx
    4bdb:	0f 84 f9 00 00 00    	je     4cda <dispose_chunk+0x6ba>
    4be1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4be8:	49 89 c8             	mov    %rcx,%r8
    4beb:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    4bef:	4c 89 d3             	mov    %r10,%rbx
    4bf2:	4d 8d 50 28          	lea    0x28(%r8),%r10
    4bf6:	48 85 c9             	test   %rcx,%rcx
    4bf9:	75 ed                	jne    4be8 <dispose_chunk+0x5c8>
    4bfb:	49 8b 48 20          	mov    0x20(%r8),%rcx
    4bff:	4d 8d 50 20          	lea    0x20(%r8),%r10
    4c03:	48 85 c9             	test   %rcx,%rcx
    4c06:	75 e0                	jne    4be8 <dispose_chunk+0x5c8>
    4c08:	49 39 d9             	cmp    %rbx,%r9
    4c0b:	0f 87 2f fd ff ff    	ja     4940 <dispose_chunk+0x320>
    4c11:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    4c18:	e9 bd fd ff ff       	jmpq   49da <dispose_chunk+0x3ba>
    4c1d:	0f 1f 00             	nopl   (%rax)
    4c20:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    4c25:	d3 c0                	rol    %cl,%eax
    4c27:	21 07                	and    %eax,(%rdi)
    4c29:	e9 51 fb ff ff       	jmpq   477f <dispose_chunk+0x15f>
    4c2e:	66 90                	xchg   %ax,%ax
    4c30:	4d 85 c0             	test   %r8,%r8
    4c33:	4d 89 82 58 02 00 00 	mov    %r8,0x258(%r10)
    4c3a:	0f 85 c3 fe ff ff    	jne    4b03 <dispose_chunk+0x4e3>
    4c40:	41 b8 fe ff ff ff    	mov    $0xfffffffe,%r8d
    4c46:	41 d3 c0             	rol    %cl,%r8d
    4c49:	44 21 47 04          	and    %r8d,0x4(%rdi)
    4c4d:	e9 52 fa ff ff       	jmpq   46a4 <dispose_chunk+0x84>
    4c52:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4c58:	4d 85 c0             	test   %r8,%r8
    4c5b:	4d 89 82 58 02 00 00 	mov    %r8,0x258(%r10)
    4c62:	0f 85 b3 fd ff ff    	jne    4a1b <dispose_chunk+0x3fb>
    4c68:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    4c6d:	d3 c0                	rol    %cl,%eax
    4c6f:	21 47 04             	and    %eax,0x4(%rdi)
    4c72:	e9 08 fb ff ff       	jmpq   477f <dispose_chunk+0x15f>
    4c77:	4c 89 43 20          	mov    %r8,0x20(%rbx)
    4c7b:	e9 7a fe ff ff       	jmpq   4afa <dispose_chunk+0x4da>
    4c80:	4d 39 d1             	cmp    %r10,%r9
    4c83:	0f 87 b7 fc ff ff    	ja     4940 <dispose_chunk+0x320>
    4c89:	49 39 72 18          	cmp    %rsi,0x18(%r10)
    4c8d:	0f 84 f1 f9 ff ff    	je     4684 <dispose_chunk+0x64>
    4c93:	e9 a8 fc ff ff       	jmpq   4940 <dispose_chunk+0x320>
    4c98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4c9f:	00 
    4ca0:	4c 89 45 20          	mov    %r8,0x20(%rbp)
    4ca4:	e9 69 fd ff ff       	jmpq   4a12 <dispose_chunk+0x3f2>
    4ca9:	4d 39 d1             	cmp    %r10,%r9
    4cac:	0f 87 8e fc ff ff    	ja     4940 <dispose_chunk+0x320>
    4cb2:	49 39 42 18          	cmp    %rax,0x18(%r10)
    4cb6:	0f 84 a9 fa ff ff    	je     4765 <dispose_chunk+0x145>
    4cbc:	e9 7f fc ff ff       	jmpq   4940 <dispose_chunk+0x320>
    4cc1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4cc8:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    4ccc:	48 85 c9             	test   %rcx,%rcx
    4ccf:	74 33                	je     4d04 <dispose_chunk+0x6e4>
    4cd1:	4c 8d 56 20          	lea    0x20(%rsi),%r10
    4cd5:	e9 a6 fe ff ff       	jmpq   4b80 <dispose_chunk+0x560>
    4cda:	48 8b 48 20          	mov    0x20(%rax),%rcx
    4cde:	48 85 c9             	test   %rcx,%rcx
    4ce1:	74 55                	je     4d38 <dispose_chunk+0x718>
    4ce3:	4c 8d 50 20          	lea    0x20(%rax),%r10
    4ce7:	e9 fc fe ff ff       	jmpq   4be8 <dispose_chunk+0x5c8>
    4cec:	4d 39 c1             	cmp    %r8,%r9
    4cef:	0f 87 4b fc ff ff    	ja     4940 <dispose_chunk+0x320>
    4cf5:	49 39 70 10          	cmp    %rsi,0x10(%r8)
    4cf9:	0f 84 97 f9 ff ff    	je     4696 <dispose_chunk+0x76>
    4cff:	e9 3c fc ff ff       	jmpq   4940 <dispose_chunk+0x320>
    4d04:	48 85 db             	test   %rbx,%rbx
    4d07:	0f 84 97 f9 ff ff    	je     46a4 <dispose_chunk+0x84>
    4d0d:	45 8b 40 38          	mov    0x38(%r8),%r8d
    4d11:	4e 8d 14 c7          	lea    (%rdi,%r8,8),%r10
    4d15:	4c 89 c1             	mov    %r8,%rcx
    4d18:	45 31 c0             	xor    %r8d,%r8d
    4d1b:	49 39 b2 58 02 00 00 	cmp    %rsi,0x258(%r10)
    4d22:	0f 85 bb fd ff ff    	jne    4ae3 <dispose_chunk+0x4c3>
    4d28:	49 c7 82 58 02 00 00 	movq   $0x0,0x258(%r10)
    4d2f:	00 00 00 00 
    4d33:	e9 08 ff ff ff       	jmpq   4c40 <dispose_chunk+0x620>
    4d38:	48 85 ed             	test   %rbp,%rbp
    4d3b:	0f 84 3e fa ff ff    	je     477f <dispose_chunk+0x15f>
    4d41:	44 8b 40 38          	mov    0x38(%rax),%r8d
    4d45:	4e 8d 14 c7          	lea    (%rdi,%r8,8),%r10
    4d49:	4c 89 c1             	mov    %r8,%rcx
    4d4c:	45 31 c0             	xor    %r8d,%r8d
    4d4f:	49 39 82 58 02 00 00 	cmp    %rax,0x258(%r10)
    4d56:	0f 85 9f fc ff ff    	jne    49fb <dispose_chunk+0x3db>
    4d5c:	49 c7 82 58 02 00 00 	movq   $0x0,0x258(%r10)
    4d63:	00 00 00 00 
    4d67:	e9 fc fe ff ff       	jmpq   4c68 <dispose_chunk+0x648>
    4d6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004d70 <dlmalloc>:
    4d70:	41 57                	push   %r15
    4d72:	41 56                	push   %r14
    4d74:	41 55                	push   %r13
    4d76:	41 54                	push   %r12
    4d78:	49 89 fc             	mov    %rdi,%r12
    4d7b:	55                   	push   %rbp
    4d7c:	53                   	push   %rbx
    4d7d:	48 83 ec 18          	sub    $0x18,%rsp
    4d81:	48 83 3d 57 87 00 00 	cmpq   $0x0,0x8757(%rip)        # d4e0 <mparams>
    4d88:	00 
    4d89:	0f 84 41 02 00 00    	je     4fd0 <dlmalloc+0x260>
    4d8f:	f6 05 fa 86 00 00 02 	testb  $0x2,0x86fa(%rip)        # d490 <_gm_+0x370>
    4d96:	0f 85 fc 01 00 00    	jne    4f98 <dlmalloc+0x228>
    4d9c:	49 81 fc e0 00 00 00 	cmp    $0xe0,%r12
    4da3:	0f 87 f7 00 00 00    	ja     4ea0 <dlmalloc+0x130>
    4da9:	49 83 fc 0e          	cmp    $0xe,%r12
    4dad:	0f 87 cd 01 00 00    	ja     4f80 <dlmalloc+0x210>
    4db3:	b9 04 00 00 00       	mov    $0x4,%ecx
    4db8:	bd 20 00 00 00       	mov    $0x20,%ebp
    4dbd:	8b 15 5d 83 00 00    	mov    0x835d(%rip),%edx        # d120 <_gm_>
    4dc3:	4c 8d 2d 56 83 00 00 	lea    0x8356(%rip),%r13        # d120 <_gm_>
    4dca:	89 d0                	mov    %edx,%eax
    4dcc:	d3 e8                	shr    %cl,%eax
    4dce:	a8 03                	test   $0x3,%al
    4dd0:	0f 84 0a 02 00 00    	je     4fe0 <dlmalloc+0x270>
    4dd6:	f7 d0                	not    %eax
    4dd8:	83 e0 01             	and    $0x1,%eax
    4ddb:	01 c1                	add    %eax,%ecx
    4ddd:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    4de0:	49 8d 74 c5 48       	lea    0x48(%r13,%rax,8),%rsi
    4de5:	48 8b 5e 10          	mov    0x10(%rsi),%rbx
    4de9:	48 8b 43 10          	mov    0x10(%rbx),%rax
    4ded:	48 39 c6             	cmp    %rax,%rsi
    4df0:	0f 84 8a 06 00 00    	je     5480 <dlmalloc+0x710>
    4df6:	48 39 05 3b 83 00 00 	cmp    %rax,0x833b(%rip)        # d138 <_gm_+0x18>
    4dfd:	0f 87 ad 06 00 00    	ja     54b0 <dlmalloc+0x740>
    4e03:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    4e07:	0f 85 a3 06 00 00    	jne    54b0 <dlmalloc+0x740>
    4e0d:	48 89 70 18          	mov    %rsi,0x18(%rax)
    4e11:	48 89 46 10          	mov    %rax,0x10(%rsi)
    4e15:	c1 e1 03             	shl    $0x3,%ecx
    4e18:	4c 33 2d c1 86 00 00 	xor    0x86c1(%rip),%r13        # d4e0 <mparams>
    4e1f:	89 c8                	mov    %ecx,%eax
    4e21:	83 c8 03             	or     $0x3,%eax
    4e24:	48 89 43 08          	mov    %rax,0x8(%rbx)
    4e28:	48 8d 04 0b          	lea    (%rbx,%rcx,1),%rax
    4e2c:	48 83 c3 10          	add    $0x10,%rbx
    4e30:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    4e35:	48 85 db             	test   %rbx,%rbx
    4e38:	4c 89 28             	mov    %r13,(%rax)
    4e3b:	0f 84 37 01 00 00    	je     4f78 <dlmalloc+0x208>
    4e41:	e8 4a e1 ff ff       	callq  2f90 <get_heap_base>
    4e46:	48 39 d8             	cmp    %rbx,%rax
    4e49:	0f 87 61 06 00 00    	ja     54b0 <dlmalloc+0x740>
    4e4f:	48 89 d8             	mov    %rbx,%rax
    4e52:	48 f7 d0             	not    %rax
    4e55:	4c 39 e0             	cmp    %r12,%rax
    4e58:	0f 82 52 06 00 00    	jb     54b0 <dlmalloc+0x740>
    4e5e:	31 ff                	xor    %edi,%edi
    4e60:	49 01 dc             	add    %rbx,%r12
    4e63:	e8 08 2f 00 00       	callq  7d70 <sbrk>
    4e68:	4c 39 e0             	cmp    %r12,%rax
    4e6b:	0f 82 3f 06 00 00    	jb     54b0 <dlmalloc+0x740>
    4e71:	f6 05 18 86 00 00 02 	testb  $0x2,0x8618(%rip)        # d490 <_gm_+0x370>
    4e78:	74 0a                	je     4e84 <dlmalloc+0x114>
    4e7a:	c7 05 10 86 00 00 00 	movl   $0x0,0x8610(%rip)        # d494 <_gm_+0x374>
    4e81:	00 00 00 
    4e84:	48 83 c4 18          	add    $0x18,%rsp
    4e88:	48 89 d8             	mov    %rbx,%rax
    4e8b:	5b                   	pop    %rbx
    4e8c:	5d                   	pop    %rbp
    4e8d:	41 5c                	pop    %r12
    4e8f:	41 5d                	pop    %r13
    4e91:	41 5e                	pop    %r14
    4e93:	41 5f                	pop    %r15
    4e95:	c3                   	retq   
    4e96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    4e9d:	00 00 00 
    4ea0:	48 8b 35 81 82 00 00 	mov    0x8281(%rip),%rsi        # d128 <_gm_+0x8>
    4ea7:	49 81 fc 7f ff ff ff 	cmp    $0xffffffffffffff7f,%r12
    4eae:	4c 8d 2d 6b 82 00 00 	lea    0x826b(%rip),%r13        # d120 <_gm_>
    4eb5:	48 89 f7             	mov    %rsi,%rdi
    4eb8:	76 46                	jbe    4f00 <dlmalloc+0x190>
    4eba:	48 83 fe ff          	cmp    $0xffffffffffffffff,%rsi
    4ebe:	48 8b 05 1b 86 00 00 	mov    0x861b(%rip),%rax        # d4e0 <mparams>
    4ec5:	0f 85 35 02 00 00    	jne    5100 <dlmalloc+0x390>
    4ecb:	48 8b 1d 6e 82 00 00 	mov    0x826e(%rip),%rbx        # d140 <_gm_+0x20>
    4ed2:	48 8d 14 33          	lea    (%rbx,%rsi,1),%rdx
    4ed6:	49 31 c5             	xor    %rax,%r13
    4ed9:	48 c7 05 44 82 00 00 	movq   $0x0,0x8244(%rip)        # d128 <_gm_+0x8>
    4ee0:	00 00 00 00 
    4ee4:	48 c7 05 51 82 00 00 	movq   $0x0,0x8251(%rip)        # d140 <_gm_+0x20>
    4eeb:	00 00 00 00 
    4eef:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    4ef3:	4c 89 2a             	mov    %r13,(%rdx)
    4ef6:	48 83 4a 08 01       	orq    $0x1,0x8(%rdx)
    4efb:	eb 6e                	jmp    4f6b <dlmalloc+0x1fb>
    4efd:	0f 1f 00             	nopl   (%rax)
    4f00:	44 8b 05 1d 82 00 00 	mov    0x821d(%rip),%r8d        # d124 <_gm_+0x4>
    4f07:	49 8d 6c 24 1f       	lea    0x1f(%r12),%rbp
    4f0c:	48 83 e5 f0          	and    $0xfffffffffffffff0,%rbp
    4f10:	45 85 c0             	test   %r8d,%r8d
    4f13:	0f 85 47 03 00 00    	jne    5260 <dlmalloc+0x4f0>
    4f19:	48 39 fd             	cmp    %rdi,%rbp
    4f1c:	0f 86 7e 01 00 00    	jbe    50a0 <dlmalloc+0x330>
    4f22:	48 8b 05 07 82 00 00 	mov    0x8207(%rip),%rax        # d130 <_gm_+0x10>
    4f29:	48 8b 15 b0 85 00 00 	mov    0x85b0(%rip),%rdx        # d4e0 <mparams>
    4f30:	48 39 e8             	cmp    %rbp,%rax
    4f33:	0f 86 6e 17 00 00    	jbe    66a7 <dlmalloc+0x1937>
    4f39:	48 8b 1d 08 82 00 00 	mov    0x8208(%rip),%rbx        # d148 <_gm_+0x28>
    4f40:	48 29 e8             	sub    %rbp,%rax
    4f43:	49 31 d5             	xor    %rdx,%r13
    4f46:	48 89 05 e3 81 00 00 	mov    %rax,0x81e3(%rip)        # d130 <_gm_+0x10>
    4f4d:	48 83 c8 01          	or     $0x1,%rax
    4f51:	48 8d 0c 2b          	lea    (%rbx,%rbp,1),%rcx
    4f55:	48 83 cd 03          	or     $0x3,%rbp
    4f59:	48 89 0d e8 81 00 00 	mov    %rcx,0x81e8(%rip)        # d148 <_gm_+0x28>
    4f60:	48 89 41 08          	mov    %rax,0x8(%rcx)
    4f64:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    4f68:	4c 89 29             	mov    %r13,(%rcx)
    4f6b:	48 83 c3 10          	add    $0x10,%rbx
    4f6f:	48 85 db             	test   %rbx,%rbx
    4f72:	0f 85 c9 fe ff ff    	jne    4e41 <dlmalloc+0xd1>
    4f78:	31 db                	xor    %ebx,%ebx
    4f7a:	e9 f2 fe ff ff       	jmpq   4e71 <dlmalloc+0x101>
    4f7f:	90                   	nop
    4f80:	49 8d 6c 24 1f       	lea    0x1f(%r12),%rbp
    4f85:	48 83 e5 f0          	and    $0xfffffffffffffff0,%rbp
    4f89:	48 89 e9             	mov    %rbp,%rcx
    4f8c:	48 c1 e9 03          	shr    $0x3,%rcx
    4f90:	e9 28 fe ff ff       	jmpq   4dbd <dlmalloc+0x4d>
    4f95:	0f 1f 00             	nopl   (%rax)
    4f98:	b8 01 00 00 00       	mov    $0x1,%eax
    4f9d:	87 05 f1 84 00 00    	xchg   %eax,0x84f1(%rip)        # d494 <_gm_+0x374>
    4fa3:	85 c0                	test   %eax,%eax
    4fa5:	0f 84 f1 fd ff ff    	je     4d9c <dlmalloc+0x2c>
    4fab:	ba 01 00 00 00       	mov    $0x1,%edx
    4fb0:	8b 05 de 84 00 00    	mov    0x84de(%rip),%eax        # d494 <_gm_+0x374>
    4fb6:	85 c0                	test   %eax,%eax
    4fb8:	75 f6                	jne    4fb0 <dlmalloc+0x240>
    4fba:	89 d0                	mov    %edx,%eax
    4fbc:	87 05 d2 84 00 00    	xchg   %eax,0x84d2(%rip)        # d494 <_gm_+0x374>
    4fc2:	85 c0                	test   %eax,%eax
    4fc4:	75 ea                	jne    4fb0 <dlmalloc+0x240>
    4fc6:	e9 d1 fd ff ff       	jmpq   4d9c <dlmalloc+0x2c>
    4fcb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    4fd0:	e8 5b f5 ff ff       	callq  4530 <init_mparams>
    4fd5:	e9 b5 fd ff ff       	jmpq   4d8f <dlmalloc+0x1f>
    4fda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4fe0:	48 8b 35 41 81 00 00 	mov    0x8141(%rip),%rsi        # d128 <_gm_+0x8>
    4fe7:	48 39 ee             	cmp    %rbp,%rsi
    4fea:	48 89 f7             	mov    %rsi,%rdi
    4fed:	0f 83 ad 00 00 00    	jae    50a0 <dlmalloc+0x330>
    4ff3:	85 c0                	test   %eax,%eax
    4ff5:	0f 84 ba 04 00 00    	je     54b5 <dlmalloc+0x745>
    4ffb:	bf 01 00 00 00       	mov    $0x1,%edi
    5000:	d3 e0                	shl    %cl,%eax
    5002:	41 89 f8             	mov    %edi,%r8d
    5005:	41 d3 e0             	shl    %cl,%r8d
    5008:	47 8d 0c 00          	lea    (%r8,%r8,1),%r9d
    500c:	45 89 c8             	mov    %r9d,%r8d
    500f:	41 f7 d8             	neg    %r8d
    5012:	45 09 c8             	or     %r9d,%r8d
    5015:	44 21 c0             	and    %r8d,%eax
    5018:	89 c1                	mov    %eax,%ecx
    501a:	f7 d9                	neg    %ecx
    501c:	21 c8                	and    %ecx,%eax
    501e:	31 c9                	xor    %ecx,%ecx
    5020:	f3 0f bc c8          	tzcnt  %eax,%ecx
    5024:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    5027:	4d 8d 44 c5 48       	lea    0x48(%r13,%rax,8),%r8
    502c:	49 8b 58 10          	mov    0x10(%r8),%rbx
    5030:	48 8b 43 10          	mov    0x10(%rbx),%rax
    5034:	49 39 c0             	cmp    %rax,%r8
    5037:	0f 84 74 06 00 00    	je     56b1 <dlmalloc+0x941>
    503d:	48 39 05 f4 80 00 00 	cmp    %rax,0x80f4(%rip)        # d138 <_gm_+0x18>
    5044:	0f 87 66 04 00 00    	ja     54b0 <dlmalloc+0x740>
    504a:	48 39 58 18          	cmp    %rbx,0x18(%rax)
    504e:	0f 85 5c 04 00 00    	jne    54b0 <dlmalloc+0x740>
    5054:	4c 89 40 18          	mov    %r8,0x18(%rax)
    5058:	49 89 40 10          	mov    %rax,0x10(%r8)
    505c:	8d 04 cd 00 00 00 00 	lea    0x0(,%rcx,8),%eax
    5063:	48 8b 3d 76 84 00 00 	mov    0x8476(%rip),%rdi        # d4e0 <mparams>
    506a:	48 89 c2             	mov    %rax,%rdx
    506d:	48 89 c1             	mov    %rax,%rcx
    5070:	48 01 d8             	add    %rbx,%rax
    5073:	48 29 ea             	sub    %rbp,%rdx
    5076:	4c 31 ef             	xor    %r13,%rdi
    5079:	48 83 fa 1f          	cmp    $0x1f,%rdx
    507d:	0f 87 7b 0b 00 00    	ja     5bfe <dlmalloc+0xe8e>
    5083:	83 c9 03             	or     $0x3,%ecx
    5086:	89 ce                	mov    %ecx,%esi
    5088:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    508c:	48 89 38             	mov    %rdi,(%rax)
    508f:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    5094:	e9 d2 fe ff ff       	jmpq   4f6b <dlmalloc+0x1fb>
    5099:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    50a0:	48 8b 05 39 84 00 00 	mov    0x8439(%rip),%rax        # d4e0 <mparams>
    50a7:	48 89 f9             	mov    %rdi,%rcx
    50aa:	48 8b 1d 8f 80 00 00 	mov    0x808f(%rip),%rbx        # d140 <_gm_+0x20>
    50b1:	48 29 e9             	sub    %rbp,%rcx
    50b4:	4c 89 ee             	mov    %r13,%rsi
    50b7:	48 31 c6             	xor    %rax,%rsi
    50ba:	48 83 f9 1f          	cmp    $0x1f,%rcx
    50be:	48 8d 14 3b          	lea    (%rbx,%rdi,1),%rdx
    50c2:	0f 86 d3 15 00 00    	jbe    669b <dlmalloc+0x192b>
    50c8:	48 8d 04 2b          	lea    (%rbx,%rbp,1),%rax
    50cc:	48 89 cf             	mov    %rcx,%rdi
    50cf:	48 83 cd 03          	or     $0x3,%rbp
    50d3:	48 83 cf 01          	or     $0x1,%rdi
    50d7:	48 89 0d 4a 80 00 00 	mov    %rcx,0x804a(%rip)        # d128 <_gm_+0x8>
    50de:	48 89 05 5b 80 00 00 	mov    %rax,0x805b(%rip)        # d140 <_gm_+0x20>
    50e5:	48 89 78 08          	mov    %rdi,0x8(%rax)
    50e9:	48 89 0a             	mov    %rcx,(%rdx)
    50ec:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    50f0:	48 89 30             	mov    %rsi,(%rax)
    50f3:	e9 73 fe ff ff       	jmpq   4f6b <dlmalloc+0x1fb>
    50f8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    50ff:	00 
    5100:	48 85 c0             	test   %rax,%rax
    5103:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
    510a:	0f 85 68 fe ff ff    	jne    4f78 <dlmalloc+0x208>
    5110:	e8 1b f4 ff ff       	callq  4530 <init_mparams>
    5115:	48 8b 05 d4 83 00 00 	mov    0x83d4(%rip),%rax        # d4f0 <mparams+0x10>
    511c:	48 8d 4c 05 5f       	lea    0x5f(%rbp,%rax,1),%rcx
    5121:	48 f7 d8             	neg    %rax
    5124:	48 21 c1             	and    %rax,%rcx
    5127:	48 39 e9             	cmp    %rbp,%rcx
    512a:	0f 86 48 fe ff ff    	jbe    4f78 <dlmalloc+0x208>
    5130:	48 8b 05 51 83 00 00 	mov    0x8351(%rip),%rax        # d488 <_gm_+0x368>
    5137:	48 85 c0             	test   %rax,%rax
    513a:	74 1d                	je     5159 <dlmalloc+0x3e9>
    513c:	48 8b 35 35 83 00 00 	mov    0x8335(%rip),%rsi        # d478 <_gm_+0x358>
    5143:	48 8d 14 31          	lea    (%rcx,%rsi,1),%rdx
    5147:	48 39 d0             	cmp    %rdx,%rax
    514a:	0f 82 28 fe ff ff    	jb     4f78 <dlmalloc+0x208>
    5150:	48 39 d6             	cmp    %rdx,%rsi
    5153:	0f 83 1f fe ff ff    	jae    4f78 <dlmalloc+0x208>
    5159:	f6 05 30 83 00 00 04 	testb  $0x4,0x8330(%rip)        # d490 <_gm_+0x370>
    5160:	0f 85 cc 00 00 00    	jne    5232 <dlmalloc+0x4c2>
    5166:	48 8b 15 db 7f 00 00 	mov    0x7fdb(%rip),%rdx        # d148 <_gm_+0x28>
    516d:	48 85 d2             	test   %rdx,%rdx
    5170:	74 2c                	je     519e <dlmalloc+0x42e>
    5172:	4c 8d 35 1f 83 00 00 	lea    0x831f(%rip),%r14        # d498 <_gm_+0x378>
    5179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5180:	49 8b 06             	mov    (%r14),%rax
    5183:	48 39 c2             	cmp    %rax,%rdx
    5186:	72 0d                	jb     5195 <dlmalloc+0x425>
    5188:	49 03 46 08          	add    0x8(%r14),%rax
    518c:	48 39 c2             	cmp    %rax,%rdx
    518f:	0f 82 ff 0d 00 00    	jb     5f94 <dlmalloc+0x1224>
    5195:	4d 8b 76 10          	mov    0x10(%r14),%r14
    5199:	4d 85 f6             	test   %r14,%r14
    519c:	75 e2                	jne    5180 <dlmalloc+0x410>
    519e:	b8 01 00 00 00       	mov    $0x1,%eax
    51a3:	87 05 67 83 00 00    	xchg   %eax,0x8367(%rip)        # d510 <malloc_global_mutex>
    51a9:	85 c0                	test   %eax,%eax
    51ab:	0f 85 7d 09 00 00    	jne    5b2e <dlmalloc+0xdbe>
    51b1:	31 ff                	xor    %edi,%edi
    51b3:	48 89 0c 24          	mov    %rcx,(%rsp)
    51b7:	e8 b4 2b 00 00       	callq  7d70 <sbrk>
    51bc:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    51c0:	49 89 c6             	mov    %rax,%r14
    51c3:	48 8b 0c 24          	mov    (%rsp),%rcx
    51c7:	74 5f                	je     5228 <dlmalloc+0x4b8>
    51c9:	48 8b 15 18 83 00 00 	mov    0x8318(%rip),%rdx        # d4e8 <mparams+0x8>
    51d0:	49 89 cf             	mov    %rcx,%r15
    51d3:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
    51d7:	49 85 c6             	test   %rax,%r14
    51da:	74 0f                	je     51eb <dlmalloc+0x47b>
    51dc:	4c 01 f0             	add    %r14,%rax
    51df:	48 f7 da             	neg    %rdx
    51e2:	4d 29 f7             	sub    %r14,%r15
    51e5:	48 21 d0             	and    %rdx,%rax
    51e8:	49 01 c7             	add    %rax,%r15
    51eb:	4c 39 fd             	cmp    %r15,%rbp
    51ee:	73 38                	jae    5228 <dlmalloc+0x4b8>
    51f0:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    51f7:	ff ff 7f 
    51fa:	49 39 c7             	cmp    %rax,%r15
    51fd:	77 29                	ja     5228 <dlmalloc+0x4b8>
    51ff:	48 8b 35 82 82 00 00 	mov    0x8282(%rip),%rsi        # d488 <_gm_+0x368>
    5206:	48 85 f6             	test   %rsi,%rsi
    5209:	0f 84 b9 13 00 00    	je     65c8 <dlmalloc+0x1858>
    520f:	48 8b 15 62 82 00 00 	mov    0x8262(%rip),%rdx        # d478 <_gm_+0x358>
    5216:	49 8d 04 17          	lea    (%r15,%rdx,1),%rax
    521a:	48 39 c6             	cmp    %rax,%rsi
    521d:	72 09                	jb     5228 <dlmalloc+0x4b8>
    521f:	48 39 c2             	cmp    %rax,%rdx
    5222:	0f 82 a0 13 00 00    	jb     65c8 <dlmalloc+0x1858>
    5228:	c7 05 de 82 00 00 00 	movl   $0x0,0x82de(%rip)        # d510 <malloc_global_mutex>
    522f:	00 00 00 
    5232:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    5239:	ff ff 7f 
    523c:	48 39 c1             	cmp    %rax,%rcx
    523f:	0f 86 7d 04 00 00    	jbe    56c2 <dlmalloc+0x952>
    5245:	e8 f6 2e 00 00       	callq  8140 <__errno_location>
    524a:	31 db                	xor    %ebx,%ebx
    524c:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    5252:	e9 1a fc ff ff       	jmpq   4e71 <dlmalloc+0x101>
    5257:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    525e:	00 00 
    5260:	48 89 e8             	mov    %rbp,%rax
    5263:	49 89 e9             	mov    %rbp,%r9
    5266:	48 c1 e8 08          	shr    $0x8,%rax
    526a:	49 f7 d9             	neg    %r9
    526d:	85 c0                	test   %eax,%eax
    526f:	0f 85 13 04 00 00    	jne    5688 <dlmalloc+0x918>
    5275:	48 8b 05 fc 80 00 00 	mov    0x80fc(%rip),%rax        # d378 <_gm_+0x258>
    527c:	45 31 d2             	xor    %r10d,%r10d
    527f:	b9 39 00 00 00       	mov    $0x39,%ecx
    5284:	48 85 c0             	test   %rax,%rax
    5287:	0f 84 ee 0c 00 00    	je     5f7b <dlmalloc+0x120b>
    528d:	48 89 eb             	mov    %rbp,%rbx
    5290:	48 d3 e3             	shl    %cl,%rbx
    5293:	48 89 d9             	mov    %rbx,%rcx
    5296:	45 31 db             	xor    %r11d,%r11d
    5299:	31 db                	xor    %ebx,%ebx
    529b:	eb 06                	jmp    52a3 <dlmalloc+0x533>
    529d:	0f 1f 00             	nopl   (%rax)
    52a0:	48 01 c9             	add    %rcx,%rcx
    52a3:	48 8b 50 08          	mov    0x8(%rax),%rdx
    52a7:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    52ab:	48 29 ea             	sub    %rbp,%rdx
    52ae:	4c 39 ca             	cmp    %r9,%rdx
    52b1:	73 0f                	jae    52c2 <dlmalloc+0x552>
    52b3:	48 85 d2             	test   %rdx,%rdx
    52b6:	0f 84 fe 0a 00 00    	je     5dba <dlmalloc+0x104a>
    52bc:	49 89 d1             	mov    %rdx,%r9
    52bf:	48 89 c3             	mov    %rax,%rbx
    52c2:	4c 8b 70 28          	mov    0x28(%rax),%r14
    52c6:	48 89 ca             	mov    %rcx,%rdx
    52c9:	48 c1 ea 3f          	shr    $0x3f,%rdx
    52cd:	48 83 c2 04          	add    $0x4,%rdx
    52d1:	4d 85 f6             	test   %r14,%r14
    52d4:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
    52d8:	74 07                	je     52e1 <dlmalloc+0x571>
    52da:	49 39 c6             	cmp    %rax,%r14
    52dd:	4d 0f 45 de          	cmovne %r14,%r11
    52e1:	48 85 c0             	test   %rax,%rax
    52e4:	75 ba                	jne    52a0 <dlmalloc+0x530>
    52e6:	4d 85 db             	test   %r11,%r11
    52e9:	0f 85 5a 0a 00 00    	jne    5d49 <dlmalloc+0xfd9>
    52ef:	48 85 db             	test   %rbx,%rbx
    52f2:	0f 85 51 0a 00 00    	jne    5d49 <dlmalloc+0xfd9>
    52f8:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    52fd:	44 89 d1             	mov    %r10d,%ecx
    5300:	4c 89 ca             	mov    %r9,%rdx
    5303:	d3 e0                	shl    %cl,%eax
    5305:	44 21 c0             	and    %r8d,%eax
    5308:	0f 84 0b fc ff ff    	je     4f19 <dlmalloc+0x1a9>
    530e:	89 c1                	mov    %eax,%ecx
    5310:	31 db                	xor    %ebx,%ebx
    5312:	f7 d9                	neg    %ecx
    5314:	21 c8                	and    %ecx,%eax
    5316:	f3 0f bc c0          	tzcnt  %eax,%eax
    531a:	89 c0                	mov    %eax,%eax
    531c:	49 8b 84 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rax
    5323:	00 
    5324:	48 85 c0             	test   %rax,%rax
    5327:	75 0a                	jne    5333 <dlmalloc+0x5c3>
    5329:	e9 eb fb ff ff       	jmpq   4f19 <dlmalloc+0x1a9>
    532e:	66 90                	xchg   %ax,%ax
    5330:	48 89 c8             	mov    %rcx,%rax
    5333:	48 8b 48 08          	mov    0x8(%rax),%rcx
    5337:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    533b:	48 29 e9             	sub    %rbp,%rcx
    533e:	48 39 d1             	cmp    %rdx,%rcx
    5341:	73 06                	jae    5349 <dlmalloc+0x5d9>
    5343:	48 89 ca             	mov    %rcx,%rdx
    5346:	48 89 c3             	mov    %rax,%rbx
    5349:	48 8b 48 20          	mov    0x20(%rax),%rcx
    534d:	48 85 c9             	test   %rcx,%rcx
    5350:	75 de                	jne    5330 <dlmalloc+0x5c0>
    5352:	48 8b 48 28          	mov    0x28(%rax),%rcx
    5356:	48 85 c9             	test   %rcx,%rcx
    5359:	75 d5                	jne    5330 <dlmalloc+0x5c0>
    535b:	48 85 db             	test   %rbx,%rbx
    535e:	0f 84 b5 fb ff ff    	je     4f19 <dlmalloc+0x1a9>
    5364:	48 89 f0             	mov    %rsi,%rax
    5367:	48 29 e8             	sub    %rbp,%rax
    536a:	48 39 d0             	cmp    %rdx,%rax
    536d:	0f 86 a6 fb ff ff    	jbe    4f19 <dlmalloc+0x1a9>
    5373:	4c 8b 1d be 7d 00 00 	mov    0x7dbe(%rip),%r11        # d138 <_gm_+0x18>
    537a:	49 39 db             	cmp    %rbx,%r11
    537d:	0f 87 2d 01 00 00    	ja     54b0 <dlmalloc+0x740>
    5383:	4c 8d 14 2b          	lea    (%rbx,%rbp,1),%r10
    5387:	49 39 da             	cmp    %rbx,%r10
    538a:	0f 86 20 01 00 00    	jbe    54b0 <dlmalloc+0x740>
    5390:	48 8b 43 18          	mov    0x18(%rbx),%rax
    5394:	4c 8b 73 30          	mov    0x30(%rbx),%r14
    5398:	48 39 d8             	cmp    %rbx,%rax
    539b:	0f 84 8c 0a 00 00    	je     5e2d <dlmalloc+0x10bd>
    53a1:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    53a5:	49 39 cb             	cmp    %rcx,%r11
    53a8:	0f 87 02 01 00 00    	ja     54b0 <dlmalloc+0x740>
    53ae:	48 39 59 18          	cmp    %rbx,0x18(%rcx)
    53b2:	0f 85 f8 00 00 00    	jne    54b0 <dlmalloc+0x740>
    53b8:	48 39 58 10          	cmp    %rbx,0x10(%rax)
    53bc:	0f 85 ee 00 00 00    	jne    54b0 <dlmalloc+0x740>
    53c2:	48 89 41 18          	mov    %rax,0x18(%rcx)
    53c6:	48 89 48 10          	mov    %rcx,0x10(%rax)
    53ca:	4d 85 f6             	test   %r14,%r14
    53cd:	74 6e                	je     543d <dlmalloc+0x6cd>
    53cf:	8b 7b 38             	mov    0x38(%rbx),%edi
    53d2:	48 89 f9             	mov    %rdi,%rcx
    53d5:	48 83 c7 4a          	add    $0x4a,%rdi
    53d9:	49 39 5c fd 08       	cmp    %rbx,0x8(%r13,%rdi,8)
    53de:	0f 84 c8 0b 00 00    	je     5fac <dlmalloc+0x123c>
    53e4:	4d 39 f3             	cmp    %r14,%r11
    53e7:	0f 87 c3 00 00 00    	ja     54b0 <dlmalloc+0x740>
    53ed:	49 39 5e 20          	cmp    %rbx,0x20(%r14)
    53f1:	0f 84 dd 0c 00 00    	je     60d4 <dlmalloc+0x1364>
    53f7:	49 89 46 28          	mov    %rax,0x28(%r14)
    53fb:	48 85 c0             	test   %rax,%rax
    53fe:	74 3d                	je     543d <dlmalloc+0x6cd>
    5400:	49 39 c3             	cmp    %rax,%r11
    5403:	0f 87 a7 00 00 00    	ja     54b0 <dlmalloc+0x740>
    5409:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
    540d:	4c 89 70 30          	mov    %r14,0x30(%rax)
    5411:	48 85 c9             	test   %rcx,%rcx
    5414:	74 11                	je     5427 <dlmalloc+0x6b7>
    5416:	49 39 cb             	cmp    %rcx,%r11
    5419:	0f 87 91 00 00 00    	ja     54b0 <dlmalloc+0x740>
    541f:	48 89 48 20          	mov    %rcx,0x20(%rax)
    5423:	48 89 41 30          	mov    %rax,0x30(%rcx)
    5427:	48 8b 4b 28          	mov    0x28(%rbx),%rcx
    542b:	48 85 c9             	test   %rcx,%rcx
    542e:	74 0d                	je     543d <dlmalloc+0x6cd>
    5430:	49 39 cb             	cmp    %rcx,%r11
    5433:	77 7b                	ja     54b0 <dlmalloc+0x740>
    5435:	48 89 48 28          	mov    %rcx,0x28(%rax)
    5439:	48 89 41 30          	mov    %rax,0x30(%rcx)
    543d:	48 8b 0d 9c 80 00 00 	mov    0x809c(%rip),%rcx        # d4e0 <mparams>
    5444:	4c 31 e9             	xor    %r13,%rcx
    5447:	48 83 fa 1f          	cmp    $0x1f,%rdx
    544b:	0f 87 71 09 00 00    	ja     5dc2 <dlmalloc+0x1052>
    5451:	48 8d 44 15 00       	lea    0x0(%rbp,%rdx,1),%rax
    5456:	48 89 c2             	mov    %rax,%rdx
    5459:	48 01 d8             	add    %rbx,%rax
    545c:	48 83 ca 03          	or     $0x3,%rdx
    5460:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    5464:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    5469:	48 89 08             	mov    %rcx,(%rax)
    546c:	48 83 c3 10          	add    $0x10,%rbx
    5470:	48 89 f7             	mov    %rsi,%rdi
    5473:	0f 85 c8 f9 ff ff    	jne    4e41 <dlmalloc+0xd1>
    5479:	e9 9b fa ff ff       	jmpq   4f19 <dlmalloc+0x1a9>
    547e:	66 90                	xchg   %ax,%ax
    5480:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    5485:	d3 c0                	rol    %cl,%eax
    5487:	21 c2                	and    %eax,%edx
    5489:	89 15 91 7c 00 00    	mov    %edx,0x7c91(%rip)        # d120 <_gm_>
    548f:	e9 81 f9 ff ff       	jmpq   4e15 <dlmalloc+0xa5>
    5494:	4c 3b 0d 9d 7c 00 00 	cmp    0x7c9d(%rip),%r9        # d138 <_gm_+0x18>
    549b:	72 13                	jb     54b0 <dlmalloc+0x740>
    549d:	49 39 51 18          	cmp    %rdx,0x18(%r9)
    54a1:	0f 84 87 0f 00 00    	je     642e <dlmalloc+0x16be>
    54a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    54ae:	00 00 
    54b0:	e8 1b 3a 00 00       	callq  8ed0 <abort>
    54b5:	44 8b 05 68 7c 00 00 	mov    0x7c68(%rip),%r8d        # d124 <_gm_+0x4>
    54bc:	45 85 c0             	test   %r8d,%r8d
    54bf:	0f 84 5d fa ff ff    	je     4f22 <dlmalloc+0x1b2>
    54c5:	44 89 c0             	mov    %r8d,%eax
    54c8:	f7 d8                	neg    %eax
    54ca:	44 21 c0             	and    %r8d,%eax
    54cd:	f3 0f bc c0          	tzcnt  %eax,%eax
    54d1:	89 c0                	mov    %eax,%eax
    54d3:	49 8b 84 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rax
    54da:	00 
    54db:	48 8b 78 08          	mov    0x8(%rax),%rdi
    54df:	48 89 c3             	mov    %rax,%rbx
    54e2:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
    54e6:	48 29 ef             	sub    %rbp,%rdi
    54e9:	eb 1e                	jmp    5509 <dlmalloc+0x799>
    54eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    54f0:	48 8b 41 08          	mov    0x8(%rcx),%rax
    54f4:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    54f8:	48 29 e8             	sub    %rbp,%rax
    54fb:	48 39 f8             	cmp    %rdi,%rax
    54fe:	73 06                	jae    5506 <dlmalloc+0x796>
    5500:	48 89 c7             	mov    %rax,%rdi
    5503:	48 89 cb             	mov    %rcx,%rbx
    5506:	48 89 c8             	mov    %rcx,%rax
    5509:	48 8b 48 20          	mov    0x20(%rax),%rcx
    550d:	48 85 c9             	test   %rcx,%rcx
    5510:	75 de                	jne    54f0 <dlmalloc+0x780>
    5512:	48 8b 48 28          	mov    0x28(%rax),%rcx
    5516:	48 85 c9             	test   %rcx,%rcx
    5519:	75 d5                	jne    54f0 <dlmalloc+0x780>
    551b:	4c 8b 35 16 7c 00 00 	mov    0x7c16(%rip),%r14        # d138 <_gm_+0x18>
    5522:	49 39 de             	cmp    %rbx,%r14
    5525:	77 89                	ja     54b0 <dlmalloc+0x740>
    5527:	4c 8d 1c 2b          	lea    (%rbx,%rbp,1),%r11
    552b:	49 39 db             	cmp    %rbx,%r11
    552e:	76 80                	jbe    54b0 <dlmalloc+0x740>
    5530:	48 8b 43 18          	mov    0x18(%rbx),%rax
    5534:	4c 8b 7b 30          	mov    0x30(%rbx),%r15
    5538:	48 39 d8             	cmp    %rbx,%rax
    553b:	0f 84 81 0c 00 00    	je     61c2 <dlmalloc+0x1452>
    5541:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    5545:	49 39 ce             	cmp    %rcx,%r14
    5548:	0f 87 62 ff ff ff    	ja     54b0 <dlmalloc+0x740>
    554e:	48 39 59 18          	cmp    %rbx,0x18(%rcx)
    5552:	0f 85 58 ff ff ff    	jne    54b0 <dlmalloc+0x740>
    5558:	48 39 58 10          	cmp    %rbx,0x10(%rax)
    555c:	0f 85 4e ff ff ff    	jne    54b0 <dlmalloc+0x740>
    5562:	48 89 41 18          	mov    %rax,0x18(%rcx)
    5566:	48 89 48 10          	mov    %rcx,0x10(%rax)
    556a:	4d 85 ff             	test   %r15,%r15
    556d:	74 73                	je     55e2 <dlmalloc+0x872>
    556f:	44 8b 4b 38          	mov    0x38(%rbx),%r9d
    5573:	4c 89 c9             	mov    %r9,%rcx
    5576:	49 83 c1 4a          	add    $0x4a,%r9
    557a:	4b 39 5c cd 08       	cmp    %rbx,0x8(%r13,%r9,8)
    557f:	0f 84 f5 0d 00 00    	je     637a <dlmalloc+0x160a>
    5585:	4d 39 fe             	cmp    %r15,%r14
    5588:	0f 87 22 ff ff ff    	ja     54b0 <dlmalloc+0x740>
    558e:	49 39 5f 20          	cmp    %rbx,0x20(%r15)
    5592:	0f 84 bf 0e 00 00    	je     6457 <dlmalloc+0x16e7>
    5598:	49 89 47 28          	mov    %rax,0x28(%r15)
    559c:	48 85 c0             	test   %rax,%rax
    559f:	74 41                	je     55e2 <dlmalloc+0x872>
    55a1:	49 39 c6             	cmp    %rax,%r14
    55a4:	0f 87 06 ff ff ff    	ja     54b0 <dlmalloc+0x740>
    55aa:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
    55ae:	4c 89 78 30          	mov    %r15,0x30(%rax)
    55b2:	48 85 c9             	test   %rcx,%rcx
    55b5:	74 11                	je     55c8 <dlmalloc+0x858>
    55b7:	49 39 ce             	cmp    %rcx,%r14
    55ba:	0f 87 f0 fe ff ff    	ja     54b0 <dlmalloc+0x740>
    55c0:	48 89 48 20          	mov    %rcx,0x20(%rax)
    55c4:	48 89 41 30          	mov    %rax,0x30(%rcx)
    55c8:	48 8b 4b 28          	mov    0x28(%rbx),%rcx
    55cc:	48 85 c9             	test   %rcx,%rcx
    55cf:	74 11                	je     55e2 <dlmalloc+0x872>
    55d1:	49 39 ce             	cmp    %rcx,%r14
    55d4:	0f 87 d6 fe ff ff    	ja     54b0 <dlmalloc+0x740>
    55da:	48 89 48 28          	mov    %rcx,0x28(%rax)
    55de:	48 89 41 30          	mov    %rax,0x30(%rcx)
    55e2:	48 8b 0d f7 7e 00 00 	mov    0x7ef7(%rip),%rcx        # d4e0 <mparams>
    55e9:	4c 31 e9             	xor    %r13,%rcx
    55ec:	48 83 ff 1f          	cmp    $0x1f,%rdi
    55f0:	0f 86 ac 0b 00 00    	jbe    61a2 <dlmalloc+0x1432>
    55f6:	48 89 e8             	mov    %rbp,%rax
    55f9:	48 83 c8 03          	or     $0x3,%rax
    55fd:	48 89 43 08          	mov    %rax,0x8(%rbx)
    5601:	48 89 f8             	mov    %rdi,%rax
    5604:	49 89 0b             	mov    %rcx,(%r11)
    5607:	48 83 c8 01          	or     $0x1,%rax
    560b:	48 85 f6             	test   %rsi,%rsi
    560e:	49 89 43 08          	mov    %rax,0x8(%r11)
    5612:	49 89 3c 3b          	mov    %rdi,(%r11,%rdi,1)
    5616:	74 45                	je     565d <dlmalloc+0x8ed>
    5618:	48 c1 ee 03          	shr    $0x3,%rsi
    561c:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    5622:	48 8b 05 17 7b 00 00 	mov    0x7b17(%rip),%rax        # d140 <_gm_+0x20>
    5629:	48 89 f1             	mov    %rsi,%rcx
    562c:	44 8d 04 36          	lea    (%rsi,%rsi,1),%r8d
    5630:	41 d3 e1             	shl    %cl,%r9d
    5633:	44 85 ca             	test   %r9d,%edx
    5636:	4f 8d 44 c5 48       	lea    0x48(%r13,%r8,8),%r8
    563b:	0f 85 6f 0f 00 00    	jne    65b0 <dlmalloc+0x1840>
    5641:	44 09 ca             	or     %r9d,%edx
    5644:	89 15 d6 7a 00 00    	mov    %edx,0x7ad6(%rip)        # d120 <_gm_>
    564a:	4c 89 c2             	mov    %r8,%rdx
    564d:	49 89 40 10          	mov    %rax,0x10(%r8)
    5651:	48 89 42 18          	mov    %rax,0x18(%rdx)
    5655:	48 89 50 10          	mov    %rdx,0x10(%rax)
    5659:	4c 89 40 18          	mov    %r8,0x18(%rax)
    565d:	48 89 3d c4 7a 00 00 	mov    %rdi,0x7ac4(%rip)        # d128 <_gm_+0x8>
    5664:	4c 89 1d d5 7a 00 00 	mov    %r11,0x7ad5(%rip)        # d140 <_gm_+0x20>
    566b:	48 83 c3 10          	add    $0x10,%rbx
    566f:	0f 85 cc f7 ff ff    	jne    4e41 <dlmalloc+0xd1>
    5675:	48 8b 3d ac 7a 00 00 	mov    0x7aac(%rip),%rdi        # d128 <_gm_+0x8>
    567c:	e9 98 f8 ff ff       	jmpq   4f19 <dlmalloc+0x1a9>
    5681:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5688:	3d ff ff 00 00       	cmp    $0xffff,%eax
    568d:	0f 86 ca 06 00 00    	jbe    5d5d <dlmalloc+0xfed>
    5693:	48 8b 05 d6 7d 00 00 	mov    0x7dd6(%rip),%rax        # d470 <_gm_+0x350>
    569a:	48 89 e9             	mov    %rbp,%rcx
    569d:	41 ba 1f 00 00 00    	mov    $0x1f,%r10d
    56a3:	48 85 c0             	test   %rax,%rax
    56a6:	0f 85 ea fb ff ff    	jne    5296 <dlmalloc+0x526>
    56ac:	e9 68 f8 ff ff       	jmpq   4f19 <dlmalloc+0x1a9>
    56b1:	d3 e7                	shl    %cl,%edi
    56b3:	f7 d7                	not    %edi
    56b5:	21 fa                	and    %edi,%edx
    56b7:	89 15 63 7a 00 00    	mov    %edx,0x7a63(%rip)        # d120 <_gm_>
    56bd:	e9 9a f9 ff ff       	jmpq   505c <dlmalloc+0x2ec>
    56c2:	b8 01 00 00 00       	mov    $0x1,%eax
    56c7:	87 05 43 7e 00 00    	xchg   %eax,0x7e43(%rip)        # d510 <malloc_global_mutex>
    56cd:	48 8d 15 3c 7e 00 00 	lea    0x7e3c(%rip),%rdx        # d510 <malloc_global_mutex>
    56d4:	be 01 00 00 00       	mov    $0x1,%esi
    56d9:	85 c0                	test   %eax,%eax
    56db:	0f 85 cf 02 00 00    	jne    59b0 <dlmalloc+0xc40>
    56e1:	48 89 cf             	mov    %rcx,%rdi
    56e4:	e8 87 26 00 00       	callq  7d70 <sbrk>
    56e9:	31 ff                	xor    %edi,%edi
    56eb:	48 89 c3             	mov    %rax,%rbx
    56ee:	e8 7d 26 00 00       	callq  7d70 <sbrk>
    56f3:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    56f7:	0f 95 c1             	setne  %cl
    56fa:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax
    56fe:	0f 95 c2             	setne  %dl
    5701:	84 d1                	test   %dl,%cl
    5703:	c7 05 03 7e 00 00 00 	movl   $0x0,0x7e03(%rip)        # d510 <malloc_global_mutex>
    570a:	00 00 00 
    570d:	0f 84 32 fb ff ff    	je     5245 <dlmalloc+0x4d5>
    5713:	48 39 c3             	cmp    %rax,%rbx
    5716:	0f 83 29 fb ff ff    	jae    5245 <dlmalloc+0x4d5>
    571c:	48 29 d8             	sub    %rbx,%rax
    571f:	49 89 c7             	mov    %rax,%r15
    5722:	48 8d 45 50          	lea    0x50(%rbp),%rax
    5726:	49 39 c7             	cmp    %rax,%r15
    5729:	0f 86 16 fb ff ff    	jbe    5245 <dlmalloc+0x4d5>
    572f:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    5733:	0f 84 0c fb ff ff    	je     5245 <dlmalloc+0x4d5>
    5739:	48 8b 05 38 7d 00 00 	mov    0x7d38(%rip),%rax        # d478 <_gm_+0x358>
    5740:	4c 01 f8             	add    %r15,%rax
    5743:	48 3b 05 36 7d 00 00 	cmp    0x7d36(%rip),%rax        # d480 <_gm_+0x360>
    574a:	48 89 05 27 7d 00 00 	mov    %rax,0x7d27(%rip)        # d478 <_gm_+0x358>
    5751:	76 07                	jbe    575a <dlmalloc+0x9ea>
    5753:	48 89 05 26 7d 00 00 	mov    %rax,0x7d26(%rip)        # d480 <_gm_+0x360>
    575a:	48 8b 35 e7 79 00 00 	mov    0x79e7(%rip),%rsi        # d148 <_gm_+0x28>
    5761:	48 8d 05 30 7d 00 00 	lea    0x7d30(%rip),%rax        # d498 <_gm_+0x378>
    5768:	48 85 f6             	test   %rsi,%rsi
    576b:	0f 84 11 05 00 00    	je     5c82 <dlmalloc+0xf12>
    5771:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5778:	48 8b 08             	mov    (%rax),%rcx
    577b:	48 8b 50 08          	mov    0x8(%rax),%rdx
    577f:	48 8d 3c 11          	lea    (%rcx,%rdx,1),%rdi
    5783:	48 39 df             	cmp    %rbx,%rdi
    5786:	0f 84 24 03 00 00    	je     5ab0 <dlmalloc+0xd40>
    578c:	48 8b 40 10          	mov    0x10(%rax),%rax
    5790:	48 85 c0             	test   %rax,%rax
    5793:	75 e3                	jne    5778 <dlmalloc+0xa08>
    5795:	48 39 1d 9c 79 00 00 	cmp    %rbx,0x799c(%rip)        # d138 <_gm_+0x18>
    579c:	76 07                	jbe    57a5 <dlmalloc+0xa35>
    579e:	48 89 1d 93 79 00 00 	mov    %rbx,0x7993(%rip)        # d138 <_gm_+0x18>
    57a5:	4a 8d 0c 3b          	lea    (%rbx,%r15,1),%rcx
    57a9:	48 8d 05 e8 7c 00 00 	lea    0x7ce8(%rip),%rax        # d498 <_gm_+0x378>
    57b0:	48 8b 10             	mov    (%rax),%rdx
    57b3:	48 39 ca             	cmp    %rcx,%rdx
    57b6:	0f 84 02 02 00 00    	je     59be <dlmalloc+0xc4e>
    57bc:	48 8b 40 10          	mov    0x10(%rax),%rax
    57c0:	48 85 c0             	test   %rax,%rax
    57c3:	75 eb                	jne    57b0 <dlmalloc+0xa40>
    57c5:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    57c9:	49 89 f8             	mov    %rdi,%r8
    57cc:	41 83 e0 0f          	and    $0xf,%r8d
    57d0:	48 8d 05 c1 7c 00 00 	lea    0x7cc1(%rip),%rax        # d498 <_gm_+0x378>
    57d7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    57de:	00 00 
    57e0:	48 8b 10             	mov    (%rax),%rdx
    57e3:	48 39 d6             	cmp    %rdx,%rsi
    57e6:	72 09                	jb     57f1 <dlmalloc+0xa81>
    57e8:	48 03 50 08          	add    0x8(%rax),%rdx
    57ec:	48 39 d6             	cmp    %rdx,%rsi
    57ef:	72 09                	jb     57fa <dlmalloc+0xa8a>
    57f1:	48 8b 40 10          	mov    0x10(%rax),%rax
    57f5:	48 85 c0             	test   %rax,%rax
    57f8:	75 e6                	jne    57e0 <dlmalloc+0xa70>
    57fa:	48 8b 48 08          	mov    0x8(%rax),%rcx
    57fe:	48 03 08             	add    (%rax),%rcx
    5801:	48 c7 c2 a1 ff ff ff 	mov    $0xffffffffffffffa1,%rdx
    5808:	48 8d 41 b1          	lea    -0x4f(%rcx),%rax
    580c:	a8 0f                	test   $0xf,%al
    580e:	74 09                	je     5819 <dlmalloc+0xaa9>
    5810:	48 f7 d8             	neg    %rax
    5813:	83 e0 0f             	and    $0xf,%eax
    5816:	48 01 c2             	add    %rax,%rdx
    5819:	48 8d 46 20          	lea    0x20(%rsi),%rax
    581d:	48 01 ca             	add    %rcx,%rdx
    5820:	4d 8d 4f b0          	lea    -0x50(%r15),%r9
    5824:	48 39 c2             	cmp    %rax,%rdx
    5827:	48 0f 42 d6          	cmovb  %rsi,%rdx
    582b:	4d 85 c0             	test   %r8,%r8
    582e:	4c 8d 52 10          	lea    0x10(%rdx),%r10
    5832:	0f 84 77 05 00 00    	je     5daf <dlmalloc+0x103f>
    5838:	48 f7 df             	neg    %rdi
    583b:	4c 89 c8             	mov    %r9,%rax
    583e:	83 e7 0f             	and    $0xf,%edi
    5841:	4c 8d 04 3b          	lea    (%rbx,%rdi,1),%r8
    5845:	48 29 f8             	sub    %rdi,%rax
    5848:	48 89 05 e1 78 00 00 	mov    %rax,0x78e1(%rip)        # d130 <_gm_+0x10>
    584f:	48 83 c8 01          	or     $0x1,%rax
    5853:	4c 89 05 ee 78 00 00 	mov    %r8,0x78ee(%rip)        # d148 <_gm_+0x28>
    585a:	49 89 40 08          	mov    %rax,0x8(%r8)
    585e:	48 8b 05 9b 7c 00 00 	mov    0x7c9b(%rip),%rax        # d500 <mparams+0x20>
    5865:	f3 0f 6f 05 2b 7c 00 	movdqu 0x7c2b(%rip),%xmm0        # d498 <_gm_+0x378>
    586c:	00 
    586d:	4a c7 44 0b 08 50 00 	movq   $0x50,0x8(%rbx,%r9,1)
    5874:	00 00 
    5876:	48 89 05 d3 78 00 00 	mov    %rax,0x78d3(%rip)        # d150 <_gm_+0x30>
    587d:	48 8b 05 5c 7c 00 00 	mov    0x7c5c(%rip),%rax        # d4e0 <mparams>
    5884:	0f 11 42 10          	movups %xmm0,0x10(%rdx)
    5888:	48 c7 42 08 33 00 00 	movq   $0x33,0x8(%rdx)
    588f:	00 
    5890:	4c 31 e8             	xor    %r13,%rax
    5893:	f3 0f 6f 05 0d 7c 00 	movdqu 0x7c0d(%rip),%xmm0        # d4a8 <_gm_+0x388>
    589a:	00 
    589b:	48 89 42 30          	mov    %rax,0x30(%rdx)
    589f:	48 8d 42 38          	lea    0x38(%rdx),%rax
    58a3:	0f 11 42 20          	movups %xmm0,0x20(%rdx)
    58a7:	48 89 1d ea 7b 00 00 	mov    %rbx,0x7bea(%rip)        # d498 <_gm_+0x378>
    58ae:	4c 89 3d eb 7b 00 00 	mov    %r15,0x7beb(%rip)        # d4a0 <_gm_+0x380>
    58b5:	c7 05 f1 7b 00 00 00 	movl   $0x0,0x7bf1(%rip)        # d4b0 <_gm_+0x390>
    58bc:	00 00 00 
    58bf:	4c 89 15 e2 7b 00 00 	mov    %r10,0x7be2(%rip)        # d4a8 <_gm_+0x388>
    58c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    58cd:	00 00 00 
    58d0:	48 c7 00 0b 00 00 00 	movq   $0xb,(%rax)
    58d7:	48 83 c0 08          	add    $0x8,%rax
    58db:	48 39 c1             	cmp    %rax,%rcx
    58de:	77 f0                	ja     58d0 <dlmalloc+0xb60>
    58e0:	48 39 d6             	cmp    %rdx,%rsi
    58e3:	0f 84 9f 06 00 00    	je     5f88 <dlmalloc+0x1218>
    58e9:	48 89 d7             	mov    %rdx,%rdi
    58ec:	48 83 62 08 fe       	andq   $0xfffffffffffffffe,0x8(%rdx)
    58f1:	48 29 f7             	sub    %rsi,%rdi
    58f4:	48 89 f9             	mov    %rdi,%rcx
    58f7:	48 89 f8             	mov    %rdi,%rax
    58fa:	48 c1 e9 03          	shr    $0x3,%rcx
    58fe:	48 83 c8 01          	or     $0x1,%rax
    5902:	48 83 f9 1f          	cmp    $0x1f,%rcx
    5906:	48 89 46 08          	mov    %rax,0x8(%rsi)
    590a:	48 89 3a             	mov    %rdi,(%rdx)
    590d:	0f 87 62 05 00 00    	ja     5e75 <dlmalloc+0x1105>
    5913:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    5916:	8b 15 04 78 00 00    	mov    0x7804(%rip),%edx        # d120 <_gm_>
    591c:	49 8d 7c c5 48       	lea    0x48(%r13,%rax,8),%rdi
    5921:	b8 01 00 00 00       	mov    $0x1,%eax
    5926:	d3 e0                	shl    %cl,%eax
    5928:	85 c2                	test   %eax,%edx
    592a:	0f 85 4c 07 00 00    	jne    607c <dlmalloc+0x130c>
    5930:	09 d0                	or     %edx,%eax
    5932:	89 05 e8 77 00 00    	mov    %eax,0x77e8(%rip)        # d120 <_gm_>
    5938:	48 89 f8             	mov    %rdi,%rax
    593b:	48 89 77 10          	mov    %rsi,0x10(%rdi)
    593f:	48 89 70 18          	mov    %rsi,0x18(%rax)
    5943:	48 89 46 10          	mov    %rax,0x10(%rsi)
    5947:	48 8b 05 e2 77 00 00 	mov    0x77e2(%rip),%rax        # d130 <_gm_+0x10>
    594e:	48 89 7e 18          	mov    %rdi,0x18(%rsi)
    5952:	48 39 e8             	cmp    %rbp,%rax
    5955:	0f 86 ea f8 ff ff    	jbe    5245 <dlmalloc+0x4d5>
    595b:	48 8b 1d e6 77 00 00 	mov    0x77e6(%rip),%rbx        # d148 <_gm_+0x28>
    5962:	4c 33 2d 77 7b 00 00 	xor    0x7b77(%rip),%r13        # d4e0 <mparams>
    5969:	48 29 e8             	sub    %rbp,%rax
    596c:	48 89 05 bd 77 00 00 	mov    %rax,0x77bd(%rip)        # d130 <_gm_+0x10>
    5973:	48 83 c8 01          	or     $0x1,%rax
    5977:	48 8d 14 2b          	lea    (%rbx,%rbp,1),%rdx
    597b:	48 83 cd 03          	or     $0x3,%rbp
    597f:	48 89 15 c2 77 00 00 	mov    %rdx,0x77c2(%rip)        # d148 <_gm_+0x28>
    5986:	48 89 42 08          	mov    %rax,0x8(%rdx)
    598a:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    598e:	4c 89 2a             	mov    %r13,(%rdx)
    5991:	e9 d5 f5 ff ff       	jmpq   4f6b <dlmalloc+0x1fb>
    5996:	89 f0                	mov    %esi,%eax
    5998:	87 05 72 7b 00 00    	xchg   %eax,0x7b72(%rip)        # d510 <malloc_global_mutex>
    599e:	85 c0                	test   %eax,%eax
    59a0:	0f 84 3b fd ff ff    	je     56e1 <dlmalloc+0x971>
    59a6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    59ad:	00 00 00 
    59b0:	8b 02                	mov    (%rdx),%eax
    59b2:	85 c0                	test   %eax,%eax
    59b4:	74 e0                	je     5996 <dlmalloc+0xc26>
    59b6:	8b 02                	mov    (%rdx),%eax
    59b8:	85 c0                	test   %eax,%eax
    59ba:	75 f4                	jne    59b0 <dlmalloc+0xc40>
    59bc:	eb d8                	jmp    5996 <dlmalloc+0xc26>
    59be:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    59c2:	49 89 f8             	mov    %rdi,%r8
    59c5:	41 83 e0 0f          	and    $0xf,%r8d
    59c9:	f6 40 18 08          	testb  $0x8,0x18(%rax)
    59cd:	0f 85 fd fd ff ff    	jne    57d0 <dlmalloc+0xa60>
    59d3:	4c 01 78 08          	add    %r15,0x8(%rax)
    59d7:	4d 85 c0             	test   %r8,%r8
    59da:	48 89 18             	mov    %rbx,(%rax)
    59dd:	74 0c                	je     59eb <dlmalloc+0xc7b>
    59df:	48 89 f8             	mov    %rdi,%rax
    59e2:	48 f7 d8             	neg    %rax
    59e5:	83 e0 0f             	and    $0xf,%eax
    59e8:	48 01 c3             	add    %rax,%rbx
    59eb:	48 8d 42 10          	lea    0x10(%rdx),%rax
    59ef:	a8 0f                	test   $0xf,%al
    59f1:	74 09                	je     59fc <dlmalloc+0xc8c>
    59f3:	48 f7 d8             	neg    %rax
    59f6:	83 e0 0f             	and    $0xf,%eax
    59f9:	48 01 c2             	add    %rax,%rdx
    59fc:	48 8b 0d dd 7a 00 00 	mov    0x7add(%rip),%rcx        # d4e0 <mparams>
    5a03:	48 89 d7             	mov    %rdx,%rdi
    5a06:	48 8d 04 2b          	lea    (%rbx,%rbp,1),%rax
    5a0a:	48 29 df             	sub    %rbx,%rdi
    5a0d:	48 29 ef             	sub    %rbp,%rdi
    5a10:	48 83 cd 03          	or     $0x3,%rbp
    5a14:	4c 31 e9             	xor    %r13,%rcx
    5a17:	48 39 d6             	cmp    %rdx,%rsi
    5a1a:	48 89 6b 08          	mov    %rbp,0x8(%rbx)
    5a1e:	48 89 08             	mov    %rcx,(%rax)
    5a21:	0f 84 2d 08 00 00    	je     6254 <dlmalloc+0x14e4>
    5a27:	48 39 15 12 77 00 00 	cmp    %rdx,0x7712(%rip)        # d140 <_gm_+0x20>
    5a2e:	0f 84 a6 09 00 00    	je     63da <dlmalloc+0x166a>
    5a34:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    5a38:	48 89 ce             	mov    %rcx,%rsi
    5a3b:	83 e6 03             	and    $0x3,%esi
    5a3e:	48 83 fe 01          	cmp    $0x1,%rsi
    5a42:	0f 84 bb 09 00 00    	je     6403 <dlmalloc+0x1693>
    5a48:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    5a4c:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    5a50:	48 89 f9             	mov    %rdi,%rcx
    5a53:	48 89 fa             	mov    %rdi,%rdx
    5a56:	48 c1 e9 03          	shr    $0x3,%rcx
    5a5a:	48 83 ca 01          	or     $0x1,%rdx
    5a5e:	48 83 f9 1f          	cmp    $0x1f,%rcx
    5a62:	48 89 50 08          	mov    %rdx,0x8(%rax)
    5a66:	48 89 3c 38          	mov    %rdi,(%rax,%rdi,1)
    5a6a:	0f 87 11 08 00 00    	ja     6281 <dlmalloc+0x1511>
    5a70:	8b 35 aa 76 00 00    	mov    0x76aa(%rip),%esi        # d120 <_gm_>
    5a76:	bf 01 00 00 00       	mov    $0x1,%edi
    5a7b:	8d 14 09             	lea    (%rcx,%rcx,1),%edx
    5a7e:	d3 e7                	shl    %cl,%edi
    5a80:	49 8d 54 d5 48       	lea    0x48(%r13,%rdx,8),%rdx
    5a85:	85 fe                	test   %edi,%esi
    5a87:	0f 85 5f 0b 00 00    	jne    65ec <dlmalloc+0x187c>
    5a8d:	09 fe                	or     %edi,%esi
    5a8f:	48 89 d1             	mov    %rdx,%rcx
    5a92:	89 35 88 76 00 00    	mov    %esi,0x7688(%rip)        # d120 <_gm_>
    5a98:	48 89 42 10          	mov    %rax,0x10(%rdx)
    5a9c:	48 89 41 18          	mov    %rax,0x18(%rcx)
    5aa0:	48 89 48 10          	mov    %rcx,0x10(%rax)
    5aa4:	48 89 50 18          	mov    %rdx,0x18(%rax)
    5aa8:	e9 be f4 ff ff       	jmpq   4f6b <dlmalloc+0x1fb>
    5aad:	0f 1f 00             	nopl   (%rax)
    5ab0:	f6 40 18 08          	testb  $0x8,0x18(%rax)
    5ab4:	0f 85 db fc ff ff    	jne    5795 <dlmalloc+0xa25>
    5aba:	48 39 ce             	cmp    %rcx,%rsi
    5abd:	0f 82 d2 fc ff ff    	jb     5795 <dlmalloc+0xa25>
    5ac3:	48 39 de             	cmp    %rbx,%rsi
    5ac6:	0f 83 c9 fc ff ff    	jae    5795 <dlmalloc+0xa25>
    5acc:	4c 01 fa             	add    %r15,%rdx
    5acf:	4c 03 3d 5a 76 00 00 	add    0x765a(%rip),%r15        # d130 <_gm_+0x10>
    5ad6:	48 89 50 08          	mov    %rdx,0x8(%rax)
    5ada:	48 8d 46 10          	lea    0x10(%rsi),%rax
    5ade:	a8 0f                	test   $0xf,%al
    5ae0:	0f 84 90 07 00 00    	je     6276 <dlmalloc+0x1506>
    5ae6:	48 f7 d8             	neg    %rax
    5ae9:	4c 89 ff             	mov    %r15,%rdi
    5aec:	83 e0 0f             	and    $0xf,%eax
    5aef:	48 29 c7             	sub    %rax,%rdi
    5af2:	48 8d 14 06          	lea    (%rsi,%rax,1),%rdx
    5af6:	48 89 f8             	mov    %rdi,%rax
    5af9:	48 89 c1             	mov    %rax,%rcx
    5afc:	48 89 15 45 76 00 00 	mov    %rdx,0x7645(%rip)        # d148 <_gm_+0x28>
    5b03:	48 89 05 26 76 00 00 	mov    %rax,0x7626(%rip)        # d130 <_gm_+0x10>
    5b0a:	48 83 c9 01          	or     $0x1,%rcx
    5b0e:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    5b12:	48 8b 15 e7 79 00 00 	mov    0x79e7(%rip),%rdx        # d500 <mparams+0x20>
    5b19:	4a c7 44 3e 08 50 00 	movq   $0x50,0x8(%rsi,%r15,1)
    5b20:	00 00 
    5b22:	48 89 15 27 76 00 00 	mov    %rdx,0x7627(%rip)        # d150 <_gm_+0x30>
    5b29:	e9 24 fe ff ff       	jmpq   5952 <dlmalloc+0xbe2>
    5b2e:	45 31 f6             	xor    %r14d,%r14d
    5b31:	48 8d 15 d8 79 00 00 	lea    0x79d8(%rip),%rdx        # d510 <malloc_global_mutex>
    5b38:	be 01 00 00 00       	mov    $0x1,%esi
    5b3d:	0f 1f 00             	nopl   (%rax)
    5b40:	8b 02                	mov    (%rdx),%eax
    5b42:	85 c0                	test   %eax,%eax
    5b44:	75 fa                	jne    5b40 <dlmalloc+0xdd0>
    5b46:	89 f0                	mov    %esi,%eax
    5b48:	87 05 c2 79 00 00    	xchg   %eax,0x79c2(%rip)        # d510 <malloc_global_mutex>
    5b4e:	85 c0                	test   %eax,%eax
    5b50:	75 ee                	jne    5b40 <dlmalloc+0xdd0>
    5b52:	4d 85 f6             	test   %r14,%r14
    5b55:	0f 84 56 f6 ff ff    	je     51b1 <dlmalloc+0x441>
    5b5b:	48 8b 05 8e 79 00 00 	mov    0x798e(%rip),%rax        # d4f0 <mparams+0x10>
    5b62:	4c 8d 78 5f          	lea    0x5f(%rax),%r15
    5b66:	4c 2b 3d c3 75 00 00 	sub    0x75c3(%rip),%r15        # d130 <_gm_+0x10>
    5b6d:	48 f7 d8             	neg    %rax
    5b70:	49 01 ef             	add    %rbp,%r15
    5b73:	49 21 c7             	and    %rax,%r15
    5b76:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    5b7d:	ff ff 7f 
    5b80:	49 39 c7             	cmp    %rax,%r15
    5b83:	0f 87 9f f6 ff ff    	ja     5228 <dlmalloc+0x4b8>
    5b89:	4c 89 ff             	mov    %r15,%rdi
    5b8c:	48 89 0c 24          	mov    %rcx,(%rsp)
    5b90:	e8 db 21 00 00       	callq  7d70 <sbrk>
    5b95:	48 89 c3             	mov    %rax,%rbx
    5b98:	49 8b 46 08          	mov    0x8(%r14),%rax
    5b9c:	49 03 06             	add    (%r14),%rax
    5b9f:	48 8b 0c 24          	mov    (%rsp),%rcx
    5ba3:	48 39 c3             	cmp    %rax,%rbx
    5ba6:	75 06                	jne    5bae <dlmalloc+0xe3e>
    5ba8:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    5bac:	75 41                	jne    5bef <dlmalloc+0xe7f>
    5bae:	48 83 fb ff          	cmp    $0xffffffffffffffff,%rbx
    5bb2:	0f 84 70 f6 ff ff    	je     5228 <dlmalloc+0x4b8>
    5bb8:	48 8d 45 60          	lea    0x60(%rbp),%rax
    5bbc:	4c 39 f8             	cmp    %r15,%rax
    5bbf:	76 2e                	jbe    5bef <dlmalloc+0xe7f>
    5bc1:	48 8b 05 28 79 00 00 	mov    0x7928(%rip),%rax        # d4f0 <mparams+0x10>
    5bc8:	4d 89 fe             	mov    %r15,%r14
    5bcb:	49 f7 de             	neg    %r14
    5bce:	48 8d 54 05 5f       	lea    0x5f(%rbp,%rax,1),%rdx
    5bd3:	48 f7 d8             	neg    %rax
    5bd6:	4c 29 fa             	sub    %r15,%rdx
    5bd9:	48 21 c2             	and    %rax,%rdx
    5bdc:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    5be3:	ff ff 7f 
    5be6:	48 39 c2             	cmp    %rax,%rdx
    5be9:	0f 86 13 0a 00 00    	jbe    6602 <dlmalloc+0x1892>
    5bef:	c7 05 17 79 00 00 00 	movl   $0x0,0x7917(%rip)        # d510 <malloc_global_mutex>
    5bf6:	00 00 00 
    5bf9:	e9 3b fb ff ff       	jmpq   5739 <dlmalloc+0x9c9>
    5bfe:	48 89 e9             	mov    %rbp,%rcx
    5c01:	48 01 dd             	add    %rbx,%rbp
    5c04:	48 83 c9 03          	or     $0x3,%rcx
    5c08:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    5c0c:	48 89 d1             	mov    %rdx,%rcx
    5c0f:	48 89 7d 00          	mov    %rdi,0x0(%rbp)
    5c13:	48 83 c9 01          	or     $0x1,%rcx
    5c17:	48 85 f6             	test   %rsi,%rsi
    5c1a:	48 89 4d 08          	mov    %rcx,0x8(%rbp)
    5c1e:	48 89 10             	mov    %rdx,(%rax)
    5c21:	74 4c                	je     5c6f <dlmalloc+0xeff>
    5c23:	48 c1 ee 03          	shr    $0x3,%rsi
    5c27:	44 8b 05 f2 74 00 00 	mov    0x74f2(%rip),%r8d        # d120 <_gm_>
    5c2e:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    5c34:	48 89 f1             	mov    %rsi,%rcx
    5c37:	8d 3c 36             	lea    (%rsi,%rsi,1),%edi
    5c3a:	48 8b 05 ff 74 00 00 	mov    0x74ff(%rip),%rax        # d140 <_gm_+0x20>
    5c41:	41 d3 e1             	shl    %cl,%r9d
    5c44:	45 85 c8             	test   %r9d,%r8d
    5c47:	49 8d 7c fd 48       	lea    0x48(%r13,%rdi,8),%rdi
    5c4c:	0f 85 40 04 00 00    	jne    6092 <dlmalloc+0x1322>
    5c52:	45 09 c8             	or     %r9d,%r8d
    5c55:	48 89 f9             	mov    %rdi,%rcx
    5c58:	44 89 05 c1 74 00 00 	mov    %r8d,0x74c1(%rip)        # d120 <_gm_>
    5c5f:	48 89 47 10          	mov    %rax,0x10(%rdi)
    5c63:	48 89 41 18          	mov    %rax,0x18(%rcx)
    5c67:	48 89 48 10          	mov    %rcx,0x10(%rax)
    5c6b:	48 89 78 18          	mov    %rdi,0x18(%rax)
    5c6f:	48 89 15 b2 74 00 00 	mov    %rdx,0x74b2(%rip)        # d128 <_gm_+0x8>
    5c76:	48 89 2d c3 74 00 00 	mov    %rbp,0x74c3(%rip)        # d140 <_gm_+0x20>
    5c7d:	e9 e9 f2 ff ff       	jmpq   4f6b <dlmalloc+0x1fb>
    5c82:	48 8b 05 af 74 00 00 	mov    0x74af(%rip),%rax        # d138 <_gm_+0x18>
    5c89:	48 39 d8             	cmp    %rbx,%rax
    5c8c:	77 05                	ja     5c93 <dlmalloc+0xf23>
    5c8e:	48 85 c0             	test   %rax,%rax
    5c91:	75 07                	jne    5c9a <dlmalloc+0xf2a>
    5c93:	48 89 1d 9e 74 00 00 	mov    %rbx,0x749e(%rip)        # d138 <_gm_+0x18>
    5c9a:	48 8b 05 3f 78 00 00 	mov    0x783f(%rip),%rax        # d4e0 <mparams>
    5ca1:	48 89 1d f0 77 00 00 	mov    %rbx,0x77f0(%rip)        # d498 <_gm_+0x378>
    5ca8:	4c 89 3d f1 77 00 00 	mov    %r15,0x77f1(%rip)        # d4a0 <_gm_+0x380>
    5caf:	c7 05 f7 77 00 00 00 	movl   $0x0,0x77f7(%rip)        # d4b0 <_gm_+0x390>
    5cb6:	00 00 00 
    5cb9:	48 c7 05 94 74 00 00 	movq   $0xffffffffffffffff,0x7494(%rip)        # d158 <_gm_+0x38>
    5cc0:	ff ff ff ff 
    5cc4:	48 89 05 95 74 00 00 	mov    %rax,0x7495(%rip)        # d160 <_gm_+0x40>
    5ccb:	48 8d 05 96 74 00 00 	lea    0x7496(%rip),%rax        # d168 <_gm_+0x48>
    5cd2:	48 8d 90 00 02 00 00 	lea    0x200(%rax),%rdx
    5cd9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    5ce0:	48 89 40 18          	mov    %rax,0x18(%rax)
    5ce4:	48 89 40 10          	mov    %rax,0x10(%rax)
    5ce8:	48 83 c0 10          	add    $0x10,%rax
    5cec:	48 39 c2             	cmp    %rax,%rdx
    5cef:	75 ef                	jne    5ce0 <dlmalloc+0xf70>
    5cf1:	48 8d 43 10          	lea    0x10(%rbx),%rax
    5cf5:	49 83 ef 50          	sub    $0x50,%r15
    5cf9:	a8 0f                	test   $0xf,%al
    5cfb:	0f 84 6f 02 00 00    	je     5f70 <dlmalloc+0x1200>
    5d01:	48 f7 d8             	neg    %rax
    5d04:	4c 89 fe             	mov    %r15,%rsi
    5d07:	83 e0 0f             	and    $0xf,%eax
    5d0a:	48 29 c6             	sub    %rax,%rsi
    5d0d:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
    5d11:	48 89 f0             	mov    %rsi,%rax
    5d14:	48 89 c1             	mov    %rax,%rcx
    5d17:	48 89 15 2a 74 00 00 	mov    %rdx,0x742a(%rip)        # d148 <_gm_+0x28>
    5d1e:	48 89 05 0b 74 00 00 	mov    %rax,0x740b(%rip)        # d130 <_gm_+0x10>
    5d25:	48 83 c9 01          	or     $0x1,%rcx
    5d29:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    5d2d:	48 8b 15 cc 77 00 00 	mov    0x77cc(%rip),%rdx        # d500 <mparams+0x20>
    5d34:	4a c7 44 3b 08 50 00 	movq   $0x50,0x8(%rbx,%r15,1)
    5d3b:	00 00 
    5d3d:	48 89 15 0c 74 00 00 	mov    %rdx,0x740c(%rip)        # d150 <_gm_+0x30>
    5d44:	e9 09 fc ff ff       	jmpq   5952 <dlmalloc+0xbe2>
    5d49:	4d 85 db             	test   %r11,%r11
    5d4c:	4c 89 ca             	mov    %r9,%rdx
    5d4f:	4c 89 d8             	mov    %r11,%rax
    5d52:	0f 85 db f5 ff ff    	jne    5333 <dlmalloc+0x5c3>
    5d58:	e9 fe f5 ff ff       	jmpq   535b <dlmalloc+0x5eb>
    5d5d:	0f bd c0             	bsr    %eax,%eax
    5d60:	b9 26 00 00 00       	mov    $0x26,%ecx
    5d65:	48 89 ea             	mov    %rbp,%rdx
    5d68:	83 f0 1f             	xor    $0x1f,%eax
    5d6b:	29 c1                	sub    %eax,%ecx
    5d6d:	48 d3 ea             	shr    %cl,%rdx
    5d70:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    5d75:	83 e2 01             	and    $0x1,%edx
    5d78:	29 c1                	sub    %eax,%ecx
    5d7a:	8d 04 4a             	lea    (%rdx,%rcx,2),%eax
    5d7d:	49 89 c2             	mov    %rax,%r10
    5d80:	49 8b 84 c5 58 02 00 	mov    0x258(%r13,%rax,8),%rax
    5d87:	00 
    5d88:	48 85 c0             	test   %rax,%rax
    5d8b:	0f 84 67 f5 ff ff    	je     52f8 <dlmalloc+0x588>
    5d91:	41 83 fa 1f          	cmp    $0x1f,%r10d
    5d95:	48 89 e9             	mov    %rbp,%rcx
    5d98:	0f 84 f8 f4 ff ff    	je     5296 <dlmalloc+0x526>
    5d9e:	44 89 d2             	mov    %r10d,%edx
    5da1:	b9 39 00 00 00       	mov    $0x39,%ecx
    5da6:	d1 ea                	shr    %edx
    5da8:	29 d1                	sub    %edx,%ecx
    5daa:	e9 de f4 ff ff       	jmpq   528d <dlmalloc+0x51d>
    5daf:	4c 89 c8             	mov    %r9,%rax
    5db2:	49 89 d8             	mov    %rbx,%r8
    5db5:	e9 8e fa ff ff       	jmpq   5848 <dlmalloc+0xad8>
    5dba:	48 89 c3             	mov    %rax,%rbx
    5dbd:	e9 71 f5 ff ff       	jmpq   5333 <dlmalloc+0x5c3>
    5dc2:	48 89 e8             	mov    %rbp,%rax
    5dc5:	48 83 c8 03          	or     $0x3,%rax
    5dc9:	48 89 43 08          	mov    %rax,0x8(%rbx)
    5dcd:	49 89 0a             	mov    %rcx,(%r10)
    5dd0:	48 89 d1             	mov    %rdx,%rcx
    5dd3:	48 89 d0             	mov    %rdx,%rax
    5dd6:	48 c1 e9 03          	shr    $0x3,%rcx
    5dda:	48 83 c8 01          	or     $0x1,%rax
    5dde:	48 83 f9 1f          	cmp    $0x1f,%rcx
    5de2:	49 89 42 08          	mov    %rax,0x8(%r10)
    5de6:	49 89 14 12          	mov    %rdx,(%r10,%rdx,1)
    5dea:	0f 87 e0 01 00 00    	ja     5fd0 <dlmalloc+0x1260>
    5df0:	8b 15 2a 73 00 00    	mov    0x732a(%rip),%edx        # d120 <_gm_>
    5df6:	bf 01 00 00 00       	mov    $0x1,%edi
    5dfb:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    5dfe:	d3 e7                	shl    %cl,%edi
    5e00:	49 8d 44 c5 48       	lea    0x48(%r13,%rax,8),%rax
    5e05:	85 fa                	test   %edi,%edx
    5e07:	0f 85 e6 02 00 00    	jne    60f3 <dlmalloc+0x1383>
    5e0d:	09 fa                	or     %edi,%edx
    5e0f:	89 15 0b 73 00 00    	mov    %edx,0x730b(%rip)        # d120 <_gm_>
    5e15:	48 89 c2             	mov    %rax,%rdx
    5e18:	4c 89 50 10          	mov    %r10,0x10(%rax)
    5e1c:	4c 89 52 18          	mov    %r10,0x18(%rdx)
    5e20:	49 89 52 10          	mov    %rdx,0x10(%r10)
    5e24:	49 89 42 18          	mov    %rax,0x18(%r10)
    5e28:	e9 3f f6 ff ff       	jmpq   546c <dlmalloc+0x6fc>
    5e2d:	48 8b 4b 28          	mov    0x28(%rbx),%rcx
    5e31:	48 8d 7b 28          	lea    0x28(%rbx),%rdi
    5e35:	48 85 c9             	test   %rcx,%rcx
    5e38:	0f 84 9f 02 00 00    	je     60dd <dlmalloc+0x136d>
    5e3e:	66 90                	xchg   %ax,%ax
    5e40:	48 89 c8             	mov    %rcx,%rax
    5e43:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    5e47:	49 89 f9             	mov    %rdi,%r9
    5e4a:	48 8d 78 28          	lea    0x28(%rax),%rdi
    5e4e:	48 85 c9             	test   %rcx,%rcx
    5e51:	75 ed                	jne    5e40 <dlmalloc+0x10d0>
    5e53:	48 8b 48 20          	mov    0x20(%rax),%rcx
    5e57:	48 8d 78 20          	lea    0x20(%rax),%rdi
    5e5b:	48 85 c9             	test   %rcx,%rcx
    5e5e:	75 e0                	jne    5e40 <dlmalloc+0x10d0>
    5e60:	4d 39 cb             	cmp    %r9,%r11
    5e63:	0f 87 47 f6 ff ff    	ja     54b0 <dlmalloc+0x740>
    5e69:	49 c7 01 00 00 00 00 	movq   $0x0,(%r9)
    5e70:	e9 55 f5 ff ff       	jmpq   53ca <dlmalloc+0x65a>
    5e75:	48 89 f8             	mov    %rdi,%rax
    5e78:	48 c1 e8 08          	shr    $0x8,%rax
    5e7c:	85 c0                	test   %eax,%eax
    5e7e:	0f 84 e4 01 00 00    	je     6068 <dlmalloc+0x12f8>
    5e84:	3d ff ff 00 00       	cmp    $0xffff,%eax
    5e89:	0f 87 ab 03 00 00    	ja     623a <dlmalloc+0x14ca>
    5e8f:	0f bd c0             	bsr    %eax,%eax
    5e92:	b9 26 00 00 00       	mov    $0x26,%ecx
    5e97:	48 89 fa             	mov    %rdi,%rdx
    5e9a:	83 f0 1f             	xor    $0x1f,%eax
    5e9d:	29 c1                	sub    %eax,%ecx
    5e9f:	48 d3 ea             	shr    %cl,%rdx
    5ea2:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    5ea7:	29 c1                	sub    %eax,%ecx
    5ea9:	83 e2 01             	and    $0x1,%edx
    5eac:	b8 01 00 00 00       	mov    $0x1,%eax
    5eb1:	8d 14 4a             	lea    (%rdx,%rcx,2),%edx
    5eb4:	48 89 d1             	mov    %rdx,%rcx
    5eb7:	4c 8d 04 d5 58 02 00 	lea    0x258(,%rdx,8),%r8
    5ebe:	00 
    5ebf:	d3 e0                	shl    %cl,%eax
    5ec1:	44 8b 0d 5c 72 00 00 	mov    0x725c(%rip),%r9d        # d124 <_gm_+0x4>
    5ec8:	89 4e 38             	mov    %ecx,0x38(%rsi)
    5ecb:	48 c7 46 28 00 00 00 	movq   $0x0,0x28(%rsi)
    5ed2:	00 
    5ed3:	48 c7 46 20 00 00 00 	movq   $0x0,0x20(%rsi)
    5eda:	00 
    5edb:	44 85 c8             	test   %r9d,%eax
    5ede:	0f 84 c4 01 00 00    	je     60a8 <dlmalloc+0x1338>
    5ee4:	83 f9 1f             	cmp    $0x1f,%ecx
    5ee7:	49 8b 94 d5 58 02 00 	mov    0x258(%r13,%rdx,8),%rdx
    5eee:	00 
    5eef:	49 89 f8             	mov    %rdi,%r8
    5ef2:	74 2e                	je     5f22 <dlmalloc+0x11b2>
    5ef4:	d1 e9                	shr    %ecx
    5ef6:	b8 39 00 00 00       	mov    $0x39,%eax
    5efb:	29 c8                	sub    %ecx,%eax
    5efd:	89 c1                	mov    %eax,%ecx
    5eff:	49 d3 e0             	shl    %cl,%r8
    5f02:	eb 1e                	jmp    5f22 <dlmalloc+0x11b2>
    5f04:	4c 89 c0             	mov    %r8,%rax
    5f07:	4d 01 c0             	add    %r8,%r8
    5f0a:	48 c1 e8 3f          	shr    $0x3f,%rax
    5f0e:	48 83 c0 04          	add    $0x4,%rax
    5f12:	48 8b 0c c2          	mov    (%rdx,%rax,8),%rcx
    5f16:	48 85 c9             	test   %rcx,%rcx
    5f19:	0f 84 ee 02 00 00    	je     620d <dlmalloc+0x149d>
    5f1f:	48 89 ca             	mov    %rcx,%rdx
    5f22:	48 8b 42 08          	mov    0x8(%rdx),%rax
    5f26:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    5f2a:	48 39 c7             	cmp    %rax,%rdi
    5f2d:	75 d5                	jne    5f04 <dlmalloc+0x1194>
    5f2f:	48 8b 42 10          	mov    0x10(%rdx),%rax
    5f33:	48 8b 0d fe 71 00 00 	mov    0x71fe(%rip),%rcx        # d138 <_gm_+0x18>
    5f3a:	48 39 c8             	cmp    %rcx,%rax
    5f3d:	0f 82 6d f5 ff ff    	jb     54b0 <dlmalloc+0x740>
    5f43:	48 39 ca             	cmp    %rcx,%rdx
    5f46:	0f 82 64 f5 ff ff    	jb     54b0 <dlmalloc+0x740>
    5f4c:	48 89 70 18          	mov    %rsi,0x18(%rax)
    5f50:	48 89 72 10          	mov    %rsi,0x10(%rdx)
    5f54:	48 89 46 10          	mov    %rax,0x10(%rsi)
    5f58:	48 89 56 18          	mov    %rdx,0x18(%rsi)
    5f5c:	48 c7 46 30 00 00 00 	movq   $0x0,0x30(%rsi)
    5f63:	00 
    5f64:	48 8b 05 c5 71 00 00 	mov    0x71c5(%rip),%rax        # d130 <_gm_+0x10>
    5f6b:	e9 e2 f9 ff ff       	jmpq   5952 <dlmalloc+0xbe2>
    5f70:	4c 89 f8             	mov    %r15,%rax
    5f73:	48 89 da             	mov    %rbx,%rdx
    5f76:	e9 99 fd ff ff       	jmpq   5d14 <dlmalloc+0xfa4>
    5f7b:	4c 89 ca             	mov    %r9,%rdx
    5f7e:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    5f83:	e9 7d f3 ff ff       	jmpq   5305 <dlmalloc+0x595>
    5f88:	48 8b 05 a1 71 00 00 	mov    0x71a1(%rip),%rax        # d130 <_gm_+0x10>
    5f8f:	e9 be f9 ff ff       	jmpq   5952 <dlmalloc+0xbe2>
    5f94:	b8 01 00 00 00       	mov    $0x1,%eax
    5f99:	87 05 71 75 00 00    	xchg   %eax,0x7571(%rip)        # d510 <malloc_global_mutex>
    5f9f:	85 c0                	test   %eax,%eax
    5fa1:	0f 84 b4 fb ff ff    	je     5b5b <dlmalloc+0xdeb>
    5fa7:	e9 85 fb ff ff       	jmpq   5b31 <dlmalloc+0xdc1>
    5fac:	48 85 c0             	test   %rax,%rax
    5faf:	49 89 44 fd 08       	mov    %rax,0x8(%r13,%rdi,8)
    5fb4:	0f 85 46 f4 ff ff    	jne    5400 <dlmalloc+0x690>
    5fba:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    5fbf:	d3 c0                	rol    %cl,%eax
    5fc1:	41 21 c0             	and    %eax,%r8d
    5fc4:	44 89 05 59 71 00 00 	mov    %r8d,0x7159(%rip)        # d124 <_gm_+0x4>
    5fcb:	e9 6d f4 ff ff       	jmpq   543d <dlmalloc+0x6cd>
    5fd0:	48 89 d0             	mov    %rdx,%rax
    5fd3:	48 c1 e8 08          	shr    $0x8,%rax
    5fd7:	85 c0                	test   %eax,%eax
    5fd9:	0f 84 af 01 00 00    	je     618e <dlmalloc+0x141e>
    5fdf:	3d ff ff 00 00       	cmp    $0xffff,%eax
    5fe4:	0f 87 b4 03 00 00    	ja     639e <dlmalloc+0x162e>
    5fea:	0f bd c0             	bsr    %eax,%eax
    5fed:	b9 26 00 00 00       	mov    $0x26,%ecx
    5ff2:	48 89 d7             	mov    %rdx,%rdi
    5ff5:	83 f0 1f             	xor    $0x1f,%eax
    5ff8:	29 c1                	sub    %eax,%ecx
    5ffa:	48 d3 ef             	shr    %cl,%rdi
    5ffd:	48 89 f9             	mov    %rdi,%rcx
    6000:	bf 1f 00 00 00       	mov    $0x1f,%edi
    6005:	83 e1 01             	and    $0x1,%ecx
    6008:	29 c7                	sub    %eax,%edi
    600a:	b8 01 00 00 00       	mov    $0x1,%eax
    600f:	8d 3c 79             	lea    (%rcx,%rdi,2),%edi
    6012:	48 89 f9             	mov    %rdi,%rcx
    6015:	4c 8d 04 fd 58 02 00 	lea    0x258(,%rdi,8),%r8
    601c:	00 
    601d:	d3 e0                	shl    %cl,%eax
    601f:	44 8b 0d fe 70 00 00 	mov    0x70fe(%rip),%r9d        # d124 <_gm_+0x4>
    6026:	41 89 4a 38          	mov    %ecx,0x38(%r10)
    602a:	49 c7 42 28 00 00 00 	movq   $0x0,0x28(%r10)
    6031:	00 
    6032:	49 c7 42 20 00 00 00 	movq   $0x0,0x20(%r10)
    6039:	00 
    603a:	41 85 c1             	test   %eax,%r9d
    603d:	0f 85 c2 00 00 00    	jne    6105 <dlmalloc+0x1395>
    6043:	44 09 c8             	or     %r9d,%eax
    6046:	4d 01 e8             	add    %r13,%r8
    6049:	4d 89 94 fd 58 02 00 	mov    %r10,0x258(%r13,%rdi,8)
    6050:	00 
    6051:	89 05 cd 70 00 00    	mov    %eax,0x70cd(%rip)        # d124 <_gm_+0x4>
    6057:	4d 89 42 30          	mov    %r8,0x30(%r10)
    605b:	4d 89 52 18          	mov    %r10,0x18(%r10)
    605f:	4d 89 52 10          	mov    %r10,0x10(%r10)
    6063:	e9 04 f4 ff ff       	jmpq   546c <dlmalloc+0x6fc>
    6068:	41 b8 58 02 00 00    	mov    $0x258,%r8d
    606e:	b8 01 00 00 00       	mov    $0x1,%eax
    6073:	31 c9                	xor    %ecx,%ecx
    6075:	31 d2                	xor    %edx,%edx
    6077:	e9 45 fe ff ff       	jmpq   5ec1 <dlmalloc+0x1151>
    607c:	48 8b 47 10          	mov    0x10(%rdi),%rax
    6080:	48 3b 05 b1 70 00 00 	cmp    0x70b1(%rip),%rax        # d138 <_gm_+0x18>
    6087:	0f 83 ae f8 ff ff    	jae    593b <dlmalloc+0xbcb>
    608d:	e9 1e f4 ff ff       	jmpq   54b0 <dlmalloc+0x740>
    6092:	48 8b 4f 10          	mov    0x10(%rdi),%rcx
    6096:	48 3b 0d 9b 70 00 00 	cmp    0x709b(%rip),%rcx        # d138 <_gm_+0x18>
    609d:	0f 83 bc fb ff ff    	jae    5c5f <dlmalloc+0xeef>
    60a3:	e9 08 f4 ff ff       	jmpq   54b0 <dlmalloc+0x740>
    60a8:	44 09 c8             	or     %r9d,%eax
    60ab:	4d 01 e8             	add    %r13,%r8
    60ae:	49 89 b4 d5 58 02 00 	mov    %rsi,0x258(%r13,%rdx,8)
    60b5:	00 
    60b6:	89 05 68 70 00 00    	mov    %eax,0x7068(%rip)        # d124 <_gm_+0x4>
    60bc:	4c 89 46 30          	mov    %r8,0x30(%rsi)
    60c0:	48 89 76 18          	mov    %rsi,0x18(%rsi)
    60c4:	48 89 76 10          	mov    %rsi,0x10(%rsi)
    60c8:	48 8b 05 61 70 00 00 	mov    0x7061(%rip),%rax        # d130 <_gm_+0x10>
    60cf:	e9 7e f8 ff ff       	jmpq   5952 <dlmalloc+0xbe2>
    60d4:	49 89 46 20          	mov    %rax,0x20(%r14)
    60d8:	e9 1e f3 ff ff       	jmpq   53fb <dlmalloc+0x68b>
    60dd:	48 8b 4b 20          	mov    0x20(%rbx),%rcx
    60e1:	48 85 c9             	test   %rcx,%rcx
    60e4:	0f 84 98 04 00 00    	je     6582 <dlmalloc+0x1812>
    60ea:	48 8d 7b 20          	lea    0x20(%rbx),%rdi
    60ee:	e9 4d fd ff ff       	jmpq   5e40 <dlmalloc+0x10d0>
    60f3:	48 8b 50 10          	mov    0x10(%rax),%rdx
    60f7:	49 39 d3             	cmp    %rdx,%r11
    60fa:	0f 86 18 fd ff ff    	jbe    5e18 <dlmalloc+0x10a8>
    6100:	e9 ab f3 ff ff       	jmpq   54b0 <dlmalloc+0x740>
    6105:	83 f9 1f             	cmp    $0x1f,%ecx
    6108:	49 8b 84 fd 58 02 00 	mov    0x258(%r13,%rdi,8),%rax
    610f:	00 
    6110:	48 89 d7             	mov    %rdx,%rdi
    6113:	74 39                	je     614e <dlmalloc+0x13de>
    6115:	d1 e9                	shr    %ecx
    6117:	bf 39 00 00 00       	mov    $0x39,%edi
    611c:	29 cf                	sub    %ecx,%edi
    611e:	89 f9                	mov    %edi,%ecx
    6120:	48 89 d7             	mov    %rdx,%rdi
    6123:	48 d3 e7             	shl    %cl,%rdi
    6126:	eb 26                	jmp    614e <dlmalloc+0x13de>
    6128:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    612f:	00 
    6130:	48 89 f9             	mov    %rdi,%rcx
    6133:	48 01 ff             	add    %rdi,%rdi
    6136:	48 c1 e9 3f          	shr    $0x3f,%rcx
    613a:	48 83 c1 04          	add    $0x4,%rcx
    613e:	4c 8b 04 c8          	mov    (%rax,%rcx,8),%r8
    6142:	4d 85 c0             	test   %r8,%r8
    6145:	0f 84 6d 02 00 00    	je     63b8 <dlmalloc+0x1648>
    614b:	4c 89 c0             	mov    %r8,%rax
    614e:	48 8b 48 08          	mov    0x8(%rax),%rcx
    6152:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    6156:	48 39 d1             	cmp    %rdx,%rcx
    6159:	75 d5                	jne    6130 <dlmalloc+0x13c0>
    615b:	48 8b 50 10          	mov    0x10(%rax),%rdx
    615f:	49 39 d3             	cmp    %rdx,%r11
    6162:	0f 87 48 f3 ff ff    	ja     54b0 <dlmalloc+0x740>
    6168:	49 39 c3             	cmp    %rax,%r11
    616b:	0f 87 3f f3 ff ff    	ja     54b0 <dlmalloc+0x740>
    6171:	4c 89 52 18          	mov    %r10,0x18(%rdx)
    6175:	4c 89 50 10          	mov    %r10,0x10(%rax)
    6179:	49 89 52 10          	mov    %rdx,0x10(%r10)
    617d:	49 89 42 18          	mov    %rax,0x18(%r10)
    6181:	49 c7 42 30 00 00 00 	movq   $0x0,0x30(%r10)
    6188:	00 
    6189:	e9 de f2 ff ff       	jmpq   546c <dlmalloc+0x6fc>
    618e:	41 b8 58 02 00 00    	mov    $0x258,%r8d
    6194:	b8 01 00 00 00       	mov    $0x1,%eax
    6199:	31 c9                	xor    %ecx,%ecx
    619b:	31 ff                	xor    %edi,%edi
    619d:	e9 7d fe ff ff       	jmpq   601f <dlmalloc+0x12af>
    61a2:	48 8d 44 3d 00       	lea    0x0(%rbp,%rdi,1),%rax
    61a7:	48 89 c2             	mov    %rax,%rdx
    61aa:	48 01 d8             	add    %rbx,%rax
    61ad:	48 83 ca 03          	or     $0x3,%rdx
    61b1:	48 89 53 08          	mov    %rdx,0x8(%rbx)
    61b5:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    61ba:	48 89 08             	mov    %rcx,(%rax)
    61bd:	e9 a9 f4 ff ff       	jmpq   566b <dlmalloc+0x8fb>
    61c2:	48 8b 4b 28          	mov    0x28(%rbx),%rcx
    61c6:	4c 8d 4b 28          	lea    0x28(%rbx),%r9
    61ca:	48 85 c9             	test   %rcx,%rcx
    61cd:	0f 84 96 03 00 00    	je     6569 <dlmalloc+0x17f9>
    61d3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    61d8:	48 89 c8             	mov    %rcx,%rax
    61db:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    61df:	4d 89 ca             	mov    %r9,%r10
    61e2:	4c 8d 48 28          	lea    0x28(%rax),%r9
    61e6:	48 85 c9             	test   %rcx,%rcx
    61e9:	75 ed                	jne    61d8 <dlmalloc+0x1468>
    61eb:	48 8b 48 20          	mov    0x20(%rax),%rcx
    61ef:	4c 8d 48 20          	lea    0x20(%rax),%r9
    61f3:	48 85 c9             	test   %rcx,%rcx
    61f6:	75 e0                	jne    61d8 <dlmalloc+0x1468>
    61f8:	4d 39 d6             	cmp    %r10,%r14
    61fb:	0f 87 af f2 ff ff    	ja     54b0 <dlmalloc+0x740>
    6201:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    6208:	e9 5d f3 ff ff       	jmpq   556a <dlmalloc+0x7fa>
    620d:	48 8d 0c c2          	lea    (%rdx,%rax,8),%rcx
    6211:	48 39 0d 20 6f 00 00 	cmp    %rcx,0x6f20(%rip)        # d138 <_gm_+0x18>
    6218:	0f 87 92 f2 ff ff    	ja     54b0 <dlmalloc+0x740>
    621e:	48 89 34 c2          	mov    %rsi,(%rdx,%rax,8)
    6222:	48 89 56 30          	mov    %rdx,0x30(%rsi)
    6226:	48 89 76 18          	mov    %rsi,0x18(%rsi)
    622a:	48 89 76 10          	mov    %rsi,0x10(%rsi)
    622e:	48 8b 05 fb 6e 00 00 	mov    0x6efb(%rip),%rax        # d130 <_gm_+0x10>
    6235:	e9 18 f7 ff ff       	jmpq   5952 <dlmalloc+0xbe2>
    623a:	41 b8 50 03 00 00    	mov    $0x350,%r8d
    6240:	b8 00 00 00 80       	mov    $0x80000000,%eax
    6245:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    624a:	ba 1f 00 00 00       	mov    $0x1f,%edx
    624f:	e9 6d fc ff ff       	jmpq   5ec1 <dlmalloc+0x1151>
    6254:	48 03 3d d5 6e 00 00 	add    0x6ed5(%rip),%rdi        # d130 <_gm_+0x10>
    625b:	48 89 05 e6 6e 00 00 	mov    %rax,0x6ee6(%rip)        # d148 <_gm_+0x28>
    6262:	48 89 3d c7 6e 00 00 	mov    %rdi,0x6ec7(%rip)        # d130 <_gm_+0x10>
    6269:	48 83 cf 01          	or     $0x1,%rdi
    626d:	48 89 78 08          	mov    %rdi,0x8(%rax)
    6271:	e9 f5 ec ff ff       	jmpq   4f6b <dlmalloc+0x1fb>
    6276:	4c 89 f8             	mov    %r15,%rax
    6279:	48 89 f2             	mov    %rsi,%rdx
    627c:	e9 78 f8 ff ff       	jmpq   5af9 <dlmalloc+0xd89>
    6281:	48 89 fa             	mov    %rdi,%rdx
    6284:	48 c1 ea 08          	shr    $0x8,%rdx
    6288:	85 d2                	test   %edx,%edx
    628a:	0f 84 c5 02 00 00    	je     6555 <dlmalloc+0x17e5>
    6290:	81 fa ff ff 00 00    	cmp    $0xffff,%edx
    6296:	0f 87 e5 03 00 00    	ja     6681 <dlmalloc+0x1911>
    629c:	0f bd d2             	bsr    %edx,%edx
    629f:	b9 26 00 00 00       	mov    $0x26,%ecx
    62a4:	48 89 fe             	mov    %rdi,%rsi
    62a7:	83 f2 1f             	xor    $0x1f,%edx
    62aa:	29 d1                	sub    %edx,%ecx
    62ac:	48 d3 ee             	shr    %cl,%rsi
    62af:	48 89 f1             	mov    %rsi,%rcx
    62b2:	be 1f 00 00 00       	mov    $0x1f,%esi
    62b7:	83 e1 01             	and    $0x1,%ecx
    62ba:	29 d6                	sub    %edx,%esi
    62bc:	ba 01 00 00 00       	mov    $0x1,%edx
    62c1:	8d 34 71             	lea    (%rcx,%rsi,2),%esi
    62c4:	89 f1                	mov    %esi,%ecx
    62c6:	d3 e2                	shl    %cl,%edx
    62c8:	89 f1                	mov    %esi,%ecx
    62ca:	4c 8d 04 cd 58 02 00 	lea    0x258(,%rcx,8),%r8
    62d1:	00 
    62d2:	44 8b 0d 4b 6e 00 00 	mov    0x6e4b(%rip),%r9d        # d124 <_gm_+0x4>
    62d9:	89 70 38             	mov    %esi,0x38(%rax)
    62dc:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
    62e3:	00 
    62e4:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
    62eb:	00 
    62ec:	41 85 d1             	test   %edx,%r9d
    62ef:	0f 84 3b 02 00 00    	je     6530 <dlmalloc+0x17c0>
    62f5:	49 8b 94 cd 58 02 00 	mov    0x258(%r13,%rcx,8),%rdx
    62fc:	00 
    62fd:	31 c9                	xor    %ecx,%ecx
    62ff:	83 fe 1f             	cmp    $0x1f,%esi
    6302:	74 09                	je     630d <dlmalloc+0x159d>
    6304:	d1 ee                	shr    %esi
    6306:	b9 39 00 00 00       	mov    $0x39,%ecx
    630b:	29 f1                	sub    %esi,%ecx
    630d:	48 89 fe             	mov    %rdi,%rsi
    6310:	48 d3 e6             	shl    %cl,%rsi
    6313:	eb 1e                	jmp    6333 <dlmalloc+0x15c3>
    6315:	48 89 f1             	mov    %rsi,%rcx
    6318:	48 01 f6             	add    %rsi,%rsi
    631b:	48 c1 e9 3f          	shr    $0x3f,%rcx
    631f:	48 83 c1 04          	add    $0x4,%rcx
    6323:	4c 8b 04 ca          	mov    (%rdx,%rcx,8),%r8
    6327:	4d 85 c0             	test   %r8,%r8
    632a:	0f 84 2b 03 00 00    	je     665b <dlmalloc+0x18eb>
    6330:	4c 89 c2             	mov    %r8,%rdx
    6333:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    6337:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    633b:	48 39 cf             	cmp    %rcx,%rdi
    633e:	75 d5                	jne    6315 <dlmalloc+0x15a5>
    6340:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    6344:	48 8b 35 ed 6d 00 00 	mov    0x6ded(%rip),%rsi        # d138 <_gm_+0x18>
    634b:	48 39 f1             	cmp    %rsi,%rcx
    634e:	0f 82 5c f1 ff ff    	jb     54b0 <dlmalloc+0x740>
    6354:	48 39 f2             	cmp    %rsi,%rdx
    6357:	0f 82 53 f1 ff ff    	jb     54b0 <dlmalloc+0x740>
    635d:	48 89 41 18          	mov    %rax,0x18(%rcx)
    6361:	48 89 42 10          	mov    %rax,0x10(%rdx)
    6365:	48 89 48 10          	mov    %rcx,0x10(%rax)
    6369:	48 89 50 18          	mov    %rdx,0x18(%rax)
    636d:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
    6374:	00 
    6375:	e9 f1 eb ff ff       	jmpq   4f6b <dlmalloc+0x1fb>
    637a:	48 85 c0             	test   %rax,%rax
    637d:	4b 89 44 cd 08       	mov    %rax,0x8(%r13,%r9,8)
    6382:	0f 85 19 f2 ff ff    	jne    55a1 <dlmalloc+0x831>
    6388:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    638d:	d3 c0                	rol    %cl,%eax
    638f:	41 21 c0             	and    %eax,%r8d
    6392:	44 89 05 8b 6d 00 00 	mov    %r8d,0x6d8b(%rip)        # d124 <_gm_+0x4>
    6399:	e9 44 f2 ff ff       	jmpq   55e2 <dlmalloc+0x872>
    639e:	41 b8 50 03 00 00    	mov    $0x350,%r8d
    63a4:	b8 00 00 00 80       	mov    $0x80000000,%eax
    63a9:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    63ae:	bf 1f 00 00 00       	mov    $0x1f,%edi
    63b3:	e9 67 fc ff ff       	jmpq   601f <dlmalloc+0x12af>
    63b8:	48 8d 14 c8          	lea    (%rax,%rcx,8),%rdx
    63bc:	49 39 d3             	cmp    %rdx,%r11
    63bf:	0f 87 eb f0 ff ff    	ja     54b0 <dlmalloc+0x740>
    63c5:	4c 89 14 c8          	mov    %r10,(%rax,%rcx,8)
    63c9:	49 89 42 30          	mov    %rax,0x30(%r10)
    63cd:	4d 89 52 18          	mov    %r10,0x18(%r10)
    63d1:	4d 89 52 10          	mov    %r10,0x10(%r10)
    63d5:	e9 92 f0 ff ff       	jmpq   546c <dlmalloc+0x6fc>
    63da:	48 03 3d 47 6d 00 00 	add    0x6d47(%rip),%rdi        # d128 <_gm_+0x8>
    63e1:	48 89 05 58 6d 00 00 	mov    %rax,0x6d58(%rip)        # d140 <_gm_+0x20>
    63e8:	48 89 fa             	mov    %rdi,%rdx
    63eb:	48 89 3d 36 6d 00 00 	mov    %rdi,0x6d36(%rip)        # d128 <_gm_+0x8>
    63f2:	48 83 ca 01          	or     $0x1,%rdx
    63f6:	48 89 50 08          	mov    %rdx,0x8(%rax)
    63fa:	48 89 3c 38          	mov    %rdi,(%rax,%rdi,1)
    63fe:	e9 68 eb ff ff       	jmpq   4f6b <dlmalloc+0x1fb>
    6403:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    6407:	48 8b 72 18          	mov    0x18(%rdx),%rsi
    640b:	49 89 c8             	mov    %rcx,%r8
    640e:	48 c1 e9 03          	shr    $0x3,%rcx
    6412:	48 83 f9 1f          	cmp    $0x1f,%rcx
    6416:	77 48                	ja     6460 <dlmalloc+0x16f0>
    6418:	44 8d 14 09          	lea    (%rcx,%rcx,1),%r10d
    641c:	4c 8b 4a 10          	mov    0x10(%rdx),%r9
    6420:	4f 8d 54 d5 48       	lea    0x48(%r13,%r10,8),%r10
    6425:	4d 39 d1             	cmp    %r10,%r9
    6428:	0f 85 66 f0 ff ff    	jne    5494 <dlmalloc+0x724>
    642e:	49 39 f1             	cmp    %rsi,%r9
    6431:	0f 84 3d 03 00 00    	je     6774 <dlmalloc+0x1a04>
    6437:	49 39 f2             	cmp    %rsi,%r10
    643a:	0f 85 18 03 00 00    	jne    6758 <dlmalloc+0x19e8>
    6440:	49 89 71 18          	mov    %rsi,0x18(%r9)
    6444:	4c 89 4e 10          	mov    %r9,0x10(%rsi)
    6448:	4c 01 c2             	add    %r8,%rdx
    644b:	4c 01 c7             	add    %r8,%rdi
    644e:	48 8b 4a 08          	mov    0x8(%rdx),%rcx
    6452:	e9 f1 f5 ff ff       	jmpq   5a48 <dlmalloc+0xcd8>
    6457:	49 89 47 20          	mov    %rax,0x20(%r15)
    645b:	e9 3c f1 ff ff       	jmpq   559c <dlmalloc+0x82c>
    6460:	48 39 d6             	cmp    %rdx,%rsi
    6463:	4c 8b 4a 30          	mov    0x30(%rdx),%r9
    6467:	0f 84 90 02 00 00    	je     66fd <dlmalloc+0x198d>
    646d:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    6471:	48 3b 0d c0 6c 00 00 	cmp    0x6cc0(%rip),%rcx        # d138 <_gm_+0x18>
    6478:	0f 82 32 f0 ff ff    	jb     54b0 <dlmalloc+0x740>
    647e:	48 39 51 18          	cmp    %rdx,0x18(%rcx)
    6482:	0f 85 28 f0 ff ff    	jne    54b0 <dlmalloc+0x740>
    6488:	48 3b 56 10          	cmp    0x10(%rsi),%rdx
    648c:	0f 85 1e f0 ff ff    	jne    54b0 <dlmalloc+0x740>
    6492:	48 89 71 18          	mov    %rsi,0x18(%rcx)
    6496:	48 89 4e 10          	mov    %rcx,0x10(%rsi)
    649a:	4d 85 c9             	test   %r9,%r9
    649d:	74 a9                	je     6448 <dlmalloc+0x16d8>
    649f:	44 8b 52 38          	mov    0x38(%rdx),%r10d
    64a3:	4c 89 d1             	mov    %r10,%rcx
    64a6:	49 83 c2 4a          	add    $0x4a,%r10
    64aa:	4b 39 54 d5 08       	cmp    %rdx,0x8(%r13,%r10,8)
    64af:	0f 84 28 02 00 00    	je     66dd <dlmalloc+0x196d>
    64b5:	4c 3b 0d 7c 6c 00 00 	cmp    0x6c7c(%rip),%r9        # d138 <_gm_+0x18>
    64bc:	0f 82 ee ef ff ff    	jb     54b0 <dlmalloc+0x740>
    64c2:	49 39 51 20          	cmp    %rdx,0x20(%r9)
    64c6:	0f 84 08 02 00 00    	je     66d4 <dlmalloc+0x1964>
    64cc:	49 89 71 28          	mov    %rsi,0x28(%r9)
    64d0:	48 85 f6             	test   %rsi,%rsi
    64d3:	0f 84 6f ff ff ff    	je     6448 <dlmalloc+0x16d8>
    64d9:	4c 8b 15 58 6c 00 00 	mov    0x6c58(%rip),%r10        # d138 <_gm_+0x18>
    64e0:	4c 39 d6             	cmp    %r10,%rsi
    64e3:	0f 82 c7 ef ff ff    	jb     54b0 <dlmalloc+0x740>
    64e9:	48 8b 4a 20          	mov    0x20(%rdx),%rcx
    64ed:	4c 89 4e 30          	mov    %r9,0x30(%rsi)
    64f1:	48 85 c9             	test   %rcx,%rcx
    64f4:	74 11                	je     6507 <dlmalloc+0x1797>
    64f6:	49 39 ca             	cmp    %rcx,%r10
    64f9:	0f 87 b1 ef ff ff    	ja     54b0 <dlmalloc+0x740>
    64ff:	48 89 4e 20          	mov    %rcx,0x20(%rsi)
    6503:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    6507:	48 8b 4a 28          	mov    0x28(%rdx),%rcx
    650b:	48 85 c9             	test   %rcx,%rcx
    650e:	0f 84 34 ff ff ff    	je     6448 <dlmalloc+0x16d8>
    6514:	49 39 ca             	cmp    %rcx,%r10
    6517:	0f 87 93 ef ff ff    	ja     54b0 <dlmalloc+0x740>
    651d:	48 89 4e 28          	mov    %rcx,0x28(%rsi)
    6521:	48 89 71 30          	mov    %rsi,0x30(%rcx)
    6525:	e9 1e ff ff ff       	jmpq   6448 <dlmalloc+0x16d8>
    652a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6530:	44 09 ca             	or     %r9d,%edx
    6533:	4d 01 e8             	add    %r13,%r8
    6536:	49 89 84 cd 58 02 00 	mov    %rax,0x258(%r13,%rcx,8)
    653d:	00 
    653e:	89 15 e0 6b 00 00    	mov    %edx,0x6be0(%rip)        # d124 <_gm_+0x4>
    6544:	4c 89 40 30          	mov    %r8,0x30(%rax)
    6548:	48 89 40 18          	mov    %rax,0x18(%rax)
    654c:	48 89 40 10          	mov    %rax,0x10(%rax)
    6550:	e9 16 ea ff ff       	jmpq   4f6b <dlmalloc+0x1fb>
    6555:	41 b8 58 02 00 00    	mov    $0x258,%r8d
    655b:	ba 01 00 00 00       	mov    $0x1,%edx
    6560:	31 f6                	xor    %esi,%esi
    6562:	31 c9                	xor    %ecx,%ecx
    6564:	e9 69 fd ff ff       	jmpq   62d2 <dlmalloc+0x1562>
    6569:	48 8b 43 20          	mov    0x20(%rbx),%rax
    656d:	48 85 c0             	test   %rax,%rax
    6570:	0f 84 b8 00 00 00    	je     662e <dlmalloc+0x18be>
    6576:	4c 8d 4b 20          	lea    0x20(%rbx),%r9
    657a:	48 89 c1             	mov    %rax,%rcx
    657d:	e9 56 fc ff ff       	jmpq   61d8 <dlmalloc+0x1468>
    6582:	4d 85 f6             	test   %r14,%r14
    6585:	0f 84 b2 ee ff ff    	je     543d <dlmalloc+0x6cd>
    658b:	8b 7b 38             	mov    0x38(%rbx),%edi
    658e:	31 c0                	xor    %eax,%eax
    6590:	48 89 f9             	mov    %rdi,%rcx
    6593:	48 83 c7 4a          	add    $0x4a,%rdi
    6597:	49 39 5c fd 08       	cmp    %rbx,0x8(%r13,%rdi,8)
    659c:	0f 85 42 ee ff ff    	jne    53e4 <dlmalloc+0x674>
    65a2:	49 c7 44 fd 08 00 00 	movq   $0x0,0x8(%r13,%rdi,8)
    65a9:	00 00 
    65ab:	e9 0a fa ff ff       	jmpq   5fba <dlmalloc+0x124a>
    65b0:	49 8b 50 10          	mov    0x10(%r8),%rdx
    65b4:	49 39 d6             	cmp    %rdx,%r14
    65b7:	0f 86 90 f0 ff ff    	jbe    564d <dlmalloc+0x8dd>
    65bd:	e9 ee ee ff ff       	jmpq   54b0 <dlmalloc+0x740>
    65c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    65c8:	4c 89 ff             	mov    %r15,%rdi
    65cb:	48 89 0c 24          	mov    %rcx,(%rsp)
    65cf:	e8 9c 17 00 00       	callq  7d70 <sbrk>
    65d4:	4c 39 f0             	cmp    %r14,%rax
    65d7:	48 89 c3             	mov    %rax,%rbx
    65da:	48 8b 0c 24          	mov    (%rsp),%rcx
    65de:	0f 85 ca f5 ff ff    	jne    5bae <dlmalloc+0xe3e>
    65e4:	4c 89 f3             	mov    %r14,%rbx
    65e7:	e9 03 f6 ff ff       	jmpq   5bef <dlmalloc+0xe7f>
    65ec:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    65f0:	48 3b 0d 41 6b 00 00 	cmp    0x6b41(%rip),%rcx        # d138 <_gm_+0x18>
    65f7:	0f 83 9b f4 ff ff    	jae    5a98 <dlmalloc+0xd28>
    65fd:	e9 ae ee ff ff       	jmpq   54b0 <dlmalloc+0x740>
    6602:	48 89 d7             	mov    %rdx,%rdi
    6605:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    660a:	48 89 14 24          	mov    %rdx,(%rsp)
    660e:	e8 5d 17 00 00       	callq  7d70 <sbrk>
    6613:	48 83 c0 01          	add    $0x1,%rax
    6617:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    661c:	0f 84 93 00 00 00    	je     66b5 <dlmalloc+0x1945>
    6622:	48 8b 14 24          	mov    (%rsp),%rdx
    6626:	49 01 d7             	add    %rdx,%r15
    6629:	e9 c1 f5 ff ff       	jmpq   5bef <dlmalloc+0xe7f>
    662e:	4d 85 ff             	test   %r15,%r15
    6631:	0f 84 ab ef ff ff    	je     55e2 <dlmalloc+0x872>
    6637:	44 8b 4b 38          	mov    0x38(%rbx),%r9d
    663b:	4c 89 c9             	mov    %r9,%rcx
    663e:	49 83 c1 4a          	add    $0x4a,%r9
    6642:	4b 3b 5c cd 08       	cmp    0x8(%r13,%r9,8),%rbx
    6647:	0f 85 38 ef ff ff    	jne    5585 <dlmalloc+0x815>
    664d:	4b c7 44 cd 08 00 00 	movq   $0x0,0x8(%r13,%r9,8)
    6654:	00 00 
    6656:	e9 2d fd ff ff       	jmpq   6388 <dlmalloc+0x1618>
    665b:	48 8d 34 ca          	lea    (%rdx,%rcx,8),%rsi
    665f:	48 39 35 d2 6a 00 00 	cmp    %rsi,0x6ad2(%rip)        # d138 <_gm_+0x18>
    6666:	0f 87 44 ee ff ff    	ja     54b0 <dlmalloc+0x740>
    666c:	48 89 04 ca          	mov    %rax,(%rdx,%rcx,8)
    6670:	48 89 50 30          	mov    %rdx,0x30(%rax)
    6674:	48 89 40 18          	mov    %rax,0x18(%rax)
    6678:	48 89 40 10          	mov    %rax,0x10(%rax)
    667c:	e9 ea e8 ff ff       	jmpq   4f6b <dlmalloc+0x1fb>
    6681:	41 b8 50 03 00 00    	mov    $0x350,%r8d
    6687:	ba 00 00 00 80       	mov    $0x80000000,%edx
    668c:	be 1f 00 00 00       	mov    $0x1f,%esi
    6691:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    6696:	e9 37 fc ff ff       	jmpq   62d2 <dlmalloc+0x1562>
    669b:	48 89 fe             	mov    %rdi,%rsi
    669e:	48 83 ce 03          	or     $0x3,%rsi
    66a2:	e9 2f e8 ff ff       	jmpq   4ed6 <dlmalloc+0x166>
    66a7:	48 85 d2             	test   %rdx,%rdx
    66aa:	0f 85 65 ea ff ff    	jne    5115 <dlmalloc+0x3a5>
    66b0:	e9 5b ea ff ff       	jmpq   5110 <dlmalloc+0x3a0>
    66b5:	4c 89 f7             	mov    %r14,%rdi
    66b8:	48 89 0c 24          	mov    %rcx,(%rsp)
    66bc:	e8 af 16 00 00       	callq  7d70 <sbrk>
    66c1:	c7 05 45 6e 00 00 00 	movl   $0x0,0x6e45(%rip)        # d510 <malloc_global_mutex>
    66c8:	00 00 00 
    66cb:	48 8b 0c 24          	mov    (%rsp),%rcx
    66cf:	e9 5e eb ff ff       	jmpq   5232 <dlmalloc+0x4c2>
    66d4:	49 89 71 20          	mov    %rsi,0x20(%r9)
    66d8:	e9 f3 fd ff ff       	jmpq   64d0 <dlmalloc+0x1760>
    66dd:	48 85 f6             	test   %rsi,%rsi
    66e0:	4b 89 74 d5 08       	mov    %rsi,0x8(%r13,%r10,8)
    66e5:	0f 85 ee fd ff ff    	jne    64d9 <dlmalloc+0x1769>
    66eb:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    66f0:	d3 c6                	rol    %cl,%esi
    66f2:	21 35 2c 6a 00 00    	and    %esi,0x6a2c(%rip)        # d124 <_gm_+0x4>
    66f8:	e9 4b fd ff ff       	jmpq   6448 <dlmalloc+0x16d8>
    66fd:	48 8b 72 28          	mov    0x28(%rdx),%rsi
    6701:	4c 8d 5a 28          	lea    0x28(%rdx),%r11
    6705:	48 85 f6             	test   %rsi,%rsi
    6708:	74 3c                	je     6746 <dlmalloc+0x19d6>
    670a:	49 89 f2             	mov    %rsi,%r10
    670d:	4c 89 d6             	mov    %r10,%rsi
    6710:	4d 8b 52 28          	mov    0x28(%r10),%r10
    6714:	4c 89 d9             	mov    %r11,%rcx
    6717:	4c 8d 5e 28          	lea    0x28(%rsi),%r11
    671b:	4d 85 d2             	test   %r10,%r10
    671e:	75 ed                	jne    670d <dlmalloc+0x199d>
    6720:	4c 8b 56 20          	mov    0x20(%rsi),%r10
    6724:	4c 8d 5e 20          	lea    0x20(%rsi),%r11
    6728:	4d 85 d2             	test   %r10,%r10
    672b:	75 e0                	jne    670d <dlmalloc+0x199d>
    672d:	48 39 0d 04 6a 00 00 	cmp    %rcx,0x6a04(%rip)        # d138 <_gm_+0x18>
    6734:	0f 87 76 ed ff ff    	ja     54b0 <dlmalloc+0x740>
    673a:	48 c7 01 00 00 00 00 	movq   $0x0,(%rcx)
    6741:	e9 54 fd ff ff       	jmpq   649a <dlmalloc+0x172a>
    6746:	48 8b 72 20          	mov    0x20(%rdx),%rsi
    674a:	4c 8d 5a 20          	lea    0x20(%rdx),%r11
    674e:	48 85 f6             	test   %rsi,%rsi
    6751:	75 b7                	jne    670a <dlmalloc+0x199a>
    6753:	e9 42 fd ff ff       	jmpq   649a <dlmalloc+0x172a>
    6758:	48 3b 35 d9 69 00 00 	cmp    0x69d9(%rip),%rsi        # d138 <_gm_+0x18>
    675f:	0f 82 4b ed ff ff    	jb     54b0 <dlmalloc+0x740>
    6765:	48 39 56 10          	cmp    %rdx,0x10(%rsi)
    6769:	0f 84 d1 fc ff ff    	je     6440 <dlmalloc+0x16d0>
    676f:	e9 3c ed ff ff       	jmpq   54b0 <dlmalloc+0x740>
    6774:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    6779:	d3 c6                	rol    %cl,%esi
    677b:	21 35 9f 69 00 00    	and    %esi,0x699f(%rip)        # d120 <_gm_>
    6781:	e9 c2 fc ff ff       	jmpq   6448 <dlmalloc+0x16d8>
    6786:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    678d:	00 00 00 

0000000000006790 <dlfree>:
    6790:	48 85 ff             	test   %rdi,%rdi
    6793:	0f 84 37 02 00 00    	je     69d0 <dlfree+0x240>
    6799:	41 55                	push   %r13
    679b:	41 54                	push   %r12
    679d:	48 8d 57 f0          	lea    -0x10(%rdi),%rdx
    67a1:	55                   	push   %rbp
    67a2:	53                   	push   %rbx
    67a3:	48 83 ec 08          	sub    $0x8,%rsp
    67a7:	48 8b 47 f8          	mov    -0x8(%rdi),%rax
    67ab:	48 8b 0d 2e 6d 00 00 	mov    0x6d2e(%rip),%rcx        # d4e0 <mparams>
    67b2:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    67b6:	48 8b 5c 07 f0       	mov    -0x10(%rdi,%rax,1),%rbx
    67bb:	48 31 cb             	xor    %rcx,%rbx
    67be:	48 3b 4b 40          	cmp    0x40(%rbx),%rcx
    67c2:	0f 85 d4 03 00 00    	jne    6b9c <dlfree+0x40c>
    67c8:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    67cf:	0f 85 c3 01 00 00    	jne    6998 <dlfree+0x208>
    67d5:	4c 8b 43 18          	mov    0x18(%rbx),%r8
    67d9:	49 39 d0             	cmp    %rdx,%r8
    67dc:	0f 87 f6 01 00 00    	ja     69d8 <dlfree+0x248>
    67e2:	48 8b 4f f8          	mov    -0x8(%rdi),%rcx
    67e6:	49 89 c9             	mov    %rcx,%r9
    67e9:	41 83 e1 03          	and    $0x3,%r9d
    67ed:	49 83 f9 01          	cmp    $0x1,%r9
    67f1:	0f 84 e1 01 00 00    	je     69d8 <dlfree+0x248>
    67f7:	48 89 c8             	mov    %rcx,%rax
    67fa:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    67fe:	83 e1 01             	and    $0x1,%ecx
    6801:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
    6805:	0f 84 95 00 00 00    	je     68a0 <dlfree+0x110>
    680b:	48 39 f2             	cmp    %rsi,%rdx
    680e:	0f 83 c4 01 00 00    	jae    69d8 <dlfree+0x248>
    6814:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    6818:	f6 c1 01             	test   $0x1,%cl
    681b:	0f 84 b7 01 00 00    	je     69d8 <dlfree+0x248>
    6821:	f6 c1 02             	test   $0x2,%cl
    6824:	0f 84 b6 01 00 00    	je     69e0 <dlfree+0x250>
    682a:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    682e:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    6832:	48 89 c1             	mov    %rax,%rcx
    6835:	48 83 c9 01          	or     $0x1,%rcx
    6839:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    683d:	48 89 04 02          	mov    %rax,(%rdx,%rax,1)
    6841:	48 89 c1             	mov    %rax,%rcx
    6844:	48 c1 e9 03          	shr    $0x3,%rcx
    6848:	48 83 f9 1f          	cmp    $0x1f,%rcx
    684c:	0f 87 96 02 00 00    	ja     6ae8 <dlfree+0x358>
    6852:	8d 04 09             	lea    (%rcx,%rcx,1),%eax
    6855:	8b 3b                	mov    (%rbx),%edi
    6857:	48 8d 74 c3 48       	lea    0x48(%rbx,%rax,8),%rsi
    685c:	b8 01 00 00 00       	mov    $0x1,%eax
    6861:	d3 e0                	shl    %cl,%eax
    6863:	85 c7                	test   %eax,%edi
    6865:	0f 85 23 03 00 00    	jne    6b8e <dlfree+0x3fe>
    686b:	09 f8                	or     %edi,%eax
    686d:	89 03                	mov    %eax,(%rbx)
    686f:	48 89 f0             	mov    %rsi,%rax
    6872:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    6876:	48 89 50 18          	mov    %rdx,0x18(%rax)
    687a:	48 89 42 10          	mov    %rax,0x10(%rdx)
    687e:	48 89 72 18          	mov    %rsi,0x18(%rdx)
    6882:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    6889:	74 0a                	je     6895 <dlfree+0x105>
    688b:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    6892:	00 00 00 
    6895:	48 83 c4 08          	add    $0x8,%rsp
    6899:	5b                   	pop    %rbx
    689a:	5d                   	pop    %rbp
    689b:	41 5c                	pop    %r12
    689d:	41 5d                	pop    %r13
    689f:	c3                   	retq   
    68a0:	4d 85 c9             	test   %r9,%r9
    68a3:	74 dd                	je     6882 <dlfree+0xf2>
    68a5:	48 8b 4f f0          	mov    -0x10(%rdi),%rcx
    68a9:	48 29 ca             	sub    %rcx,%rdx
    68ac:	48 01 c8             	add    %rcx,%rax
    68af:	49 39 d0             	cmp    %rdx,%r8
    68b2:	0f 87 20 01 00 00    	ja     69d8 <dlfree+0x248>
    68b8:	48 39 53 20          	cmp    %rdx,0x20(%rbx)
    68bc:	0f 84 30 05 00 00    	je     6df2 <dlfree+0x662>
    68c2:	48 c1 e9 03          	shr    $0x3,%rcx
    68c6:	48 8b 7a 18          	mov    0x18(%rdx),%rdi
    68ca:	48 83 f9 1f          	cmp    $0x1f,%rcx
    68ce:	0f 86 4a 03 00 00    	jbe    6c1e <dlfree+0x48e>
    68d4:	48 39 d7             	cmp    %rdx,%rdi
    68d7:	4c 8b 5a 30          	mov    0x30(%rdx),%r11
    68db:	0f 84 9c 05 00 00    	je     6e7d <dlfree+0x6ed>
    68e1:	48 8b 4a 10          	mov    0x10(%rdx),%rcx
    68e5:	49 39 c8             	cmp    %rcx,%r8
    68e8:	0f 87 ae 02 00 00    	ja     6b9c <dlfree+0x40c>
    68ee:	48 39 51 18          	cmp    %rdx,0x18(%rcx)
    68f2:	0f 85 a4 02 00 00    	jne    6b9c <dlfree+0x40c>
    68f8:	48 39 57 10          	cmp    %rdx,0x10(%rdi)
    68fc:	0f 85 9a 02 00 00    	jne    6b9c <dlfree+0x40c>
    6902:	48 89 79 18          	mov    %rdi,0x18(%rcx)
    6906:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    690a:	4d 85 db             	test   %r11,%r11
    690d:	0f 84 f8 fe ff ff    	je     680b <dlfree+0x7b>
    6913:	44 8b 4a 38          	mov    0x38(%rdx),%r9d
    6917:	4c 89 c9             	mov    %r9,%rcx
    691a:	4e 8d 0c cb          	lea    (%rbx,%r9,8),%r9
    691e:	49 39 91 58 02 00 00 	cmp    %rdx,0x258(%r9)
    6925:	0f 84 02 06 00 00    	je     6f2d <dlfree+0x79d>
    692b:	4d 39 d8             	cmp    %r11,%r8
    692e:	0f 87 68 02 00 00    	ja     6b9c <dlfree+0x40c>
    6934:	49 39 53 20          	cmp    %rdx,0x20(%r11)
    6938:	0f 84 2d 06 00 00    	je     6f6b <dlfree+0x7db>
    693e:	49 89 7b 28          	mov    %rdi,0x28(%r11)
    6942:	48 85 ff             	test   %rdi,%rdi
    6945:	0f 84 c0 fe ff ff    	je     680b <dlfree+0x7b>
    694b:	49 39 f8             	cmp    %rdi,%r8
    694e:	0f 87 48 02 00 00    	ja     6b9c <dlfree+0x40c>
    6954:	48 8b 4a 20          	mov    0x20(%rdx),%rcx
    6958:	4c 89 5f 30          	mov    %r11,0x30(%rdi)
    695c:	48 85 c9             	test   %rcx,%rcx
    695f:	74 11                	je     6972 <dlfree+0x1e2>
    6961:	49 39 c8             	cmp    %rcx,%r8
    6964:	0f 87 32 02 00 00    	ja     6b9c <dlfree+0x40c>
    696a:	48 89 4f 20          	mov    %rcx,0x20(%rdi)
    696e:	48 89 79 30          	mov    %rdi,0x30(%rcx)
    6972:	48 8b 4a 28          	mov    0x28(%rdx),%rcx
    6976:	48 85 c9             	test   %rcx,%rcx
    6979:	0f 84 8c fe ff ff    	je     680b <dlfree+0x7b>
    697f:	49 39 c8             	cmp    %rcx,%r8
    6982:	0f 87 14 02 00 00    	ja     6b9c <dlfree+0x40c>
    6988:	48 89 4f 28          	mov    %rcx,0x28(%rdi)
    698c:	48 89 79 30          	mov    %rdi,0x30(%rcx)
    6990:	e9 76 fe ff ff       	jmpq   680b <dlfree+0x7b>
    6995:	0f 1f 00             	nopl   (%rax)
    6998:	48 8d 8b 74 03 00 00 	lea    0x374(%rbx),%rcx
    699f:	b8 01 00 00 00       	mov    $0x1,%eax
    69a4:	87 01                	xchg   %eax,(%rcx)
    69a6:	85 c0                	test   %eax,%eax
    69a8:	0f 84 27 fe ff ff    	je     67d5 <dlfree+0x45>
    69ae:	be 01 00 00 00       	mov    $0x1,%esi
    69b3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    69b8:	8b 83 74 03 00 00    	mov    0x374(%rbx),%eax
    69be:	85 c0                	test   %eax,%eax
    69c0:	75 f6                	jne    69b8 <dlfree+0x228>
    69c2:	89 f0                	mov    %esi,%eax
    69c4:	87 01                	xchg   %eax,(%rcx)
    69c6:	85 c0                	test   %eax,%eax
    69c8:	75 ee                	jne    69b8 <dlfree+0x228>
    69ca:	e9 06 fe ff ff       	jmpq   67d5 <dlfree+0x45>
    69cf:	90                   	nop
    69d0:	f3 c3                	repz retq 
    69d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    69d8:	e8 f3 24 00 00       	callq  8ed0 <abort>
    69dd:	0f 1f 00             	nopl   (%rax)
    69e0:	48 39 73 28          	cmp    %rsi,0x28(%rbx)
    69e4:	4c 8b 53 20          	mov    0x20(%rbx),%r10
    69e8:	0f 84 d5 02 00 00    	je     6cc3 <dlfree+0x533>
    69ee:	49 39 f2             	cmp    %rsi,%r10
    69f1:	0f 84 2e 04 00 00    	je     6e25 <dlfree+0x695>
    69f7:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    69fb:	48 8b 7e 18          	mov    0x18(%rsi),%rdi
    69ff:	48 01 c8             	add    %rcx,%rax
    6a02:	48 c1 e9 03          	shr    $0x3,%rcx
    6a06:	48 83 f9 1f          	cmp    $0x1f,%rcx
    6a0a:	0f 86 43 02 00 00    	jbe    6c53 <dlfree+0x4c3>
    6a10:	48 39 f7             	cmp    %rsi,%rdi
    6a13:	48 8b 6e 30          	mov    0x30(%rsi),%rbp
    6a17:	0f 84 c4 04 00 00    	je     6ee1 <dlfree+0x751>
    6a1d:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    6a21:	49 39 c8             	cmp    %rcx,%r8
    6a24:	0f 87 72 01 00 00    	ja     6b9c <dlfree+0x40c>
    6a2a:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    6a2e:	0f 85 68 01 00 00    	jne    6b9c <dlfree+0x40c>
    6a34:	48 39 77 10          	cmp    %rsi,0x10(%rdi)
    6a38:	0f 85 5e 01 00 00    	jne    6b9c <dlfree+0x40c>
    6a3e:	48 89 79 18          	mov    %rdi,0x18(%rcx)
    6a42:	48 89 4f 10          	mov    %rcx,0x10(%rdi)
    6a46:	48 85 ed             	test   %rbp,%rbp
    6a49:	74 75                	je     6ac0 <dlfree+0x330>
    6a4b:	44 8b 4e 38          	mov    0x38(%rsi),%r9d
    6a4f:	4c 89 c9             	mov    %r9,%rcx
    6a52:	4e 8d 0c cb          	lea    (%rbx,%r9,8),%r9
    6a56:	49 39 b1 58 02 00 00 	cmp    %rsi,0x258(%r9)
    6a5d:	0f 84 e9 04 00 00    	je     6f4c <dlfree+0x7bc>
    6a63:	49 39 e8             	cmp    %rbp,%r8
    6a66:	0f 87 30 01 00 00    	ja     6b9c <dlfree+0x40c>
    6a6c:	48 39 75 20          	cmp    %rsi,0x20(%rbp)
    6a70:	0f 84 5a 05 00 00    	je     6fd0 <dlfree+0x840>
    6a76:	48 89 7d 28          	mov    %rdi,0x28(%rbp)
    6a7a:	48 85 ff             	test   %rdi,%rdi
    6a7d:	74 41                	je     6ac0 <dlfree+0x330>
    6a7f:	49 39 f8             	cmp    %rdi,%r8
    6a82:	0f 87 14 01 00 00    	ja     6b9c <dlfree+0x40c>
    6a88:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    6a8c:	48 89 6f 30          	mov    %rbp,0x30(%rdi)
    6a90:	48 85 c9             	test   %rcx,%rcx
    6a93:	74 11                	je     6aa6 <dlfree+0x316>
    6a95:	49 39 c8             	cmp    %rcx,%r8
    6a98:	0f 87 fe 00 00 00    	ja     6b9c <dlfree+0x40c>
    6a9e:	48 89 4f 20          	mov    %rcx,0x20(%rdi)
    6aa2:	48 89 79 30          	mov    %rdi,0x30(%rcx)
    6aa6:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    6aaa:	48 85 c9             	test   %rcx,%rcx
    6aad:	74 11                	je     6ac0 <dlfree+0x330>
    6aaf:	49 39 c8             	cmp    %rcx,%r8
    6ab2:	0f 87 e4 00 00 00    	ja     6b9c <dlfree+0x40c>
    6ab8:	48 89 4f 28          	mov    %rcx,0x28(%rdi)
    6abc:	48 89 79 30          	mov    %rdi,0x30(%rcx)
    6ac0:	48 89 c1             	mov    %rax,%rcx
    6ac3:	48 83 c9 01          	or     $0x1,%rcx
    6ac7:	4c 39 d2             	cmp    %r10,%rdx
    6aca:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    6ace:	48 89 04 02          	mov    %rax,(%rdx,%rax,1)
    6ad2:	0f 85 69 fd ff ff    	jne    6841 <dlfree+0xb1>
    6ad8:	48 89 43 08          	mov    %rax,0x8(%rbx)
    6adc:	e9 a1 fd ff ff       	jmpq   6882 <dlfree+0xf2>
    6ae1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6ae8:	48 89 c1             	mov    %rax,%rcx
    6aeb:	48 c1 e9 08          	shr    $0x8,%rcx
    6aef:	85 c9                	test   %ecx,%ecx
    6af1:	74 24                	je     6b17 <dlfree+0x387>
    6af3:	81 f9 ff ff 00 00    	cmp    $0xffff,%ecx
    6af9:	0f 86 89 01 00 00    	jbe    6c88 <dlfree+0x4f8>
    6aff:	be 00 00 00 80       	mov    $0x80000000,%esi
    6b04:	41 b9 50 03 00 00    	mov    $0x350,%r9d
    6b0a:	b9 1f 00 00 00       	mov    $0x1f,%ecx
    6b0f:	41 ba 1f 00 00 00    	mov    $0x1f,%r10d
    6b15:	eb 10                	jmp    6b27 <dlfree+0x397>
    6b17:	be 01 00 00 00       	mov    $0x1,%esi
    6b1c:	41 b9 58 02 00 00    	mov    $0x258,%r9d
    6b22:	31 c9                	xor    %ecx,%ecx
    6b24:	45 31 d2             	xor    %r10d,%r10d
    6b27:	8b 7b 04             	mov    0x4(%rbx),%edi
    6b2a:	89 4a 38             	mov    %ecx,0x38(%rdx)
    6b2d:	48 c7 42 28 00 00 00 	movq   $0x0,0x28(%rdx)
    6b34:	00 
    6b35:	48 c7 42 20 00 00 00 	movq   $0x0,0x20(%rdx)
    6b3c:	00 
    6b3d:	85 fe                	test   %edi,%esi
    6b3f:	75 60                	jne    6ba1 <dlfree+0x411>
    6b41:	09 fe                	or     %edi,%esi
    6b43:	49 01 d9             	add    %rbx,%r9
    6b46:	89 73 04             	mov    %esi,0x4(%rbx)
    6b49:	4a 89 94 d3 58 02 00 	mov    %rdx,0x258(%rbx,%r10,8)
    6b50:	00 
    6b51:	4c 89 4a 30          	mov    %r9,0x30(%rdx)
    6b55:	48 89 52 18          	mov    %rdx,0x18(%rdx)
    6b59:	48 89 52 10          	mov    %rdx,0x10(%rdx)
    6b5d:	48 83 6b 38 01       	subq   $0x1,0x38(%rbx)
    6b62:	0f 85 1a fd ff ff    	jne    6882 <dlfree+0xf2>
    6b68:	48 8b 83 88 03 00 00 	mov    0x388(%rbx),%rax
    6b6f:	48 85 c0             	test   %rax,%rax
    6b72:	74 0d                	je     6b81 <dlfree+0x3f1>
    6b74:	0f 1f 40 00          	nopl   0x0(%rax)
    6b78:	48 8b 40 10          	mov    0x10(%rax),%rax
    6b7c:	48 85 c0             	test   %rax,%rax
    6b7f:	75 f7                	jne    6b78 <dlfree+0x3e8>
    6b81:	48 c7 43 38 ff ff ff 	movq   $0xffffffffffffffff,0x38(%rbx)
    6b88:	ff 
    6b89:	e9 f4 fc ff ff       	jmpq   6882 <dlfree+0xf2>
    6b8e:	48 8b 46 10          	mov    0x10(%rsi),%rax
    6b92:	48 3b 43 18          	cmp    0x18(%rbx),%rax
    6b96:	0f 83 d6 fc ff ff    	jae    6872 <dlfree+0xe2>
    6b9c:	e8 2f 23 00 00       	callq  8ed0 <abort>
    6ba1:	83 f9 1f             	cmp    $0x1f,%ecx
    6ba4:	4a 8b b4 d3 58 02 00 	mov    0x258(%rbx,%r10,8),%rsi
    6bab:	00 
    6bac:	48 89 c7             	mov    %rax,%rdi
    6baf:	74 35                	je     6be6 <dlfree+0x456>
    6bb1:	d1 e9                	shr    %ecx
    6bb3:	bf 39 00 00 00       	mov    $0x39,%edi
    6bb8:	29 cf                	sub    %ecx,%edi
    6bba:	89 f9                	mov    %edi,%ecx
    6bbc:	48 89 c7             	mov    %rax,%rdi
    6bbf:	48 d3 e7             	shl    %cl,%rdi
    6bc2:	eb 22                	jmp    6be6 <dlfree+0x456>
    6bc4:	0f 1f 40 00          	nopl   0x0(%rax)
    6bc8:	48 89 f9             	mov    %rdi,%rcx
    6bcb:	48 01 ff             	add    %rdi,%rdi
    6bce:	48 c1 e9 3f          	shr    $0x3f,%rcx
    6bd2:	48 83 c1 04          	add    $0x4,%rcx
    6bd6:	4c 8b 0c ce          	mov    (%rsi,%rcx,8),%r9
    6bda:	4d 85 c9             	test   %r9,%r9
    6bdd:	0f 84 62 02 00 00    	je     6e45 <dlfree+0x6b5>
    6be3:	4c 89 ce             	mov    %r9,%rsi
    6be6:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    6bea:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    6bee:	48 39 c1             	cmp    %rax,%rcx
    6bf1:	75 d5                	jne    6bc8 <dlfree+0x438>
    6bf3:	49 39 f0             	cmp    %rsi,%r8
    6bf6:	48 8b 46 10          	mov    0x10(%rsi),%rax
    6bfa:	77 a0                	ja     6b9c <dlfree+0x40c>
    6bfc:	49 39 c0             	cmp    %rax,%r8
    6bff:	77 9b                	ja     6b9c <dlfree+0x40c>
    6c01:	48 89 50 18          	mov    %rdx,0x18(%rax)
    6c05:	48 89 56 10          	mov    %rdx,0x10(%rsi)
    6c09:	48 89 42 10          	mov    %rax,0x10(%rdx)
    6c0d:	48 89 72 18          	mov    %rsi,0x18(%rdx)
    6c11:	48 c7 42 30 00 00 00 	movq   $0x0,0x30(%rdx)
    6c18:	00 
    6c19:	e9 3f ff ff ff       	jmpq   6b5d <dlfree+0x3cd>
    6c1e:	44 8d 14 09          	lea    (%rcx,%rcx,1),%r10d
    6c22:	4c 8b 4a 10          	mov    0x10(%rdx),%r9
    6c26:	4e 8d 54 d3 48       	lea    0x48(%rbx,%r10,8),%r10
    6c2b:	4d 39 ca             	cmp    %r9,%r10
    6c2e:	0f 85 40 03 00 00    	jne    6f74 <dlfree+0x7e4>
    6c34:	4c 39 cf             	cmp    %r9,%rdi
    6c37:	0f 84 88 02 00 00    	je     6ec5 <dlfree+0x735>
    6c3d:	49 39 fa             	cmp    %rdi,%r10
    6c40:	0f 85 bd 03 00 00    	jne    7003 <dlfree+0x873>
    6c46:	49 89 79 18          	mov    %rdi,0x18(%r9)
    6c4a:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    6c4e:	e9 b8 fb ff ff       	jmpq   680b <dlfree+0x7b>
    6c53:	44 8d 1c 09          	lea    (%rcx,%rcx,1),%r11d
    6c57:	4c 8b 4e 10          	mov    0x10(%rsi),%r9
    6c5b:	4e 8d 5c db 48       	lea    0x48(%rbx,%r11,8),%r11
    6c60:	4d 39 cb             	cmp    %r9,%r11
    6c63:	0f 85 82 03 00 00    	jne    6feb <dlfree+0x85b>
    6c69:	4c 39 cf             	cmp    %r9,%rdi
    6c6c:	0f 84 61 02 00 00    	je     6ed3 <dlfree+0x743>
    6c72:	4c 39 df             	cmp    %r11,%rdi
    6c75:	0f 85 a0 03 00 00    	jne    701b <dlfree+0x88b>
    6c7b:	49 89 79 18          	mov    %rdi,0x18(%r9)
    6c7f:	4c 89 4f 10          	mov    %r9,0x10(%rdi)
    6c83:	e9 38 fe ff ff       	jmpq   6ac0 <dlfree+0x330>
    6c88:	0f bd f1             	bsr    %ecx,%esi
    6c8b:	b9 26 00 00 00       	mov    $0x26,%ecx
    6c90:	48 89 c7             	mov    %rax,%rdi
    6c93:	83 f6 1f             	xor    $0x1f,%esi
    6c96:	29 f1                	sub    %esi,%ecx
    6c98:	48 d3 ef             	shr    %cl,%rdi
    6c9b:	48 89 f9             	mov    %rdi,%rcx
    6c9e:	bf 1f 00 00 00       	mov    $0x1f,%edi
    6ca3:	83 e1 01             	and    $0x1,%ecx
    6ca6:	29 f7                	sub    %esi,%edi
    6ca8:	be 01 00 00 00       	mov    $0x1,%esi
    6cad:	44 8d 14 79          	lea    (%rcx,%rdi,2),%r10d
    6cb1:	4c 89 d1             	mov    %r10,%rcx
    6cb4:	4e 8d 0c d5 58 02 00 	lea    0x258(,%r10,8),%r9
    6cbb:	00 
    6cbc:	d3 e6                	shl    %cl,%esi
    6cbe:	e9 64 fe ff ff       	jmpq   6b27 <dlfree+0x397>
    6cc3:	48 03 43 10          	add    0x10(%rbx),%rax
    6cc7:	48 89 53 28          	mov    %rdx,0x28(%rbx)
    6ccb:	48 89 c1             	mov    %rax,%rcx
    6cce:	48 89 43 10          	mov    %rax,0x10(%rbx)
    6cd2:	48 83 c9 01          	or     $0x1,%rcx
    6cd6:	4c 39 d2             	cmp    %r10,%rdx
    6cd9:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    6cdd:	0f 84 85 01 00 00    	je     6e68 <dlfree+0x6d8>
    6ce3:	48 3b 43 30          	cmp    0x30(%rbx),%rax
    6ce7:	0f 86 95 fb ff ff    	jbe    6882 <dlfree+0xf2>
    6ced:	48 83 3d eb 67 00 00 	cmpq   $0x0,0x67eb(%rip)        # d4e0 <mparams>
    6cf4:	00 
    6cf5:	75 09                	jne    6d00 <dlfree+0x570>
    6cf7:	e8 34 d8 ff ff       	callq  4530 <init_mparams>
    6cfc:	48 8b 53 28          	mov    0x28(%rbx),%rdx
    6d00:	48 85 d2             	test   %rdx,%rdx
    6d03:	0f 84 79 fb ff ff    	je     6882 <dlfree+0xf2>
    6d09:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    6d0d:	48 83 f9 50          	cmp    $0x50,%rcx
    6d11:	0f 86 c4 00 00 00    	jbe    6ddb <dlfree+0x64b>
    6d17:	48 8d ab 78 03 00 00 	lea    0x378(%rbx),%rbp
    6d1e:	48 8b 45 00          	mov    0x0(%rbp),%rax
    6d22:	48 39 c2             	cmp    %rax,%rdx
    6d25:	72 09                	jb     6d30 <dlfree+0x5a0>
    6d27:	48 03 45 08          	add    0x8(%rbp),%rax
    6d2b:	48 39 c2             	cmp    %rax,%rdx
    6d2e:	72 09                	jb     6d39 <dlfree+0x5a9>
    6d30:	48 8b 6d 10          	mov    0x10(%rbp),%rbp
    6d34:	48 85 ed             	test   %rbp,%rbp
    6d37:	75 e5                	jne    6d1e <dlfree+0x58e>
    6d39:	f6 45 18 08          	testb  $0x8,0x18(%rbp)
    6d3d:	0f 85 98 00 00 00    	jne    6ddb <dlfree+0x64b>
    6d43:	48 8b 35 a6 67 00 00 	mov    0x67a6(%rip),%rsi        # d4f0 <mparams+0x10>
    6d4a:	31 d2                	xor    %edx,%edx
    6d4c:	48 8d 44 31 af       	lea    -0x51(%rcx,%rsi,1),%rax
    6d51:	48 f7 f6             	div    %rsi
    6d54:	48 83 e8 01          	sub    $0x1,%rax
    6d58:	48 0f af c6          	imul   %rsi,%rax
    6d5c:	49 89 c4             	mov    %rax,%r12
    6d5f:	48 b8 fe ff ff ff ff 	movabs $0x7ffffffffffffffe,%rax
    6d66:	ff ff 7f 
    6d69:	49 39 c4             	cmp    %rax,%r12
    6d6c:	76 0d                	jbe    6d7b <dlfree+0x5eb>
    6d6e:	49 bc 00 00 00 00 00 	movabs $0x8000000000000000,%r12
    6d75:	00 00 80 
    6d78:	49 29 f4             	sub    %rsi,%r12
    6d7b:	b8 01 00 00 00       	mov    $0x1,%eax
    6d80:	87 05 8a 67 00 00    	xchg   %eax,0x678a(%rip)        # d510 <malloc_global_mutex>
    6d86:	85 c0                	test   %eax,%eax
    6d88:	74 28                	je     6db2 <dlfree+0x622>
    6d8a:	48 8d 15 7f 67 00 00 	lea    0x677f(%rip),%rdx        # d510 <malloc_global_mutex>
    6d91:	b9 01 00 00 00       	mov    $0x1,%ecx
    6d96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    6d9d:	00 00 00 
    6da0:	8b 02                	mov    (%rdx),%eax
    6da2:	85 c0                	test   %eax,%eax
    6da4:	75 fa                	jne    6da0 <dlfree+0x610>
    6da6:	89 c8                	mov    %ecx,%eax
    6da8:	87 05 62 67 00 00    	xchg   %eax,0x6762(%rip)        # d510 <malloc_global_mutex>
    6dae:	85 c0                	test   %eax,%eax
    6db0:	75 ee                	jne    6da0 <dlfree+0x610>
    6db2:	31 ff                	xor    %edi,%edi
    6db4:	e8 b7 0f 00 00       	callq  7d70 <sbrk>
    6db9:	49 89 c5             	mov    %rax,%r13
    6dbc:	48 8b 45 08          	mov    0x8(%rbp),%rax
    6dc0:	48 03 45 00          	add    0x0(%rbp),%rax
    6dc4:	49 39 c5             	cmp    %rax,%r13
    6dc7:	0f 84 98 02 00 00    	je     7065 <dlfree+0x8d5>
    6dcd:	c7 05 39 67 00 00 00 	movl   $0x0,0x6739(%rip)        # d510 <malloc_global_mutex>
    6dd4:	00 00 00 
    6dd7:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    6ddb:	48 3b 4b 30          	cmp    0x30(%rbx),%rcx
    6ddf:	0f 86 9d fa ff ff    	jbe    6882 <dlfree+0xf2>
    6de5:	48 c7 43 30 ff ff ff 	movq   $0xffffffffffffffff,0x30(%rbx)
    6dec:	ff 
    6ded:	e9 90 fa ff ff       	jmpq   6882 <dlfree+0xf2>
    6df2:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    6df6:	48 89 cf             	mov    %rcx,%rdi
    6df9:	83 e7 03             	and    $0x3,%edi
    6dfc:	48 83 ff 03          	cmp    $0x3,%rdi
    6e00:	0f 85 05 fa ff ff    	jne    680b <dlfree+0x7b>
    6e06:	48 83 e1 fe          	and    $0xfffffffffffffffe,%rcx
    6e0a:	48 89 43 08          	mov    %rax,0x8(%rbx)
    6e0e:	48 89 4e 08          	mov    %rcx,0x8(%rsi)
    6e12:	48 89 c1             	mov    %rax,%rcx
    6e15:	48 83 c9 01          	or     $0x1,%rcx
    6e19:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    6e1d:	48 89 06             	mov    %rax,(%rsi)
    6e20:	e9 5d fa ff ff       	jmpq   6882 <dlfree+0xf2>
    6e25:	48 03 43 08          	add    0x8(%rbx),%rax
    6e29:	48 89 53 20          	mov    %rdx,0x20(%rbx)
    6e2d:	48 89 c1             	mov    %rax,%rcx
    6e30:	48 89 43 08          	mov    %rax,0x8(%rbx)
    6e34:	48 83 c9 01          	or     $0x1,%rcx
    6e38:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    6e3c:	48 89 04 02          	mov    %rax,(%rdx,%rax,1)
    6e40:	e9 3d fa ff ff       	jmpq   6882 <dlfree+0xf2>
    6e45:	48 8d 04 ce          	lea    (%rsi,%rcx,8),%rax
    6e49:	48 39 43 18          	cmp    %rax,0x18(%rbx)
    6e4d:	0f 87 49 fd ff ff    	ja     6b9c <dlfree+0x40c>
    6e53:	48 89 14 ce          	mov    %rdx,(%rsi,%rcx,8)
    6e57:	48 89 72 30          	mov    %rsi,0x30(%rdx)
    6e5b:	48 89 52 18          	mov    %rdx,0x18(%rdx)
    6e5f:	48 89 52 10          	mov    %rdx,0x10(%rdx)
    6e63:	e9 f5 fc ff ff       	jmpq   6b5d <dlfree+0x3cd>
    6e68:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    6e6f:	00 
    6e70:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    6e77:	00 
    6e78:	e9 66 fe ff ff       	jmpq   6ce3 <dlfree+0x553>
    6e7d:	48 8b 4a 28          	mov    0x28(%rdx),%rcx
    6e81:	4c 8d 4a 28          	lea    0x28(%rdx),%r9
    6e85:	48 85 c9             	test   %rcx,%rcx
    6e88:	0f 84 fe 00 00 00    	je     6f8c <dlfree+0x7fc>
    6e8e:	66 90                	xchg   %ax,%ax
    6e90:	48 89 cf             	mov    %rcx,%rdi
    6e93:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    6e97:	4d 89 ca             	mov    %r9,%r10
    6e9a:	4c 8d 4f 28          	lea    0x28(%rdi),%r9
    6e9e:	48 85 c9             	test   %rcx,%rcx
    6ea1:	75 ed                	jne    6e90 <dlfree+0x700>
    6ea3:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    6ea7:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
    6eab:	48 85 c9             	test   %rcx,%rcx
    6eae:	75 e0                	jne    6e90 <dlfree+0x700>
    6eb0:	4d 39 d0             	cmp    %r10,%r8
    6eb3:	0f 87 e3 fc ff ff    	ja     6b9c <dlfree+0x40c>
    6eb9:	49 c7 02 00 00 00 00 	movq   $0x0,(%r10)
    6ec0:	e9 45 fa ff ff       	jmpq   690a <dlfree+0x17a>
    6ec5:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    6eca:	d3 c7                	rol    %cl,%edi
    6ecc:	21 3b                	and    %edi,(%rbx)
    6ece:	e9 38 f9 ff ff       	jmpq   680b <dlfree+0x7b>
    6ed3:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    6ed8:	d3 c6                	rol    %cl,%esi
    6eda:	21 33                	and    %esi,(%rbx)
    6edc:	e9 df fb ff ff       	jmpq   6ac0 <dlfree+0x330>
    6ee1:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    6ee5:	4c 8d 4e 28          	lea    0x28(%rsi),%r9
    6ee9:	48 85 c9             	test   %rcx,%rcx
    6eec:	0f 84 e7 00 00 00    	je     6fd9 <dlfree+0x849>
    6ef2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6ef8:	48 89 cf             	mov    %rcx,%rdi
    6efb:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    6eff:	4d 89 cb             	mov    %r9,%r11
    6f02:	4c 8d 4f 28          	lea    0x28(%rdi),%r9
    6f06:	48 85 c9             	test   %rcx,%rcx
    6f09:	75 ed                	jne    6ef8 <dlfree+0x768>
    6f0b:	48 8b 4f 20          	mov    0x20(%rdi),%rcx
    6f0f:	4c 8d 4f 20          	lea    0x20(%rdi),%r9
    6f13:	48 85 c9             	test   %rcx,%rcx
    6f16:	75 e0                	jne    6ef8 <dlfree+0x768>
    6f18:	4d 39 d8             	cmp    %r11,%r8
    6f1b:	0f 87 7b fc ff ff    	ja     6b9c <dlfree+0x40c>
    6f21:	49 c7 03 00 00 00 00 	movq   $0x0,(%r11)
    6f28:	e9 19 fb ff ff       	jmpq   6a46 <dlfree+0x2b6>
    6f2d:	48 85 ff             	test   %rdi,%rdi
    6f30:	49 89 b9 58 02 00 00 	mov    %rdi,0x258(%r9)
    6f37:	0f 85 0e fa ff ff    	jne    694b <dlfree+0x1bb>
    6f3d:	bf fe ff ff ff       	mov    $0xfffffffe,%edi
    6f42:	d3 c7                	rol    %cl,%edi
    6f44:	21 7b 04             	and    %edi,0x4(%rbx)
    6f47:	e9 bf f8 ff ff       	jmpq   680b <dlfree+0x7b>
    6f4c:	48 85 ff             	test   %rdi,%rdi
    6f4f:	49 89 b9 58 02 00 00 	mov    %rdi,0x258(%r9)
    6f56:	0f 85 23 fb ff ff    	jne    6a7f <dlfree+0x2ef>
    6f5c:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    6f61:	d3 c6                	rol    %cl,%esi
    6f63:	21 73 04             	and    %esi,0x4(%rbx)
    6f66:	e9 55 fb ff ff       	jmpq   6ac0 <dlfree+0x330>
    6f6b:	49 89 7b 20          	mov    %rdi,0x20(%r11)
    6f6f:	e9 ce f9 ff ff       	jmpq   6942 <dlfree+0x1b2>
    6f74:	4d 39 c8             	cmp    %r9,%r8
    6f77:	0f 87 1f fc ff ff    	ja     6b9c <dlfree+0x40c>
    6f7d:	49 39 51 18          	cmp    %rdx,0x18(%r9)
    6f81:	0f 84 ad fc ff ff    	je     6c34 <dlfree+0x4a4>
    6f87:	e9 10 fc ff ff       	jmpq   6b9c <dlfree+0x40c>
    6f8c:	48 8b 4a 20          	mov    0x20(%rdx),%rcx
    6f90:	4c 8d 4a 20          	lea    0x20(%rdx),%r9
    6f94:	48 85 c9             	test   %rcx,%rcx
    6f97:	0f 85 f3 fe ff ff    	jne    6e90 <dlfree+0x700>
    6f9d:	4d 85 db             	test   %r11,%r11
    6fa0:	0f 84 65 f8 ff ff    	je     680b <dlfree+0x7b>
    6fa6:	8b 7a 38             	mov    0x38(%rdx),%edi
    6fa9:	4c 8d 0c fb          	lea    (%rbx,%rdi,8),%r9
    6fad:	48 89 f9             	mov    %rdi,%rcx
    6fb0:	31 ff                	xor    %edi,%edi
    6fb2:	49 39 91 58 02 00 00 	cmp    %rdx,0x258(%r9)
    6fb9:	0f 85 6c f9 ff ff    	jne    692b <dlfree+0x19b>
    6fbf:	49 c7 81 58 02 00 00 	movq   $0x0,0x258(%r9)
    6fc6:	00 00 00 00 
    6fca:	e9 6e ff ff ff       	jmpq   6f3d <dlfree+0x7ad>
    6fcf:	90                   	nop
    6fd0:	48 89 7d 20          	mov    %rdi,0x20(%rbp)
    6fd4:	e9 a1 fa ff ff       	jmpq   6a7a <dlfree+0x2ea>
    6fd9:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    6fdd:	48 85 c9             	test   %rcx,%rcx
    6fe0:	74 51                	je     7033 <dlfree+0x8a3>
    6fe2:	4c 8d 4e 20          	lea    0x20(%rsi),%r9
    6fe6:	e9 0d ff ff ff       	jmpq   6ef8 <dlfree+0x768>
    6feb:	4d 39 c8             	cmp    %r9,%r8
    6fee:	0f 87 a8 fb ff ff    	ja     6b9c <dlfree+0x40c>
    6ff4:	49 39 71 18          	cmp    %rsi,0x18(%r9)
    6ff8:	0f 84 6b fc ff ff    	je     6c69 <dlfree+0x4d9>
    6ffe:	e9 99 fb ff ff       	jmpq   6b9c <dlfree+0x40c>
    7003:	49 39 f8             	cmp    %rdi,%r8
    7006:	0f 87 90 fb ff ff    	ja     6b9c <dlfree+0x40c>
    700c:	48 39 57 10          	cmp    %rdx,0x10(%rdi)
    7010:	0f 84 30 fc ff ff    	je     6c46 <dlfree+0x4b6>
    7016:	e9 81 fb ff ff       	jmpq   6b9c <dlfree+0x40c>
    701b:	49 39 f8             	cmp    %rdi,%r8
    701e:	0f 87 78 fb ff ff    	ja     6b9c <dlfree+0x40c>
    7024:	48 39 77 10          	cmp    %rsi,0x10(%rdi)
    7028:	0f 84 4d fc ff ff    	je     6c7b <dlfree+0x4eb>
    702e:	e9 69 fb ff ff       	jmpq   6b9c <dlfree+0x40c>
    7033:	48 85 ed             	test   %rbp,%rbp
    7036:	0f 84 84 fa ff ff    	je     6ac0 <dlfree+0x330>
    703c:	8b 7e 38             	mov    0x38(%rsi),%edi
    703f:	4c 8d 0c fb          	lea    (%rbx,%rdi,8),%r9
    7043:	48 89 f9             	mov    %rdi,%rcx
    7046:	31 ff                	xor    %edi,%edi
    7048:	49 39 b1 58 02 00 00 	cmp    %rsi,0x258(%r9)
    704f:	0f 85 0e fa ff ff    	jne    6a63 <dlfree+0x2d3>
    7055:	49 c7 81 58 02 00 00 	movq   $0x0,0x258(%r9)
    705c:	00 00 00 00 
    7060:	e9 f7 fe ff ff       	jmpq   6f5c <dlfree+0x7cc>
    7065:	4c 89 e7             	mov    %r12,%rdi
    7068:	48 f7 df             	neg    %rdi
    706b:	e8 00 0d 00 00       	callq  7d70 <sbrk>
    7070:	31 ff                	xor    %edi,%edi
    7072:	49 89 c4             	mov    %rax,%r12
    7075:	e8 f6 0c 00 00       	callq  7d70 <sbrk>
    707a:	49 83 c4 01          	add    $0x1,%r12
    707e:	c7 05 88 64 00 00 00 	movl   $0x0,0x6488(%rip)        # d510 <malloc_global_mutex>
    7085:	00 00 00 
    7088:	74 6c                	je     70f6 <dlfree+0x966>
    708a:	49 39 c5             	cmp    %rax,%r13
    708d:	76 67                	jbe    70f6 <dlfree+0x966>
    708f:	49 29 c5             	sub    %rax,%r13
    7092:	74 62                	je     70f6 <dlfree+0x966>
    7094:	48 8b 4b 28          	mov    0x28(%rbx),%rcx
    7098:	48 8b 53 10          	mov    0x10(%rbx),%rdx
    709c:	4c 29 6d 08          	sub    %r13,0x8(%rbp)
    70a0:	4c 29 ab 58 03 00 00 	sub    %r13,0x358(%rbx)
    70a7:	48 8d 41 10          	lea    0x10(%rcx),%rax
    70ab:	4c 29 ea             	sub    %r13,%rdx
    70ae:	a8 0f                	test   $0xf,%al
    70b0:	74 3c                	je     70ee <dlfree+0x95e>
    70b2:	48 f7 d8             	neg    %rax
    70b5:	48 89 d7             	mov    %rdx,%rdi
    70b8:	83 e0 0f             	and    $0xf,%eax
    70bb:	48 29 c7             	sub    %rax,%rdi
    70be:	48 8d 34 01          	lea    (%rcx,%rax,1),%rsi
    70c2:	48 89 f8             	mov    %rdi,%rax
    70c5:	48 89 43 10          	mov    %rax,0x10(%rbx)
    70c9:	48 83 c8 01          	or     $0x1,%rax
    70cd:	48 89 73 28          	mov    %rsi,0x28(%rbx)
    70d1:	48 89 46 08          	mov    %rax,0x8(%rsi)
    70d5:	48 8b 05 24 64 00 00 	mov    0x6424(%rip),%rax        # d500 <mparams+0x20>
    70dc:	48 c7 44 11 08 50 00 	movq   $0x50,0x8(%rcx,%rdx,1)
    70e3:	00 00 
    70e5:	48 89 43 30          	mov    %rax,0x30(%rbx)
    70e9:	e9 94 f7 ff ff       	jmpq   6882 <dlfree+0xf2>
    70ee:	48 89 d0             	mov    %rdx,%rax
    70f1:	48 89 ce             	mov    %rcx,%rsi
    70f4:	eb cf                	jmp    70c5 <dlfree+0x935>
    70f6:	48 8b 4b 10          	mov    0x10(%rbx),%rcx
    70fa:	e9 dc fc ff ff       	jmpq   6ddb <dlfree+0x64b>
    70ff:	90                   	nop

0000000000007100 <calloc>:
    7100:	55                   	push   %rbp
    7101:	53                   	push   %rbx
    7102:	48 89 fb             	mov    %rdi,%rbx
    7105:	48 83 ec 08          	sub    $0x8,%rsp
    7109:	48 85 ff             	test   %rdi,%rdi
    710c:	74 2b                	je     7139 <calloc+0x39>
    710e:	48 89 f8             	mov    %rdi,%rax
    7111:	48 89 f9             	mov    %rdi,%rcx
    7114:	48 09 f0             	or     %rsi,%rax
    7117:	48 0f af ce          	imul   %rsi,%rcx
    711b:	48 a9 00 00 ff ff    	test   $0xffffffffffff0000,%rax
    7121:	74 3d                	je     7160 <calloc+0x60>
    7123:	31 d2                	xor    %edx,%edx
    7125:	48 89 c8             	mov    %rcx,%rax
    7128:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    712f:	48 f7 f7             	div    %rdi
    7132:	48 39 f0             	cmp    %rsi,%rax
    7135:	48 0f 44 d9          	cmove  %rcx,%rbx
    7139:	48 89 df             	mov    %rbx,%rdi
    713c:	e8 2f dc ff ff       	callq  4d70 <dlmalloc>
    7141:	48 85 c0             	test   %rax,%rax
    7144:	48 89 c5             	mov    %rax,%rbp
    7147:	74 0d                	je     7156 <calloc+0x56>
    7149:	48 89 da             	mov    %rbx,%rdx
    714c:	31 f6                	xor    %esi,%esi
    714e:	48 89 c7             	mov    %rax,%rdi
    7151:	e8 57 0b 00 00       	callq  7cad <memset>
    7156:	48 83 c4 08          	add    $0x8,%rsp
    715a:	48 89 e8             	mov    %rbp,%rax
    715d:	5b                   	pop    %rbx
    715e:	5d                   	pop    %rbp
    715f:	c3                   	retq   
    7160:	48 89 cb             	mov    %rcx,%rbx
    7163:	eb d4                	jmp    7139 <calloc+0x39>
    7165:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    716c:	00 00 00 
    716f:	90                   	nop

0000000000007170 <dlrealloc>:
    7170:	41 57                	push   %r15
    7172:	41 56                	push   %r14
    7174:	41 55                	push   %r13
    7176:	41 54                	push   %r12
    7178:	49 89 f5             	mov    %rsi,%r13
    717b:	55                   	push   %rbp
    717c:	53                   	push   %rbx
    717d:	48 83 ec 08          	sub    $0x8,%rsp
    7181:	48 85 ff             	test   %rdi,%rdi
    7184:	0f 84 66 03 00 00    	je     74f0 <dlrealloc+0x380>
    718a:	48 81 fe 7f ff ff ff 	cmp    $0xffffffffffffff7f,%rsi
    7191:	0f 87 c4 03 00 00    	ja     755b <dlrealloc+0x3eb>
    7197:	48 85 f6             	test   %rsi,%rsi
    719a:	48 89 fd             	mov    %rdi,%rbp
    719d:	0f 84 12 04 00 00    	je     75b5 <dlrealloc+0x445>
    71a3:	48 83 fe 0e          	cmp    $0xe,%rsi
    71a7:	bf 20 00 00 00       	mov    $0x20,%edi
    71ac:	0f 87 ce 00 00 00    	ja     7280 <dlrealloc+0x110>
    71b2:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    71b6:	4c 8d 75 f0          	lea    -0x10(%rbp),%r14
    71ba:	48 8b 05 1f 63 00 00 	mov    0x631f(%rip),%rax        # d4e0 <mparams>
    71c1:	4c 89 c2             	mov    %r8,%rdx
    71c4:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    71c8:	49 8d 34 16          	lea    (%r14,%rdx,1),%rsi
    71cc:	48 8b 1e             	mov    (%rsi),%rbx
    71cf:	48 31 c3             	xor    %rax,%rbx
    71d2:	48 3b 43 40          	cmp    0x40(%rbx),%rax
    71d6:	0f 85 f4 01 00 00    	jne    73d0 <dlrealloc+0x260>
    71dc:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    71e3:	0f 85 ef 01 00 00    	jne    73d8 <dlrealloc+0x268>
    71e9:	4c 8b 4b 18          	mov    0x18(%rbx),%r9
    71ed:	4d 39 ce             	cmp    %r9,%r14
    71f0:	0f 82 da 01 00 00    	jb     73d0 <dlrealloc+0x260>
    71f6:	4c 89 c0             	mov    %r8,%rax
    71f9:	83 e0 03             	and    $0x3,%eax
    71fc:	49 39 f6             	cmp    %rsi,%r14
    71ff:	0f 83 cb 01 00 00    	jae    73d0 <dlrealloc+0x260>
    7205:	48 83 f8 01          	cmp    $0x1,%rax
    7209:	0f 84 c1 01 00 00    	je     73d0 <dlrealloc+0x260>
    720f:	48 8b 4e 08          	mov    0x8(%rsi),%rcx
    7213:	f6 c1 01             	test   $0x1,%cl
    7216:	0f 84 b4 01 00 00    	je     73d0 <dlrealloc+0x260>
    721c:	48 85 c0             	test   %rax,%rax
    721f:	75 6f                	jne    7290 <dlrealloc+0x120>
    7221:	48 81 ff f8 00 00 00 	cmp    $0xf8,%rdi
    7228:	0f 86 5a 02 00 00    	jbe    7488 <dlrealloc+0x318>
    722e:	48 8d 47 08          	lea    0x8(%rdi),%rax
    7232:	48 39 d0             	cmp    %rdx,%rax
    7235:	0f 87 4d 02 00 00    	ja     7488 <dlrealloc+0x318>
    723b:	48 8b 05 ae 62 00 00 	mov    0x62ae(%rip),%rax        # d4f0 <mparams+0x10>
    7242:	48 29 fa             	sub    %rdi,%rdx
    7245:	48 01 c0             	add    %rax,%rax
    7248:	48 39 c2             	cmp    %rax,%rdx
    724b:	0f 87 37 02 00 00    	ja     7488 <dlrealloc+0x318>
    7251:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    7258:	0f 85 b2 02 00 00    	jne    7510 <dlrealloc+0x3a0>
    725e:	4d 85 f6             	test   %r14,%r14
    7261:	0f 84 2e 02 00 00    	je     7495 <dlrealloc+0x325>
    7267:	48 83 c4 08          	add    $0x8,%rsp
    726b:	48 89 e8             	mov    %rbp,%rax
    726e:	5b                   	pop    %rbx
    726f:	5d                   	pop    %rbp
    7270:	41 5c                	pop    %r12
    7272:	41 5d                	pop    %r13
    7274:	41 5e                	pop    %r14
    7276:	41 5f                	pop    %r15
    7278:	c3                   	retq   
    7279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7280:	48 8d 7e 1f          	lea    0x1f(%rsi),%rdi
    7284:	48 83 e7 f0          	and    $0xfffffffffffffff0,%rdi
    7288:	e9 25 ff ff ff       	jmpq   71b2 <dlrealloc+0x42>
    728d:	0f 1f 00             	nopl   (%rax)
    7290:	48 39 d7             	cmp    %rdx,%rdi
    7293:	0f 86 87 01 00 00    	jbe    7420 <dlrealloc+0x2b0>
    7299:	48 39 73 28          	cmp    %rsi,0x28(%rbx)
    729d:	0f 84 ca 02 00 00    	je     756d <dlrealloc+0x3fd>
    72a3:	48 39 73 20          	cmp    %rsi,0x20(%rbx)
    72a7:	0f 84 14 03 00 00    	je     75c1 <dlrealloc+0x451>
    72ad:	f6 c1 02             	test   $0x2,%cl
    72b0:	0f 85 d2 01 00 00    	jne    7488 <dlrealloc+0x318>
    72b6:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    72ba:	48 8d 04 11          	lea    (%rcx,%rdx,1),%rax
    72be:	48 39 c7             	cmp    %rax,%rdi
    72c1:	0f 87 c1 01 00 00    	ja     7488 <dlrealloc+0x318>
    72c7:	48 89 c2             	mov    %rax,%rdx
    72ca:	48 c1 e9 03          	shr    $0x3,%rcx
    72ce:	4c 8b 56 18          	mov    0x18(%rsi),%r10
    72d2:	48 29 fa             	sub    %rdi,%rdx
    72d5:	48 83 f9 1f          	cmp    $0x1f,%rcx
    72d9:	0f 86 40 02 00 00    	jbe    751f <dlrealloc+0x3af>
    72df:	49 39 f2             	cmp    %rsi,%r10
    72e2:	4c 8b 7e 30          	mov    0x30(%rsi),%r15
    72e6:	0f 84 93 03 00 00    	je     767f <dlrealloc+0x50f>
    72ec:	48 8b 4e 10          	mov    0x10(%rsi),%rcx
    72f0:	49 39 c9             	cmp    %rcx,%r9
    72f3:	0f 87 d7 00 00 00    	ja     73d0 <dlrealloc+0x260>
    72f9:	48 39 71 18          	cmp    %rsi,0x18(%rcx)
    72fd:	0f 85 cd 00 00 00    	jne    73d0 <dlrealloc+0x260>
    7303:	49 3b 72 10          	cmp    0x10(%r10),%rsi
    7307:	0f 85 c3 00 00 00    	jne    73d0 <dlrealloc+0x260>
    730d:	4c 89 51 18          	mov    %r10,0x18(%rcx)
    7311:	49 89 4a 10          	mov    %rcx,0x10(%r10)
    7315:	4d 85 ff             	test   %r15,%r15
    7318:	74 69                	je     7383 <dlrealloc+0x213>
    731a:	44 8b 5e 38          	mov    0x38(%rsi),%r11d
    731e:	4c 89 d9             	mov    %r11,%rcx
    7321:	4e 8d 1c db          	lea    (%rbx,%r11,8),%r11
    7325:	49 39 b3 58 02 00 00 	cmp    %rsi,0x258(%r11)
    732c:	0f 84 a2 03 00 00    	je     76d4 <dlrealloc+0x564>
    7332:	4d 39 f9             	cmp    %r15,%r9
    7335:	0f 87 95 00 00 00    	ja     73d0 <dlrealloc+0x260>
    733b:	49 39 77 20          	cmp    %rsi,0x20(%r15)
    733f:	0f 84 cb 03 00 00    	je     7710 <dlrealloc+0x5a0>
    7345:	4d 89 57 28          	mov    %r10,0x28(%r15)
    7349:	4d 85 d2             	test   %r10,%r10
    734c:	74 35                	je     7383 <dlrealloc+0x213>
    734e:	4d 39 d1             	cmp    %r10,%r9
    7351:	77 7d                	ja     73d0 <dlrealloc+0x260>
    7353:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    7357:	4d 89 7a 30          	mov    %r15,0x30(%r10)
    735b:	48 85 c9             	test   %rcx,%rcx
    735e:	74 0d                	je     736d <dlrealloc+0x1fd>
    7360:	49 39 c9             	cmp    %rcx,%r9
    7363:	77 6b                	ja     73d0 <dlrealloc+0x260>
    7365:	49 89 4a 20          	mov    %rcx,0x20(%r10)
    7369:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    736d:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    7371:	48 85 c9             	test   %rcx,%rcx
    7374:	74 0d                	je     7383 <dlrealloc+0x213>
    7376:	49 39 c9             	cmp    %rcx,%r9
    7379:	77 55                	ja     73d0 <dlrealloc+0x260>
    737b:	49 89 4a 28          	mov    %rcx,0x28(%r10)
    737f:	4c 89 51 30          	mov    %r10,0x30(%rcx)
    7383:	4c 8b 0d 56 61 00 00 	mov    0x6156(%rip),%r9        # d4e0 <mparams>
    738a:	41 83 e0 01          	and    $0x1,%r8d
    738e:	49 8d 0c 06          	lea    (%r14,%rax,1),%rcx
    7392:	49 83 c8 02          	or     $0x2,%r8
    7396:	49 31 d9             	xor    %rbx,%r9
    7399:	48 83 fa 1f          	cmp    $0x1f,%rdx
    739d:	0f 87 8a 02 00 00    	ja     762d <dlrealloc+0x4bd>
    73a3:	4c 09 c0             	or     %r8,%rax
    73a6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    73aa:	4c 89 09             	mov    %r9,(%rcx)
    73ad:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    73b2:	e9 9a fe ff ff       	jmpq   7251 <dlrealloc+0xe1>
    73b7:	4d 39 d1             	cmp    %r10,%r9
    73ba:	77 14                	ja     73d0 <dlrealloc+0x260>
    73bc:	49 39 72 10          	cmp    %rsi,0x10(%r10)
    73c0:	0f 84 81 01 00 00    	je     7547 <dlrealloc+0x3d7>
    73c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    73cd:	00 00 00 
    73d0:	e8 fb 1a 00 00       	callq  8ed0 <abort>
    73d5:	0f 1f 00             	nopl   (%rax)
    73d8:	48 8d 93 74 03 00 00 	lea    0x374(%rbx),%rdx
    73df:	b8 01 00 00 00       	mov    $0x1,%eax
    73e4:	87 02                	xchg   %eax,(%rdx)
    73e6:	85 c0                	test   %eax,%eax
    73e8:	74 18                	je     7402 <dlrealloc+0x292>
    73ea:	b9 01 00 00 00       	mov    $0x1,%ecx
    73ef:	90                   	nop
    73f0:	8b 83 74 03 00 00    	mov    0x374(%rbx),%eax
    73f6:	85 c0                	test   %eax,%eax
    73f8:	75 f6                	jne    73f0 <dlrealloc+0x280>
    73fa:	89 c8                	mov    %ecx,%eax
    73fc:	87 02                	xchg   %eax,(%rdx)
    73fe:	85 c0                	test   %eax,%eax
    7400:	75 ee                	jne    73f0 <dlrealloc+0x280>
    7402:	4c 8b 45 f8          	mov    -0x8(%rbp),%r8
    7406:	4c 89 c2             	mov    %r8,%rdx
    7409:	48 83 e2 f8          	and    $0xfffffffffffffff8,%rdx
    740d:	49 8d 34 16          	lea    (%r14,%rdx,1),%rsi
    7411:	e9 d3 fd ff ff       	jmpq   71e9 <dlrealloc+0x79>
    7416:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    741d:	00 00 00 
    7420:	48 29 fa             	sub    %rdi,%rdx
    7423:	48 83 fa 1f          	cmp    $0x1f,%rdx
    7427:	49 89 d4             	mov    %rdx,%r12
    742a:	0f 86 21 fe ff ff    	jbe    7251 <dlrealloc+0xe1>
    7430:	48 8b 05 a9 60 00 00 	mov    0x60a9(%rip),%rax        # d4e0 <mparams>
    7437:	4d 8d 3c 3e          	lea    (%r14,%rdi,1),%r15
    743b:	41 83 e0 01          	and    $0x1,%r8d
    743f:	48 83 cf 02          	or     $0x2,%rdi
    7443:	48 83 ca 03          	or     $0x3,%rdx
    7447:	4c 09 c7             	or     %r8,%rdi
    744a:	48 31 d8             	xor    %rbx,%rax
    744d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7451:	49 89 57 08          	mov    %rdx,0x8(%r15)
    7455:	49 89 07             	mov    %rax,(%r15)
    7458:	48 83 4e 08 01       	orq    $0x1,0x8(%rsi)
    745d:	49 8d 54 24 f0       	lea    -0x10(%r12),%rdx
    7462:	49 8d 7f 10          	lea    0x10(%r15),%rdi
    7466:	48 89 06             	mov    %rax,(%rsi)
    7469:	31 f6                	xor    %esi,%esi
    746b:	e8 3d 08 00 00       	callq  7cad <memset>
    7470:	4c 89 e2             	mov    %r12,%rdx
    7473:	4c 89 fe             	mov    %r15,%rsi
    7476:	48 89 df             	mov    %rbx,%rdi
    7479:	e8 a2 d1 ff ff       	callq  4620 <dispose_chunk>
    747e:	e9 ce fd ff ff       	jmpq   7251 <dlrealloc+0xe1>
    7483:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7488:	f6 83 70 03 00 00 02 	testb  $0x2,0x370(%rbx)
    748f:	0f 85 89 01 00 00    	jne    761e <dlrealloc+0x4ae>
    7495:	4c 89 ef             	mov    %r13,%rdi
    7498:	e8 d3 d8 ff ff       	callq  4d70 <dlmalloc>
    749d:	48 85 c0             	test   %rax,%rax
    74a0:	49 89 c4             	mov    %rax,%r12
    74a3:	0f 84 ab 00 00 00    	je     7554 <dlrealloc+0x3e4>
    74a9:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    74ad:	4c 89 ea             	mov    %r13,%rdx
    74b0:	48 89 ee             	mov    %rbp,%rsi
    74b3:	48 89 c7             	mov    %rax,%rdi
    74b6:	48 83 e3 f8          	and    $0xfffffffffffffff8,%rbx
    74ba:	48 83 eb 10          	sub    $0x10,%rbx
    74be:	49 39 dd             	cmp    %rbx,%r13
    74c1:	48 0f 47 d3          	cmova  %rbx,%rdx
    74c5:	e8 96 07 00 00       	callq  7c60 <memcpy>
    74ca:	48 89 ef             	mov    %rbp,%rdi
    74cd:	48 89 da             	mov    %rbx,%rdx
    74d0:	31 f6                	xor    %esi,%esi
    74d2:	e8 d6 07 00 00       	callq  7cad <memset>
    74d7:	48 89 ef             	mov    %rbp,%rdi
    74da:	4c 89 e5             	mov    %r12,%rbp
    74dd:	e8 ae f2 ff ff       	callq  6790 <dlfree>
    74e2:	e9 80 fd ff ff       	jmpq   7267 <dlrealloc+0xf7>
    74e7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    74ee:	00 00 
    74f0:	48 83 c4 08          	add    $0x8,%rsp
    74f4:	48 89 f7             	mov    %rsi,%rdi
    74f7:	5b                   	pop    %rbx
    74f8:	5d                   	pop    %rbp
    74f9:	41 5c                	pop    %r12
    74fb:	41 5d                	pop    %r13
    74fd:	41 5e                	pop    %r14
    74ff:	41 5f                	pop    %r15
    7501:	e9 6a d8 ff ff       	jmpq   4d70 <dlmalloc>
    7506:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    750d:	00 00 00 
    7510:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    7517:	00 00 00 
    751a:	e9 3f fd ff ff       	jmpq   725e <dlrealloc+0xee>
    751f:	44 8d 24 09          	lea    (%rcx,%rcx,1),%r12d
    7523:	4c 8b 5e 10          	mov    0x10(%rsi),%r11
    7527:	4e 8d 64 e3 48       	lea    0x48(%rbx,%r12,8),%r12
    752c:	4d 39 e3             	cmp    %r12,%r11
    752f:	0f 85 be 01 00 00    	jne    76f3 <dlrealloc+0x583>
    7535:	4d 39 d3             	cmp    %r10,%r11
    7538:	0f 84 88 01 00 00    	je     76c6 <dlrealloc+0x556>
    753e:	4d 39 d4             	cmp    %r10,%r12
    7541:	0f 85 70 fe ff ff    	jne    73b7 <dlrealloc+0x247>
    7547:	4d 89 53 18          	mov    %r10,0x18(%r11)
    754b:	4d 89 5a 10          	mov    %r11,0x10(%r10)
    754f:	e9 2f fe ff ff       	jmpq   7383 <dlrealloc+0x213>
    7554:	31 ed                	xor    %ebp,%ebp
    7556:	e9 0c fd ff ff       	jmpq   7267 <dlrealloc+0xf7>
    755b:	e8 e0 0b 00 00       	callq  8140 <__errno_location>
    7560:	31 ed                	xor    %ebp,%ebp
    7562:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    7568:	e9 fa fc ff ff       	jmpq   7267 <dlrealloc+0xf7>
    756d:	48 03 53 10          	add    0x10(%rbx),%rdx
    7571:	48 39 d7             	cmp    %rdx,%rdi
    7574:	0f 83 0e ff ff ff    	jae    7488 <dlrealloc+0x318>
    757a:	48 8b 0d 5f 5f 00 00 	mov    0x5f5f(%rip),%rcx        # d4e0 <mparams>
    7581:	49 8d 04 3e          	lea    (%r14,%rdi,1),%rax
    7585:	48 29 fa             	sub    %rdi,%rdx
    7588:	41 83 e0 01          	and    $0x1,%r8d
    758c:	48 83 cf 02          	or     $0x2,%rdi
    7590:	4c 09 c7             	or     %r8,%rdi
    7593:	48 31 d9             	xor    %rbx,%rcx
    7596:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    759a:	48 89 08             	mov    %rcx,(%rax)
    759d:	48 89 d1             	mov    %rdx,%rcx
    75a0:	48 83 c9 01          	or     $0x1,%rcx
    75a4:	48 89 48 08          	mov    %rcx,0x8(%rax)
    75a8:	48 89 43 28          	mov    %rax,0x28(%rbx)
    75ac:	48 89 53 10          	mov    %rdx,0x10(%rbx)
    75b0:	e9 9c fc ff ff       	jmpq   7251 <dlrealloc+0xe1>
    75b5:	e8 d6 f1 ff ff       	callq  6790 <dlfree>
    75ba:	31 ed                	xor    %ebp,%ebp
    75bc:	e9 a6 fc ff ff       	jmpq   7267 <dlrealloc+0xf7>
    75c1:	48 03 53 08          	add    0x8(%rbx),%rdx
    75c5:	48 39 d7             	cmp    %rdx,%rdi
    75c8:	0f 87 ba fe ff ff    	ja     7488 <dlrealloc+0x318>
    75ce:	48 8b 35 0b 5f 00 00 	mov    0x5f0b(%rip),%rsi        # d4e0 <mparams>
    75d5:	48 89 d1             	mov    %rdx,%rcx
    75d8:	41 83 e0 01          	and    $0x1,%r8d
    75dc:	48 29 f9             	sub    %rdi,%rcx
    75df:	49 83 c8 02          	or     $0x2,%r8
    75e3:	49 8d 04 16          	lea    (%r14,%rdx,1),%rax
    75e7:	48 31 de             	xor    %rbx,%rsi
    75ea:	48 83 f9 1f          	cmp    $0x1f,%rcx
    75ee:	76 6b                	jbe    765b <dlrealloc+0x4eb>
    75f0:	4d 8d 0c 3e          	lea    (%r14,%rdi,1),%r9
    75f4:	48 89 ca             	mov    %rcx,%rdx
    75f7:	4c 09 c7             	or     %r8,%rdi
    75fa:	48 83 ca 01          	or     $0x1,%rdx
    75fe:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    7602:	49 89 31             	mov    %rsi,(%r9)
    7605:	49 89 51 08          	mov    %rdx,0x8(%r9)
    7609:	48 89 08             	mov    %rcx,(%rax)
    760c:	48 83 60 08 fe       	andq   $0xfffffffffffffffe,0x8(%rax)
    7611:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    7615:	4c 89 4b 20          	mov    %r9,0x20(%rbx)
    7619:	e9 33 fc ff ff       	jmpq   7251 <dlrealloc+0xe1>
    761e:	c7 83 74 03 00 00 00 	movl   $0x0,0x374(%rbx)
    7625:	00 00 00 
    7628:	e9 68 fe ff ff       	jmpq   7495 <dlrealloc+0x325>
    762d:	49 8d 34 3e          	lea    (%r14,%rdi,1),%rsi
    7631:	48 89 d0             	mov    %rdx,%rax
    7634:	4c 09 c7             	or     %r8,%rdi
    7637:	48 83 c8 03          	or     $0x3,%rax
    763b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    763f:	48 89 df             	mov    %rbx,%rdi
    7642:	4c 89 0e             	mov    %r9,(%rsi)
    7645:	48 89 46 08          	mov    %rax,0x8(%rsi)
    7649:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    764e:	4c 89 09             	mov    %r9,(%rcx)
    7651:	e8 ca cf ff ff       	callq  4620 <dispose_chunk>
    7656:	e9 f6 fb ff ff       	jmpq   7251 <dlrealloc+0xe1>
    765b:	4c 09 c2             	or     %r8,%rdx
    765e:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
    7662:	48 89 30             	mov    %rsi,(%rax)
    7665:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    766a:	48 c7 43 08 00 00 00 	movq   $0x0,0x8(%rbx)
    7671:	00 
    7672:	48 c7 43 20 00 00 00 	movq   $0x0,0x20(%rbx)
    7679:	00 
    767a:	e9 d2 fb ff ff       	jmpq   7251 <dlrealloc+0xe1>
    767f:	48 8b 4e 28          	mov    0x28(%rsi),%rcx
    7683:	4c 8d 5e 28          	lea    0x28(%rsi),%r11
    7687:	48 85 c9             	test   %rcx,%rcx
    768a:	0f 84 89 00 00 00    	je     7719 <dlrealloc+0x5a9>
    7690:	49 89 ca             	mov    %rcx,%r10
    7693:	48 8b 49 28          	mov    0x28(%rcx),%rcx
    7697:	4d 89 dc             	mov    %r11,%r12
    769a:	4d 8d 5a 28          	lea    0x28(%r10),%r11
    769e:	48 85 c9             	test   %rcx,%rcx
    76a1:	75 ed                	jne    7690 <dlrealloc+0x520>
    76a3:	49 8b 4a 20          	mov    0x20(%r10),%rcx
    76a7:	4d 8d 5a 20          	lea    0x20(%r10),%r11
    76ab:	48 85 c9             	test   %rcx,%rcx
    76ae:	75 e0                	jne    7690 <dlrealloc+0x520>
    76b0:	4d 39 e1             	cmp    %r12,%r9
    76b3:	0f 87 17 fd ff ff    	ja     73d0 <dlrealloc+0x260>
    76b9:	49 c7 04 24 00 00 00 	movq   $0x0,(%r12)
    76c0:	00 
    76c1:	e9 4f fc ff ff       	jmpq   7315 <dlrealloc+0x1a5>
    76c6:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    76cb:	d3 c6                	rol    %cl,%esi
    76cd:	21 33                	and    %esi,(%rbx)
    76cf:	e9 af fc ff ff       	jmpq   7383 <dlrealloc+0x213>
    76d4:	4d 85 d2             	test   %r10,%r10
    76d7:	4d 89 93 58 02 00 00 	mov    %r10,0x258(%r11)
    76de:	0f 85 6a fc ff ff    	jne    734e <dlrealloc+0x1de>
    76e4:	be fe ff ff ff       	mov    $0xfffffffe,%esi
    76e9:	d3 c6                	rol    %cl,%esi
    76eb:	21 73 04             	and    %esi,0x4(%rbx)
    76ee:	e9 90 fc ff ff       	jmpq   7383 <dlrealloc+0x213>
    76f3:	4d 39 d9             	cmp    %r11,%r9
    76f6:	0f 87 d4 fc ff ff    	ja     73d0 <dlrealloc+0x260>
    76fc:	49 39 73 18          	cmp    %rsi,0x18(%r11)
    7700:	0f 84 2f fe ff ff    	je     7535 <dlrealloc+0x3c5>
    7706:	e9 c5 fc ff ff       	jmpq   73d0 <dlrealloc+0x260>
    770b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7710:	4d 89 57 20          	mov    %r10,0x20(%r15)
    7714:	e9 30 fc ff ff       	jmpq   7349 <dlrealloc+0x1d9>
    7719:	48 8b 4e 20          	mov    0x20(%rsi),%rcx
    771d:	4c 8d 5e 20          	lea    0x20(%rsi),%r11
    7721:	48 85 c9             	test   %rcx,%rcx
    7724:	0f 85 66 ff ff ff    	jne    7690 <dlrealloc+0x520>
    772a:	4d 85 ff             	test   %r15,%r15
    772d:	0f 84 50 fc ff ff    	je     7383 <dlrealloc+0x213>
    7733:	44 8b 56 38          	mov    0x38(%rsi),%r10d
    7737:	4e 8d 1c d3          	lea    (%rbx,%r10,8),%r11
    773b:	4c 89 d1             	mov    %r10,%rcx
    773e:	45 31 d2             	xor    %r10d,%r10d
    7741:	49 3b b3 58 02 00 00 	cmp    0x258(%r11),%rsi
    7748:	0f 85 e4 fb ff ff    	jne    7332 <dlrealloc+0x1c2>
    774e:	49 c7 83 58 02 00 00 	movq   $0x0,0x258(%r11)
    7755:	00 00 00 00 
    7759:	eb 89                	jmp    76e4 <dlrealloc+0x574>
    775b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000007760 <dlmemalign>:
    7760:	48 83 ff 10          	cmp    $0x10,%rdi
    7764:	0f 86 de 00 00 00    	jbe    7848 <dlmemalign+0xe8>
    776a:	48 83 ff 1f          	cmp    $0x1f,%rdi
    776e:	41 54                	push   %r12
    7770:	48 c7 c0 60 ff ff ff 	mov    $0xffffffffffffff60,%rax
    7777:	55                   	push   %rbp
    7778:	53                   	push   %rbx
    7779:	bb 20 00 00 00       	mov    $0x20,%ebx
    777e:	76 2a                	jbe    77aa <dlmemalign+0x4a>
    7780:	48 8d 57 ff          	lea    -0x1(%rdi),%rdx
    7784:	48 85 fa             	test   %rdi,%rdx
    7787:	0f 84 00 02 00 00    	je     798d <dlmemalign+0x22d>
    778d:	48 83 ff 20          	cmp    $0x20,%rdi
    7791:	74 17                	je     77aa <dlmemalign+0x4a>
    7793:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7798:	48 01 db             	add    %rbx,%rbx
    779b:	48 39 df             	cmp    %rbx,%rdi
    779e:	77 f8                	ja     7798 <dlmemalign+0x38>
    77a0:	48 c7 c0 80 ff ff ff 	mov    $0xffffffffffffff80,%rax
    77a7:	48 29 d8             	sub    %rbx,%rax
    77aa:	48 39 c6             	cmp    %rax,%rsi
    77ad:	72 19                	jb     77c8 <dlmemalign+0x68>
    77af:	e8 8c 09 00 00       	callq  8140 <__errno_location>
    77b4:	c7 00 0c 00 00 00    	movl   $0xc,(%rax)
    77ba:	31 c0                	xor    %eax,%eax
    77bc:	5b                   	pop    %rbx
    77bd:	5d                   	pop    %rbp
    77be:	41 5c                	pop    %r12
    77c0:	c3                   	retq   
    77c1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    77c8:	48 83 fe 0e          	cmp    $0xe,%rsi
    77cc:	bd 20 00 00 00       	mov    $0x20,%ebp
    77d1:	76 0b                	jbe    77de <dlmemalign+0x7e>
    77d3:	48 83 c6 1f          	add    $0x1f,%rsi
    77d7:	48 83 e6 f0          	and    $0xfffffffffffffff0,%rsi
    77db:	48 89 f5             	mov    %rsi,%rbp
    77de:	48 8d 7c 2b 10       	lea    0x10(%rbx,%rbp,1),%rdi
    77e3:	e8 88 d5 ff ff       	callq  4d70 <dlmalloc>
    77e8:	48 85 c0             	test   %rax,%rax
    77eb:	74 cf                	je     77bc <dlmemalign+0x5c>
    77ed:	f6 05 9c 5c 00 00 02 	testb  $0x2,0x5c9c(%rip)        # d490 <_gm_+0x370>
    77f4:	4c 8d 60 f0          	lea    -0x10(%rax),%r12
    77f8:	0f 85 a2 00 00 00    	jne    78a0 <dlmemalign+0x140>
    77fe:	48 8d 53 ff          	lea    -0x1(%rbx),%rdx
    7802:	48 85 d0             	test   %rdx,%rax
    7805:	75 49                	jne    7850 <dlmemalign+0xf0>
    7807:	48 8b 48 f8          	mov    -0x8(%rax),%rcx
    780b:	f6 c1 03             	test   $0x3,%cl
    780e:	74 14                	je     7824 <dlmemalign+0xc4>
    7810:	48 89 c8             	mov    %rcx,%rax
    7813:	48 8d 55 20          	lea    0x20(%rbp),%rdx
    7817:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
    781b:	48 39 d0             	cmp    %rdx,%rax
    781e:	0f 87 1c 01 00 00    	ja     7940 <dlmemalign+0x1e0>
    7824:	f6 05 65 5c 00 00 02 	testb  $0x2,0x5c65(%rip)        # d490 <_gm_+0x370>
    782b:	49 8d 44 24 10       	lea    0x10(%r12),%rax
    7830:	74 8a                	je     77bc <dlmemalign+0x5c>
    7832:	c7 05 58 5c 00 00 00 	movl   $0x0,0x5c58(%rip)        # d494 <_gm_+0x374>
    7839:	00 00 00 
    783c:	e9 7b ff ff ff       	jmpq   77bc <dlmemalign+0x5c>
    7841:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7848:	48 89 f7             	mov    %rsi,%rdi
    784b:	e9 20 d5 ff ff       	jmpq   4d70 <dlmalloc>
    7850:	48 89 d9             	mov    %rbx,%rcx
    7853:	48 01 c2             	add    %rax,%rdx
    7856:	48 8b 70 f8          	mov    -0x8(%rax),%rsi
    785a:	48 f7 d9             	neg    %rcx
    785d:	48 21 ca             	and    %rcx,%rdx
    7860:	48 83 ea 10          	sub    $0x10,%rdx
    7864:	48 89 d1             	mov    %rdx,%rcx
    7867:	48 01 d3             	add    %rdx,%rbx
    786a:	4c 29 e1             	sub    %r12,%rcx
    786d:	48 83 f9 20          	cmp    $0x20,%rcx
    7871:	48 89 f1             	mov    %rsi,%rcx
    7874:	48 0f 43 da          	cmovae %rdx,%rbx
    7878:	48 83 e1 f8          	and    $0xfffffffffffffff8,%rcx
    787c:	48 89 da             	mov    %rbx,%rdx
    787f:	4c 29 e2             	sub    %r12,%rdx
    7882:	48 29 d1             	sub    %rdx,%rcx
    7885:	83 e6 03             	and    $0x3,%esi
    7888:	75 56                	jne    78e0 <dlmemalign+0x180>
    788a:	48 03 50 f0          	add    -0x10(%rax),%rdx
    788e:	49 89 dc             	mov    %rbx,%r12
    7891:	48 89 4b 08          	mov    %rcx,0x8(%rbx)
    7895:	48 89 13             	mov    %rdx,(%rbx)
    7898:	e9 6e ff ff ff       	jmpq   780b <dlmemalign+0xab>
    789d:	0f 1f 00             	nopl   (%rax)
    78a0:	ba 01 00 00 00       	mov    $0x1,%edx
    78a5:	87 15 e9 5b 00 00    	xchg   %edx,0x5be9(%rip)        # d494 <_gm_+0x374>
    78ab:	85 d2                	test   %edx,%edx
    78ad:	0f 84 4b ff ff ff    	je     77fe <dlmemalign+0x9e>
    78b3:	b9 01 00 00 00       	mov    $0x1,%ecx
    78b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    78bf:	00 
    78c0:	8b 15 ce 5b 00 00    	mov    0x5bce(%rip),%edx        # d494 <_gm_+0x374>
    78c6:	85 d2                	test   %edx,%edx
    78c8:	75 f6                	jne    78c0 <dlmemalign+0x160>
    78ca:	89 ca                	mov    %ecx,%edx
    78cc:	87 15 c2 5b 00 00    	xchg   %edx,0x5bc2(%rip)        # d494 <_gm_+0x374>
    78d2:	85 d2                	test   %edx,%edx
    78d4:	75 ea                	jne    78c0 <dlmemalign+0x160>
    78d6:	e9 23 ff ff ff       	jmpq   77fe <dlmemalign+0x9e>
    78db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    78e0:	48 8b 73 08          	mov    0x8(%rbx),%rsi
    78e4:	48 8d 3d 35 58 00 00 	lea    0x5835(%rip),%rdi        # d120 <_gm_>
    78eb:	83 e6 01             	and    $0x1,%esi
    78ee:	48 83 ce 02          	or     $0x2,%rsi
    78f2:	48 09 ce             	or     %rcx,%rsi
    78f5:	48 01 d9             	add    %rbx,%rcx
    78f8:	48 89 73 08          	mov    %rsi,0x8(%rbx)
    78fc:	48 8b 35 dd 5b 00 00 	mov    0x5bdd(%rip),%rsi        # d4e0 <mparams>
    7903:	48 83 49 08 01       	orq    $0x1,0x8(%rcx)
    7908:	48 31 fe             	xor    %rdi,%rsi
    790b:	48 89 31             	mov    %rsi,(%rcx)
    790e:	48 8b 48 f8          	mov    -0x8(%rax),%rcx
    7912:	83 e1 01             	and    $0x1,%ecx
    7915:	48 83 c9 02          	or     $0x2,%rcx
    7919:	48 09 d1             	or     %rdx,%rcx
    791c:	48 89 48 f8          	mov    %rcx,-0x8(%rax)
    7920:	49 8d 04 14          	lea    (%r12,%rdx,1),%rax
    7924:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    7929:	48 89 30             	mov    %rsi,(%rax)
    792c:	4c 89 e6             	mov    %r12,%rsi
    792f:	49 89 dc             	mov    %rbx,%r12
    7932:	e8 e9 cc ff ff       	callq  4620 <dispose_chunk>
    7937:	48 8b 4b 08          	mov    0x8(%rbx),%rcx
    793b:	e9 cb fe ff ff       	jmpq   780b <dlmemalign+0xab>
    7940:	48 89 c2             	mov    %rax,%rdx
    7943:	49 8d 34 2c          	lea    (%r12,%rbp,1),%rsi
    7947:	83 e1 01             	and    $0x1,%ecx
    794a:	48 29 ea             	sub    %rbp,%rdx
    794d:	48 83 cd 02          	or     $0x2,%rbp
    7951:	48 8d 3d c8 57 00 00 	lea    0x57c8(%rip),%rdi        # d120 <_gm_>
    7958:	48 09 e9             	or     %rbp,%rcx
    795b:	49 89 d0             	mov    %rdx,%r8
    795e:	4c 01 e0             	add    %r12,%rax
    7961:	49 89 4c 24 08       	mov    %rcx,0x8(%r12)
    7966:	48 8b 0d 73 5b 00 00 	mov    0x5b73(%rip),%rcx        # d4e0 <mparams>
    796d:	49 83 c8 03          	or     $0x3,%r8
    7971:	4c 89 46 08          	mov    %r8,0x8(%rsi)
    7975:	48 31 f9             	xor    %rdi,%rcx
    7978:	48 89 0e             	mov    %rcx,(%rsi)
    797b:	48 83 48 08 01       	orq    $0x1,0x8(%rax)
    7980:	48 89 08             	mov    %rcx,(%rax)
    7983:	e8 98 cc ff ff       	callq  4620 <dispose_chunk>
    7988:	e9 97 fe ff ff       	jmpq   7824 <dlmemalign+0xc4>
    798d:	48 83 c0 20          	add    $0x20,%rax
    7991:	48 89 fb             	mov    %rdi,%rbx
    7994:	48 29 f8             	sub    %rdi,%rax
    7997:	e9 0e fe ff ff       	jmpq   77aa <dlmemalign+0x4a>
    799c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000079a0 <dlmallinfo>:
    79a0:	41 55                	push   %r13
    79a2:	41 54                	push   %r12
    79a4:	55                   	push   %rbp
    79a5:	53                   	push   %rbx
    79a6:	48 83 ec 18          	sub    $0x18,%rsp
    79aa:	48 83 3d 2e 5b 00 00 	cmpq   $0x0,0x5b2e(%rip)        # d4e0 <mparams>
    79b1:	00 
    79b2:	0f 84 98 01 00 00    	je     7b50 <dlmallinfo+0x1b0>
    79b8:	8b 1d d2 5a 00 00    	mov    0x5ad2(%rip),%ebx        # d490 <_gm_+0x370>
    79be:	83 e3 02             	and    $0x2,%ebx
    79c1:	0f 85 29 01 00 00    	jne    7af0 <dlmallinfo+0x150>
    79c7:	4c 8b 05 7a 57 00 00 	mov    0x577a(%rip),%r8        # d148 <_gm_+0x28>
    79ce:	4d 85 c0             	test   %r8,%r8
    79d1:	0f 84 05 01 00 00    	je     7adc <dlmallinfo+0x13c>
    79d7:	48 8b 2d 52 57 00 00 	mov    0x5752(%rip),%rbp        # d130 <_gm_+0x10>
    79de:	4c 8d 15 b3 5a 00 00 	lea    0x5ab3(%rip),%r10        # d498 <_gm_+0x378>
    79e5:	41 bb 01 00 00 00    	mov    $0x1,%r11d
    79eb:	4c 8d 4d 50          	lea    0x50(%rbp),%r9
    79ef:	4c 89 c9             	mov    %r9,%rcx
    79f2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    79f8:	49 8b 32             	mov    (%r10),%rsi
    79fb:	48 8d 46 10          	lea    0x10(%rsi),%rax
    79ff:	a8 0f                	test   $0xf,%al
    7a01:	0f 84 b9 00 00 00    	je     7ac0 <dlmallinfo+0x120>
    7a07:	48 f7 d8             	neg    %rax
    7a0a:	83 e0 0f             	and    $0xf,%eax
    7a0d:	48 01 f0             	add    %rsi,%rax
    7a10:	72 4c                	jb     7a5e <dlmallinfo+0xbe>
    7a12:	4d 8b 6a 08          	mov    0x8(%r10),%r13
    7a16:	49 01 f5             	add    %rsi,%r13
    7a19:	49 39 c5             	cmp    %rax,%r13
    7a1c:	76 40                	jbe    7a5e <dlmallinfo+0xbe>
    7a1e:	49 39 c0             	cmp    %rax,%r8
    7a21:	75 31                	jne    7a54 <dlmallinfo+0xb4>
    7a23:	eb 39                	jmp    7a5e <dlmallinfo+0xbe>
    7a25:	0f 1f 00             	nopl   (%rax)
    7a28:	49 89 d4             	mov    %rdx,%r12
    7a2b:	83 e2 03             	and    $0x3,%edx
    7a2e:	49 83 e4 f8          	and    $0xfffffffffffffff8,%r12
    7a32:	4c 01 e1             	add    %r12,%rcx
    7a35:	48 83 fa 01          	cmp    $0x1,%rdx
    7a39:	75 07                	jne    7a42 <dlmallinfo+0xa2>
    7a3b:	4d 01 e1             	add    %r12,%r9
    7a3e:	49 83 c3 01          	add    $0x1,%r11
    7a42:	4c 01 e0             	add    %r12,%rax
    7a45:	48 39 c6             	cmp    %rax,%rsi
    7a48:	77 14                	ja     7a5e <dlmallinfo+0xbe>
    7a4a:	4c 39 c0             	cmp    %r8,%rax
    7a4d:	74 0f                	je     7a5e <dlmallinfo+0xbe>
    7a4f:	4c 39 e8             	cmp    %r13,%rax
    7a52:	73 0a                	jae    7a5e <dlmallinfo+0xbe>
    7a54:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7a58:	48 83 fa 0b          	cmp    $0xb,%rdx
    7a5c:	75 ca                	jne    7a28 <dlmallinfo+0x88>
    7a5e:	4d 8b 52 10          	mov    0x10(%r10),%r10
    7a62:	4d 85 d2             	test   %r10,%r10
    7a65:	75 91                	jne    79f8 <dlmallinfo+0x58>
    7a67:	48 8b 05 0a 5a 00 00 	mov    0x5a0a(%rip),%rax        # d478 <_gm_+0x358>
    7a6e:	89 ca                	mov    %ecx,%edx
    7a70:	89 c6                	mov    %eax,%esi
    7a72:	44 29 c8             	sub    %r9d,%eax
    7a75:	29 ce                	sub    %ecx,%esi
    7a77:	89 f1                	mov    %esi,%ecx
    7a79:	8b 35 01 5a 00 00    	mov    0x5a01(%rip),%esi        # d480 <_gm_+0x360>
    7a7f:	85 db                	test   %ebx,%ebx
    7a81:	75 4d                	jne    7ad0 <dlmallinfo+0x130>
    7a83:	89 47 1c             	mov    %eax,0x1c(%rdi)
    7a86:	89 17                	mov    %edx,(%rdi)
    7a88:	48 89 f8             	mov    %rdi,%rax
    7a8b:	44 89 5f 04          	mov    %r11d,0x4(%rdi)
    7a8f:	48 c7 47 08 00 00 00 	movq   $0x0,0x8(%rdi)
    7a96:	00 
    7a97:	89 4f 10             	mov    %ecx,0x10(%rdi)
    7a9a:	89 77 14             	mov    %esi,0x14(%rdi)
    7a9d:	c7 47 18 00 00 00 00 	movl   $0x0,0x18(%rdi)
    7aa4:	44 89 4f 20          	mov    %r9d,0x20(%rdi)
    7aa8:	89 6f 24             	mov    %ebp,0x24(%rdi)
    7aab:	48 83 c4 18          	add    $0x18,%rsp
    7aaf:	5b                   	pop    %rbx
    7ab0:	5d                   	pop    %rbp
    7ab1:	41 5c                	pop    %r12
    7ab3:	41 5d                	pop    %r13
    7ab5:	c3                   	retq   
    7ab6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7abd:	00 00 00 
    7ac0:	48 89 f0             	mov    %rsi,%rax
    7ac3:	e9 4a ff ff ff       	jmpq   7a12 <dlmallinfo+0x72>
    7ac8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7acf:	00 
    7ad0:	c7 05 ba 59 00 00 00 	movl   $0x0,0x59ba(%rip)        # d494 <_gm_+0x374>
    7ad7:	00 00 00 
    7ada:	eb a7                	jmp    7a83 <dlmallinfo+0xe3>
    7adc:	31 ed                	xor    %ebp,%ebp
    7ade:	45 31 c9             	xor    %r9d,%r9d
    7ae1:	31 c0                	xor    %eax,%eax
    7ae3:	31 f6                	xor    %esi,%esi
    7ae5:	31 c9                	xor    %ecx,%ecx
    7ae7:	45 31 db             	xor    %r11d,%r11d
    7aea:	31 d2                	xor    %edx,%edx
    7aec:	eb 95                	jmp    7a83 <dlmallinfo+0xe3>
    7aee:	66 90                	xchg   %ax,%ax
    7af0:	b8 01 00 00 00       	mov    $0x1,%eax
    7af5:	87 05 99 59 00 00    	xchg   %eax,0x5999(%rip)        # d494 <_gm_+0x374>
    7afb:	85 c0                	test   %eax,%eax
    7afd:	74 1f                	je     7b1e <dlmallinfo+0x17e>
    7aff:	ba 01 00 00 00       	mov    $0x1,%edx
    7b04:	0f 1f 40 00          	nopl   0x0(%rax)
    7b08:	8b 05 86 59 00 00    	mov    0x5986(%rip),%eax        # d494 <_gm_+0x374>
    7b0e:	85 c0                	test   %eax,%eax
    7b10:	75 f6                	jne    7b08 <dlmallinfo+0x168>
    7b12:	89 d0                	mov    %edx,%eax
    7b14:	87 05 7a 59 00 00    	xchg   %eax,0x597a(%rip)        # d494 <_gm_+0x374>
    7b1a:	85 c0                	test   %eax,%eax
    7b1c:	75 ea                	jne    7b08 <dlmallinfo+0x168>
    7b1e:	4c 8b 05 23 56 00 00 	mov    0x5623(%rip),%r8        # d148 <_gm_+0x28>
    7b25:	8b 1d 65 59 00 00    	mov    0x5965(%rip),%ebx        # d490 <_gm_+0x370>
    7b2b:	83 e3 02             	and    $0x2,%ebx
    7b2e:	4d 85 c0             	test   %r8,%r8
    7b31:	0f 85 a0 fe ff ff    	jne    79d7 <dlmallinfo+0x37>
    7b37:	31 ed                	xor    %ebp,%ebp
    7b39:	45 31 c9             	xor    %r9d,%r9d
    7b3c:	31 c0                	xor    %eax,%eax
    7b3e:	31 f6                	xor    %esi,%esi
    7b40:	31 c9                	xor    %ecx,%ecx
    7b42:	45 31 db             	xor    %r11d,%r11d
    7b45:	31 d2                	xor    %edx,%edx
    7b47:	e9 33 ff ff ff       	jmpq   7a7f <dlmallinfo+0xdf>
    7b4c:	0f 1f 40 00          	nopl   0x0(%rax)
    7b50:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    7b55:	e8 d6 c9 ff ff       	callq  4530 <init_mparams>
    7b5a:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    7b5f:	e9 54 fe ff ff       	jmpq   79b8 <dlmallinfo+0x18>
    7b64:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7b6b:	00 00 00 
    7b6e:	66 90                	xchg   %ax,%ax

0000000000007b70 <__memcpy>:
    7b70:	48 85 d2             	test   %rdx,%rdx
    7b73:	48 89 f8             	mov    %rdi,%rax
    7b76:	74 7e                	je     7bf6 <__memcpy+0x86>
    7b78:	48 39 f7             	cmp    %rsi,%rdi
    7b7b:	74 79                	je     7bf6 <__memcpy+0x86>
    7b7d:	48 39 f7             	cmp    %rsi,%rdi
    7b80:	73 0d                	jae    7b8f <__memcpy+0x1f>
    7b82:	48 8d 0c 17          	lea    (%rdi,%rdx,1),%rcx
    7b86:	48 39 ce             	cmp    %rcx,%rsi
    7b89:	0f 82 c8 00 00 00    	jb     7c57 <__memcpy+0xe7>
    7b8f:	48 39 f0             	cmp    %rsi,%rax
    7b92:	76 0d                	jbe    7ba1 <__memcpy+0x31>
    7b94:	48 8d 0c 16          	lea    (%rsi,%rdx,1),%rcx
    7b98:	48 39 c8             	cmp    %rcx,%rax
    7b9b:	0f 82 b6 00 00 00    	jb     7c57 <__memcpy+0xe7>
    7ba1:	48 89 f1             	mov    %rsi,%rcx
    7ba4:	48 09 c1             	or     %rax,%rcx
    7ba7:	83 e1 07             	and    $0x7,%ecx
    7baa:	75 54                	jne    7c00 <__memcpy+0x90>
    7bac:	48 89 d1             	mov    %rdx,%rcx
    7baf:	83 e2 07             	and    $0x7,%edx
    7bb2:	48 89 c7             	mov    %rax,%rdi
    7bb5:	48 c1 e9 03          	shr    $0x3,%rcx
    7bb9:	49 89 d0             	mov    %rdx,%r8
    7bbc:	48 85 c9             	test   %rcx,%rcx
    7bbf:	74 26                	je     7be7 <__memcpy+0x77>
    7bc1:	4c 8d 0c cd 00 00 00 	lea    0x0(,%rcx,8),%r9
    7bc8:	00 
    7bc9:	48 89 f9             	mov    %rdi,%rcx
    7bcc:	4e 8d 14 0e          	lea    (%rsi,%r9,1),%r10
    7bd0:	48 8b 16             	mov    (%rsi),%rdx
    7bd3:	48 83 c6 08          	add    $0x8,%rsi
    7bd7:	48 83 c1 08          	add    $0x8,%rcx
    7bdb:	48 89 51 f8          	mov    %rdx,-0x8(%rcx)
    7bdf:	49 39 f2             	cmp    %rsi,%r10
    7be2:	75 ec                	jne    7bd0 <__memcpy+0x60>
    7be4:	4c 01 cf             	add    %r9,%rdi
    7be7:	4d 85 c0             	test   %r8,%r8
    7bea:	74 0a                	je     7bf6 <__memcpy+0x86>
    7bec:	4a 8d 14 06          	lea    (%rsi,%r8,1),%rdx
    7bf0:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    7bf1:	48 39 d6             	cmp    %rdx,%rsi
    7bf4:	75 fa                	jne    7bf0 <__memcpy+0x80>
    7bf6:	f3 c3                	repz retq 
    7bf8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    7bff:	00 
    7c00:	48 89 f1             	mov    %rsi,%rcx
    7c03:	48 31 c1             	xor    %rax,%rcx
    7c06:	83 e1 07             	and    $0x7,%ecx
    7c09:	75 2d                	jne    7c38 <__memcpy+0xc8>
    7c0b:	48 83 fa 07          	cmp    $0x7,%rdx
    7c0f:	76 27                	jbe    7c38 <__memcpy+0xc8>
    7c11:	48 89 f1             	mov    %rsi,%rcx
    7c14:	bf 08 00 00 00       	mov    $0x8,%edi
    7c19:	83 e1 07             	and    $0x7,%ecx
    7c1c:	48 29 cf             	sub    %rcx,%rdi
    7c1f:	48 29 fa             	sub    %rdi,%rdx
    7c22:	48 89 d1             	mov    %rdx,%rcx
    7c25:	83 e2 07             	and    $0x7,%edx
    7c28:	49 89 d0             	mov    %rdx,%r8
    7c2b:	48 c1 e9 03          	shr    $0x3,%rcx
    7c2f:	48 89 fa             	mov    %rdi,%rdx
    7c32:	eb 09                	jmp    7c3d <__memcpy+0xcd>
    7c34:	0f 1f 40 00          	nopl   0x0(%rax)
    7c38:	45 31 c0             	xor    %r8d,%r8d
    7c3b:	31 c9                	xor    %ecx,%ecx
    7c3d:	4c 8d 0c 16          	lea    (%rsi,%rdx,1),%r9
    7c41:	48 89 c7             	mov    %rax,%rdi
    7c44:	0f 1f 40 00          	nopl   0x0(%rax)
    7c48:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    7c49:	4c 39 ce             	cmp    %r9,%rsi
    7c4c:	75 fa                	jne    7c48 <__memcpy+0xd8>
    7c4e:	48 8d 3c 10          	lea    (%rax,%rdx,1),%rdi
    7c52:	e9 65 ff ff ff       	jmpq   7bbc <__memcpy+0x4c>
    7c57:	48 83 ec 08          	sub    $0x8,%rsp
    7c5b:	e8 70 12 00 00       	callq  8ed0 <abort>

0000000000007c60 <memcpy>:
    7c60:	e9 0b ff ff ff       	jmpq   7b70 <__memcpy>

0000000000007c65 <__memset>:
    7c65:	48 89 7c 24 e8       	mov    %rdi,-0x18(%rsp)
    7c6a:	89 74 24 e4          	mov    %esi,-0x1c(%rsp)
    7c6e:	48 89 54 24 d8       	mov    %rdx,-0x28(%rsp)
    7c73:	48 83 7c 24 d8 00    	cmpq   $0x0,-0x28(%rsp)
    7c79:	74 2c                	je     7ca7 <__memset+0x42>
    7c7b:	48 8b 44 24 e8       	mov    -0x18(%rsp),%rax
    7c80:	48 89 44 24 f8       	mov    %rax,-0x8(%rsp)
    7c85:	48 8b 44 24 f8       	mov    -0x8(%rsp),%rax
    7c8a:	48 8d 50 01          	lea    0x1(%rax),%rdx
    7c8e:	48 89 54 24 f8       	mov    %rdx,-0x8(%rsp)
    7c93:	8b 54 24 e4          	mov    -0x1c(%rsp),%edx
    7c97:	88 10                	mov    %dl,(%rax)
    7c99:	48 83 6c 24 d8 01    	subq   $0x1,-0x28(%rsp)
    7c9f:	48 83 7c 24 d8 00    	cmpq   $0x0,-0x28(%rsp)
    7ca5:	75 de                	jne    7c85 <__memset+0x20>
    7ca7:	48 8b 44 24 e8       	mov    -0x18(%rsp),%rax
    7cac:	c3                   	retq   

0000000000007cad <memset>:
    7cad:	e9 b3 ff ff ff       	jmpq   7c65 <__memset>
    7cb2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7cb9:	00 00 00 
    7cbc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007cc0 <memset_s>:
    7cc0:	48 85 ff             	test   %rdi,%rdi
    7cc3:	53                   	push   %rbx
    7cc4:	74 42                	je     7d08 <memset_s+0x48>
    7cc6:	48 39 f1             	cmp    %rsi,%rcx
    7cc9:	89 d0                	mov    %edx,%eax
    7ccb:	76 23                	jbe    7cf0 <memset_s+0x30>
    7ccd:	bb 4b 00 00 00       	mov    $0x4b,%ebx
    7cd2:	48 89 f2             	mov    %rsi,%rdx
    7cd5:	48 8b 0d 5c 53 00 00 	mov    0x535c(%rip),%rcx        # d038 <__memset_vp>
    7cdc:	89 c6                	mov    %eax,%esi
    7cde:	ff d1                	callq  *%rcx
    7ce0:	e8 5b 04 00 00       	callq  8140 <__errno_location>
    7ce5:	89 18                	mov    %ebx,(%rax)
    7ce7:	89 d8                	mov    %ebx,%eax
    7ce9:	5b                   	pop    %rbx
    7cea:	c3                   	retq   
    7ceb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7cf0:	31 db                	xor    %ebx,%ebx
    7cf2:	4c 8b 05 3f 53 00 00 	mov    0x533f(%rip),%r8        # d038 <__memset_vp>
    7cf9:	48 89 ca             	mov    %rcx,%rdx
    7cfc:	89 c6                	mov    %eax,%esi
    7cfe:	41 ff d0             	callq  *%r8
    7d01:	89 d8                	mov    %ebx,%eax
    7d03:	5b                   	pop    %rbx
    7d04:	c3                   	retq   
    7d05:	0f 1f 00             	nopl   (%rax)
    7d08:	bb 16 00 00 00       	mov    $0x16,%ebx
    7d0d:	eb d1                	jmp    7ce0 <memset_s+0x20>
    7d0f:	90                   	nop

0000000000007d10 <heap_init>:
    7d10:	48 83 3d 38 51 00 00 	cmpq   $0x0,0x5138(%rip)        # ce50 <heap_base>
    7d17:	00 
    7d18:	b8 01 00 00 00       	mov    $0x1,%eax
    7d1d:	75 05                	jne    7d24 <heap_init+0x14>
    7d1f:	48 85 ff             	test   %rdi,%rdi
    7d22:	75 0c                	jne    7d30 <heap_init+0x20>
    7d24:	f3 c3                	repz retq 
    7d26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7d2d:	00 00 00 
    7d30:	f7 c7 ff 0f 00 00    	test   $0xfff,%edi
    7d36:	75 ec                	jne    7d24 <heap_init+0x14>
    7d38:	49 89 f0             	mov    %rsi,%r8
    7d3b:	49 09 d0             	or     %rdx,%r8
    7d3e:	41 f7 c0 ff 0f 00 00 	test   $0xfff,%r8d
    7d45:	75 dd                	jne    7d24 <heap_init+0x14>
    7d47:	48 89 3d 02 51 00 00 	mov    %rdi,0x5102(%rip)        # ce50 <heap_base>
    7d4e:	48 89 35 f3 50 00 00 	mov    %rsi,0x50f3(%rip)        # ce48 <heap_size>
    7d55:	31 c0                	xor    %eax,%eax
    7d57:	48 89 15 da 50 00 00 	mov    %rdx,0x50da(%rip)        # ce38 <heap_min_size>
    7d5e:	89 0d dc 50 00 00    	mov    %ecx,0x50dc(%rip)        # ce40 <is_edmm_supported>
    7d64:	c3                   	retq   
    7d65:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7d6c:	00 00 00 
    7d6f:	90                   	nop

0000000000007d70 <sbrk>:
    7d70:	55                   	push   %rbp
    7d71:	53                   	push   %rbx
    7d72:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    7d79:	48 83 ec 08          	sub    $0x8,%rsp
    7d7d:	48 8b 15 cc 50 00 00 	mov    0x50cc(%rip),%rdx        # ce50 <heap_base>
    7d84:	48 85 d2             	test   %rdx,%rdx
    7d87:	0f 84 87 00 00 00    	je     7e14 <sbrk+0xa4>
    7d8d:	48 85 ff             	test   %rdi,%rdi
    7d90:	48 8b 2d 81 57 00 00 	mov    0x5781(%rip),%rbp        # d518 <heap_used.2396>
    7d97:	0f 88 83 00 00 00    	js     7e20 <sbrk+0xb0>
    7d9d:	48 89 f8             	mov    %rdi,%rax
    7da0:	48 f7 d0             	not    %rax
    7da3:	48 39 e8             	cmp    %rbp,%rax
    7da6:	72 6c                	jb     7e14 <sbrk+0xa4>
    7da8:	48 8d 04 2f          	lea    (%rdi,%rbp,1),%rax
    7dac:	48 3b 05 95 50 00 00 	cmp    0x5095(%rip),%rax        # ce48 <heap_size>
    7db3:	77 5f                	ja     7e14 <sbrk+0xa4>
    7db5:	48 39 05 64 57 00 00 	cmp    %rax,0x5764(%rip)        # d520 <g_peak_heap_used>
    7dbc:	48 89 c1             	mov    %rax,%rcx
    7dbf:	48 8d 1c 2a          	lea    (%rdx,%rbp,1),%rbx
    7dc3:	48 0f 43 0d 55 57 00 	cmovae 0x5755(%rip),%rcx        # d520 <g_peak_heap_used>
    7dca:	00 
    7dcb:	48 89 05 46 57 00 00 	mov    %rax,0x5746(%rip)        # d518 <heap_used.2396>
    7dd2:	48 89 0d 47 57 00 00 	mov    %rcx,0x5747(%rip)        # d520 <g_peak_heap_used>
    7dd9:	8b 0d 61 50 00 00    	mov    0x5061(%rip),%ecx        # ce40 <is_edmm_supported>
    7ddf:	85 c9                	test   %ecx,%ecx
    7de1:	74 31                	je     7e14 <sbrk+0xa4>
    7de3:	48 8b 0d 4e 50 00 00 	mov    0x504e(%rip),%rcx        # ce38 <heap_min_size>
    7dea:	48 39 c8             	cmp    %rcx,%rax
    7ded:	76 25                	jbe    7e14 <sbrk+0xa4>
    7def:	48 39 e9             	cmp    %rbp,%rcx
    7df2:	49 89 d8             	mov    %rbx,%r8
    7df5:	72 0a                	jb     7e01 <sbrk+0x91>
    7df7:	48 29 c8             	sub    %rcx,%rax
    7dfa:	4c 8d 04 0a          	lea    (%rdx,%rcx,1),%r8
    7dfe:	48 89 c7             	mov    %rax,%rdi
    7e01:	48 89 fe             	mov    %rdi,%rsi
    7e04:	4c 89 c7             	mov    %r8,%rdi
    7e07:	48 c1 ee 0c          	shr    $0xc,%rsi
    7e0b:	e8 d0 a1 ff ff       	callq  1fe0 <apply_EPC_pages>
    7e10:	85 c0                	test   %eax,%eax
    7e12:	75 5b                	jne    7e6f <sbrk+0xff>
    7e14:	48 83 c4 08          	add    $0x8,%rsp
    7e18:	48 89 d8             	mov    %rbx,%rax
    7e1b:	5b                   	pop    %rbx
    7e1c:	5d                   	pop    %rbp
    7e1d:	c3                   	retq   
    7e1e:	66 90                	xchg   %ax,%ax
    7e20:	48 89 fe             	mov    %rdi,%rsi
    7e23:	48 f7 de             	neg    %rsi
    7e26:	48 39 ee             	cmp    %rbp,%rsi
    7e29:	77 e9                	ja     7e14 <sbrk+0xa4>
    7e2b:	48 8d 04 2f          	lea    (%rdi,%rbp,1),%rax
    7e2f:	8b 3d 0b 50 00 00    	mov    0x500b(%rip),%edi        # ce40 <is_edmm_supported>
    7e35:	48 89 05 dc 56 00 00 	mov    %rax,0x56dc(%rip)        # d518 <heap_used.2396>
    7e3c:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
    7e40:	85 ff                	test   %edi,%edi
    7e42:	74 d0                	je     7e14 <sbrk+0xa4>
    7e44:	48 8b 0d ed 4f 00 00 	mov    0x4fed(%rip),%rcx        # ce38 <heap_min_size>
    7e4b:	48 39 e9             	cmp    %rbp,%rcx
    7e4e:	73 c4                	jae    7e14 <sbrk+0xa4>
    7e50:	48 39 c1             	cmp    %rax,%rcx
    7e53:	48 89 df             	mov    %rbx,%rdi
    7e56:	72 0a                	jb     7e62 <sbrk+0xf2>
    7e58:	48 89 ee             	mov    %rbp,%rsi
    7e5b:	48 8d 3c 0a          	lea    (%rdx,%rcx,1),%rdi
    7e5f:	48 29 ce             	sub    %rcx,%rsi
    7e62:	48 c1 ee 0c          	shr    $0xc,%rsi
    7e66:	e8 f5 a1 ff ff       	callq  2060 <trim_EPC_pages>
    7e6b:	85 c0                	test   %eax,%eax
    7e6d:	74 a5                	je     7e14 <sbrk+0xa4>
    7e6f:	48 89 2d a2 56 00 00 	mov    %rbp,0x56a2(%rip)        # d518 <heap_used.2396>
    7e76:	48 c7 c3 ff ff ff ff 	mov    $0xffffffffffffffff,%rbx
    7e7d:	eb 95                	jmp    7e14 <sbrk+0xa4>
    7e7f:	90                   	nop

0000000000007e80 <sgx_init_string_lib>:
    7e80:	31 c0                	xor    %eax,%eax
    7e82:	c3                   	retq   
    7e83:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7e8a:	00 00 00 
    7e8d:	0f 1f 00             	nopl   (%rax)

0000000000007e90 <sgx_spin_lock>:
    7e90:	48 83 ec 18          	sub    $0x18,%rsp
    7e94:	ba 01 00 00 00       	mov    $0x1,%edx
    7e99:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7ea0:	00 00 
    7ea2:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7ea7:	31 c0                	xor    %eax,%eax
    7ea9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7eb0:	f0 87 17             	lock xchg %edx,(%rdi)
    7eb3:	89 54 24 04          	mov    %edx,0x4(%rsp)
    7eb7:	8b 44 24 04          	mov    0x4(%rsp),%eax
    7ebb:	85 c0                	test   %eax,%eax
    7ebd:	74 11                	je     7ed0 <sgx_spin_lock+0x40>
    7ebf:	90                   	nop
    7ec0:	8b 07                	mov    (%rdi),%eax
    7ec2:	85 c0                	test   %eax,%eax
    7ec4:	74 ea                	je     7eb0 <sgx_spin_lock+0x20>
    7ec6:	f3 90                	pause  
    7ec8:	eb f6                	jmp    7ec0 <sgx_spin_lock+0x30>
    7eca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    7ed0:	31 c0                	xor    %eax,%eax
    7ed2:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    7ed7:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    7ede:	00 00 
    7ee0:	75 05                	jne    7ee7 <sgx_spin_lock+0x57>
    7ee2:	48 83 c4 18          	add    $0x18,%rsp
    7ee6:	c3                   	retq   
    7ee7:	e8 04 c6 ff ff       	callq  44f0 <__stack_chk_fail>
    7eec:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000007ef0 <sgx_spin_unlock>:
    7ef0:	c7 07 00 00 00 00    	movl   $0x0,(%rdi)
    7ef6:	31 c0                	xor    %eax,%eax
    7ef8:	c3                   	retq   
    7ef9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000007f00 <strncmp>:
    7f00:	31 c0                	xor    %eax,%eax
    7f02:	48 85 d2             	test   %rdx,%rdx
    7f05:	74 2b                	je     7f32 <strncmp+0x32>
    7f07:	48 01 fa             	add    %rdi,%rdx
    7f0a:	eb 11                	jmp    7f1d <strncmp+0x1d>
    7f0c:	0f 1f 40 00          	nopl   0x0(%rax)
    7f10:	48 83 c7 01          	add    $0x1,%rdi
    7f14:	84 c0                	test   %al,%al
    7f16:	74 18                	je     7f30 <strncmp+0x30>
    7f18:	48 39 d7             	cmp    %rdx,%rdi
    7f1b:	74 13                	je     7f30 <strncmp+0x30>
    7f1d:	48 83 c6 01          	add    $0x1,%rsi
    7f21:	0f b6 07             	movzbl (%rdi),%eax
    7f24:	0f b6 4e ff          	movzbl -0x1(%rsi),%ecx
    7f28:	38 c8                	cmp    %cl,%al
    7f2a:	74 e4                	je     7f10 <strncmp+0x10>
    7f2c:	29 c8                	sub    %ecx,%eax
    7f2e:	c3                   	retq   
    7f2f:	90                   	nop
    7f30:	31 c0                	xor    %eax,%eax
    7f32:	f3 c3                	repz retq 
    7f34:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    7f3b:	00 00 00 
    7f3e:	66 90                	xchg   %ax,%ax

0000000000007f40 <memcpy_s>:
    7f40:	55                   	push   %rbp
    7f41:	53                   	push   %rbx
    7f42:	31 ed                	xor    %ebp,%ebp
    7f44:	48 83 ec 08          	sub    $0x8,%rsp
    7f48:	48 85 c9             	test   %rcx,%rcx
    7f4b:	74 1d                	je     7f6a <memcpy_s+0x2a>
    7f4d:	48 85 ff             	test   %rdi,%rdi
    7f50:	48 89 d3             	mov    %rdx,%rbx
    7f53:	74 4b                	je     7fa0 <memcpy_s+0x60>
    7f55:	48 85 d2             	test   %rdx,%rdx
    7f58:	74 1e                	je     7f78 <memcpy_s+0x38>
    7f5a:	48 39 f1             	cmp    %rsi,%rcx
    7f5d:	77 19                	ja     7f78 <memcpy_s+0x38>
    7f5f:	48 89 ca             	mov    %rcx,%rdx
    7f62:	48 89 de             	mov    %rbx,%rsi
    7f65:	e8 f6 fc ff ff       	callq  7c60 <memcpy>
    7f6a:	48 83 c4 08          	add    $0x8,%rsp
    7f6e:	89 e8                	mov    %ebp,%eax
    7f70:	5b                   	pop    %rbx
    7f71:	5d                   	pop    %rbp
    7f72:	c3                   	retq   
    7f73:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    7f78:	48 89 f2             	mov    %rsi,%rdx
    7f7b:	31 f6                	xor    %esi,%esi
    7f7d:	e8 2b fd ff ff       	callq  7cad <memset>
    7f82:	48 85 db             	test   %rbx,%rbx
    7f85:	74 19                	je     7fa0 <memcpy_s+0x60>
    7f87:	e8 b4 01 00 00       	callq  8140 <__errno_location>
    7f8c:	bd 22 00 00 00       	mov    $0x22,%ebp
    7f91:	c7 00 22 00 00 00    	movl   $0x22,(%rax)
    7f97:	eb d1                	jmp    7f6a <memcpy_s+0x2a>
    7f99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    7fa0:	e8 9b 01 00 00       	callq  8140 <__errno_location>
    7fa5:	bd 16 00 00 00       	mov    $0x16,%ebp
    7faa:	c7 00 16 00 00 00    	movl   $0x16,(%rax)
    7fb0:	eb b8                	jmp    7f6a <memcpy_s+0x2a>

0000000000007fb2 <setjmp>:
    7fb2:	50                   	push   %rax
    7fb3:	53                   	push   %rbx
    7fb4:	51                   	push   %rcx
    7fb5:	52                   	push   %rdx
    7fb6:	56                   	push   %rsi
    7fb7:	57                   	push   %rdi
    7fb8:	41 50                	push   %r8
    7fba:	41 51                	push   %r9
    7fbc:	41 52                	push   %r10
    7fbe:	41 53                	push   %r11
    7fc0:	41 54                	push   %r12
    7fc2:	41 55                	push   %r13
    7fc4:	41 56                	push   %r14
    7fc6:	41 57                	push   %r15
    7fc8:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
    7fcf:	e8 9c 93 ff ff       	callq  1370 <sgx_is_within_enclave>
    7fd4:	83 f8 00             	cmp    $0x0,%eax
    7fd7:	74 60                	je     8039 <.crash>
    7fd9:	41 5f                	pop    %r15
    7fdb:	41 5e                	pop    %r14
    7fdd:	41 5d                	pop    %r13
    7fdf:	41 5c                	pop    %r12
    7fe1:	41 5b                	pop    %r11
    7fe3:	41 5a                	pop    %r10
    7fe5:	41 59                	pop    %r9
    7fe7:	41 58                	pop    %r8
    7fe9:	5f                   	pop    %rdi
    7fea:	5e                   	pop    %rsi
    7feb:	5a                   	pop    %rdx
    7fec:	59                   	pop    %rcx
    7fed:	5b                   	pop    %rbx
    7fee:	58                   	pop    %rax
    7fef:	4c 8b 1c 24          	mov    (%rsp),%r11
    7ff3:	48 89 1f             	mov    %rbx,(%rdi)
    7ff6:	48 89 6f 08          	mov    %rbp,0x8(%rdi)
    7ffa:	4c 89 67 10          	mov    %r12,0x10(%rdi)
    7ffe:	4c 89 6f 18          	mov    %r13,0x18(%rdi)
    8002:	4c 89 77 20          	mov    %r14,0x20(%rdi)
    8006:	4c 89 7f 28          	mov    %r15,0x28(%rdi)
    800a:	48 89 67 30          	mov    %rsp,0x30(%rdi)
    800e:	4c 89 5f 38          	mov    %r11,0x38(%rdi)
    8012:	e8 94 0b 00 00       	callq  8bab <get_stack_guard>
    8017:	48 31 07             	xor    %rax,(%rdi)
    801a:	48 31 47 08          	xor    %rax,0x8(%rdi)
    801e:	48 31 47 10          	xor    %rax,0x10(%rdi)
    8022:	48 31 47 18          	xor    %rax,0x18(%rdi)
    8026:	48 31 47 20          	xor    %rax,0x20(%rdi)
    802a:	48 31 47 28          	xor    %rax,0x28(%rdi)
    802e:	48 31 47 30          	xor    %rax,0x30(%rdi)
    8032:	48 31 47 38          	xor    %rax,0x38(%rdi)
    8036:	31 c0                	xor    %eax,%eax
    8038:	c3                   	retq   

0000000000008039 <.crash>:
    8039:	0f 0b                	ud2    

000000000000803b <longjmp>:
    803b:	50                   	push   %rax
    803c:	53                   	push   %rbx
    803d:	51                   	push   %rcx
    803e:	52                   	push   %rdx
    803f:	56                   	push   %rsi
    8040:	57                   	push   %rdi
    8041:	41 50                	push   %r8
    8043:	41 51                	push   %r9
    8045:	41 52                	push   %r10
    8047:	41 53                	push   %r11
    8049:	41 54                	push   %r12
    804b:	41 55                	push   %r13
    804d:	41 56                	push   %r14
    804f:	41 57                	push   %r15
    8051:	57                   	push   %rdi
    8052:	48 c7 c6 08 00 00 00 	mov    $0x8,%rsi
    8059:	e8 12 93 ff ff       	callq  1370 <sgx_is_within_enclave>
    805e:	83 f8 00             	cmp    $0x0,%eax
    8061:	74 d6                	je     8039 <.crash>
    8063:	5f                   	pop    %rdi
    8064:	48 8b 57 30          	mov    0x30(%rdi),%rdx
    8068:	e8 3e 0b 00 00       	callq  8bab <get_stack_guard>
    806d:	48 31 c2             	xor    %rax,%rdx
    8070:	52                   	push   %rdx
    8071:	5f                   	pop    %rdi
    8072:	e8 19 b2 ff ff       	callq  3290 <is_valid_sp>
    8077:	83 f8 00             	cmp    $0x0,%eax
    807a:	74 bd                	je     8039 <.crash>
    807c:	41 5f                	pop    %r15
    807e:	41 5e                	pop    %r14
    8080:	41 5d                	pop    %r13
    8082:	41 5c                	pop    %r12
    8084:	41 5b                	pop    %r11
    8086:	41 5a                	pop    %r10
    8088:	41 59                	pop    %r9
    808a:	41 58                	pop    %r8
    808c:	5f                   	pop    %rdi
    808d:	5e                   	pop    %rsi
    808e:	5a                   	pop    %rdx
    808f:	59                   	pop    %rcx
    8090:	5b                   	pop    %rbx
    8091:	58                   	pop    %rax
    8092:	89 f0                	mov    %esi,%eax
    8094:	48 8b 1f             	mov    (%rdi),%rbx
    8097:	48 8b 77 08          	mov    0x8(%rdi),%rsi
    809b:	4c 8b 67 10          	mov    0x10(%rdi),%r12
    809f:	4c 8b 6f 18          	mov    0x18(%rdi),%r13
    80a3:	4c 8b 77 20          	mov    0x20(%rdi),%r14
    80a7:	4c 8b 7f 28          	mov    0x28(%rdi),%r15
    80ab:	48 8b 57 30          	mov    0x30(%rdi),%rdx
    80af:	48 8b 4f 38          	mov    0x38(%rdi),%rcx
    80b3:	50                   	push   %rax
    80b4:	e8 f2 0a 00 00       	callq  8bab <get_stack_guard>
    80b9:	48 31 c3             	xor    %rax,%rbx
    80bc:	48 31 c6             	xor    %rax,%rsi
    80bf:	49 31 c4             	xor    %rax,%r12
    80c2:	49 31 c5             	xor    %rax,%r13
    80c5:	49 31 c6             	xor    %rax,%r14
    80c8:	49 31 c7             	xor    %rax,%r15
    80cb:	48 31 c2             	xor    %rax,%rdx
    80ce:	48 31 c1             	xor    %rax,%rcx
    80d1:	58                   	pop    %rax
    80d2:	48 89 f5             	mov    %rsi,%rbp
    80d5:	48 89 0a             	mov    %rcx,(%rdx)
    80d8:	48 89 d4             	mov    %rdx,%rsp
    80db:	85 c0                	test   %eax,%eax
    80dd:	75 02                	jne    80e1 <longjmp+0xa6>
    80df:	ff c0                	inc    %eax
    80e1:	c3                   	retq   
    80e2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    80e9:	00 00 00 
    80ec:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000080f0 <rsrv_mem_init>:
    80f0:	48 85 ff             	test   %rdi,%rdi
    80f3:	b8 01 00 00 00       	mov    $0x1,%eax
    80f8:	74 11                	je     810b <rsrv_mem_init+0x1b>
    80fa:	48 89 f1             	mov    %rsi,%rcx
    80fd:	48 09 d1             	or     %rdx,%rcx
    8100:	48 09 f9             	or     %rdi,%rcx
    8103:	f7 c1 ff 0f 00 00    	test   $0xfff,%ecx
    8109:	74 05                	je     8110 <rsrv_mem_init+0x20>
    810b:	f3 c3                	repz retq 
    810d:	0f 1f 00             	nopl   (%rax)
    8110:	48 8b 0d 51 4d 00 00 	mov    0x4d51(%rip),%rcx        # ce68 <rsrv_mem_base>
    8117:	48 f7 d1             	not    %rcx
    811a:	48 39 f1             	cmp    %rsi,%rcx
    811d:	72 ec                	jb     810b <rsrv_mem_init+0x1b>
    811f:	48 89 3d 42 4d 00 00 	mov    %rdi,0x4d42(%rip)        # ce68 <rsrv_mem_base>
    8126:	48 89 35 33 4d 00 00 	mov    %rsi,0x4d33(%rip)        # ce60 <rsrv_mem_size>
    812d:	31 c0                	xor    %eax,%eax
    812f:	48 89 15 22 4d 00 00 	mov    %rdx,0x4d22(%rip)        # ce58 <rsrv_mem_min_size>
    8136:	c3                   	retq   
    8137:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    813e:	00 00 

0000000000008140 <__errno_location>:
    8140:	e9 9b b0 ff ff       	jmpq   31e0 <get_errno_addr>
    8145:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    814c:	00 00 00 
    814f:	90                   	nop

0000000000008150 <sgx_init_crypto_lib>:
    8150:	e9 0b 00 00 00       	jmpq   8160 <init_ipp_cpuid>
    8155:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    815c:	00 00 00 
    815f:	90                   	nop

0000000000008160 <init_ipp_cpuid>:
    8160:	48 83 3d 78 4e 00 00 	cmpq   $0x0,0x4e78(%rip)        # cfe0 <ippcpSetCpuFeatures>
    8167:	00 
    8168:	0f 84 1a 02 00 00    	je     8388 <init_ipp_cpuid+0x228>
    816e:	f7 c7 00 02 00 00    	test   $0x200,%edi
    8174:	0f 84 16 02 00 00    	je     8390 <init_ipp_cpuid+0x230>
    817a:	48 89 f8             	mov    %rdi,%rax
    817d:	48 83 ec 08          	sub    $0x8,%rsp
    8181:	48 b9 00 00 00 00 08 	movabs $0x800000000,%rcx
    8188:	00 00 00 
    818b:	25 00 08 00 00       	and    $0x800,%eax
    8190:	48 83 f8 01          	cmp    $0x1,%rax
    8194:	48 19 c0             	sbb    %rax,%rax
    8197:	48 83 e0 e0          	and    $0xffffffffffffffe0,%rax
    819b:	48 83 c0 7f          	add    $0x7f,%rax
    819f:	48 89 c2             	mov    %rax,%rdx
    81a2:	80 ca 80             	or     $0x80,%dl
    81a5:	f7 c7 00 04 00 00    	test   $0x400,%edi
    81ab:	48 0f 45 c2          	cmovne %rdx,%rax
    81af:	48 89 c2             	mov    %rax,%rdx
    81b2:	80 ce 03             	or     $0x3,%dh
    81b5:	f7 c7 00 00 01 00    	test   $0x10000,%edi
    81bb:	48 0f 45 c2          	cmovne %rdx,%rax
    81bf:	48 89 c2             	mov    %rax,%rdx
    81c2:	80 ce 04             	or     $0x4,%dh
    81c5:	f7 c7 00 40 00 00    	test   $0x4000,%edi
    81cb:	48 0f 45 c2          	cmovne %rdx,%rax
    81cf:	48 89 c2             	mov    %rax,%rdx
    81d2:	80 ce 08             	or     $0x8,%dh
    81d5:	f7 c7 00 20 00 00    	test   $0x2000,%edi
    81db:	48 0f 45 c2          	cmovne %rdx,%rax
    81df:	48 89 c2             	mov    %rax,%rdx
    81e2:	80 ce 20             	or     $0x20,%dh
    81e5:	f7 c7 00 00 02 00    	test   $0x20000,%edi
    81eb:	48 0f 45 c2          	cmovne %rdx,%rax
    81ef:	48 89 c2             	mov    %rax,%rdx
    81f2:	80 ce 40             	or     $0x40,%dh
    81f5:	f7 c7 00 80 00 00    	test   $0x8000,%edi
    81fb:	48 0f 45 c2          	cmovne %rdx,%rax
    81ff:	48 89 c2             	mov    %rax,%rdx
    8202:	80 ce 80             	or     $0x80,%dh
    8205:	f7 c7 00 00 80 00    	test   $0x800000,%edi
    820b:	48 0f 45 c2          	cmovne %rdx,%rax
    820f:	48 89 c2             	mov    %rax,%rdx
    8212:	48 81 ca 00 00 01 00 	or     $0x10000,%rdx
    8219:	f7 c7 00 00 00 10    	test   $0x10000000,%edi
    821f:	48 0f 45 c2          	cmovne %rdx,%rax
    8223:	48 89 c2             	mov    %rax,%rdx
    8226:	48 81 ca 00 00 02 00 	or     $0x20000,%rdx
    822d:	f7 c7 00 00 00 20    	test   $0x20000000,%edi
    8233:	48 0f 45 c2          	cmovne %rdx,%rax
    8237:	48 89 c2             	mov    %rax,%rdx
    823a:	48 81 ca 00 00 08 00 	or     $0x80000,%rdx
    8241:	48 85 cf             	test   %rcx,%rdi
    8244:	48 0f 45 c2          	cmovne %rdx,%rax
    8248:	f7 c7 00 00 00 08    	test   $0x8000000,%edi
    824e:	74 0d                	je     825d <init_ipp_cpuid+0xfd>
    8250:	48 ba 00 00 10 00 02 	movabs $0x200100000,%rdx
    8257:	00 00 00 
    825a:	48 09 d0             	or     %rdx,%rax
    825d:	48 89 c2             	mov    %rax,%rdx
    8260:	48 b9 00 00 00 00 02 	movabs $0x200000000,%rcx
    8267:	00 00 00 
    826a:	48 be 00 00 00 00 04 	movabs $0x400000000,%rsi
    8271:	00 00 00 
    8274:	48 81 ca 00 00 80 00 	or     $0x800000,%rdx
    827b:	48 85 cf             	test   %rcx,%rdi
    827e:	48 0f 45 c2          	cmovne %rdx,%rax
    8282:	48 ba 00 00 00 00 01 	movabs $0x100000000,%rdx
    8289:	00 00 00 
    828c:	48 89 c1             	mov    %rax,%rcx
    828f:	48 81 c9 00 00 40 00 	or     $0x400000,%rcx
    8296:	48 85 d7             	test   %rdx,%rdi
    8299:	48 0f 45 c1          	cmovne %rcx,%rax
    829d:	48 89 c1             	mov    %rax,%rcx
    82a0:	48 81 c9 00 00 20 00 	or     $0x200000,%rcx
    82a7:	48 85 f7             	test   %rsi,%rdi
    82aa:	48 be 00 00 00 00 20 	movabs $0x2000000000,%rsi
    82b1:	00 00 00 
    82b4:	48 0f 45 c1          	cmovne %rcx,%rax
    82b8:	48 89 c1             	mov    %rax,%rcx
    82bb:	48 81 c9 00 00 00 02 	or     $0x2000000,%rcx
    82c2:	f7 c7 00 00 00 01    	test   $0x1000000,%edi
    82c8:	48 0f 45 c1          	cmovne %rcx,%rax
    82cc:	48 89 c1             	mov    %rax,%rcx
    82cf:	48 81 c9 00 00 00 01 	or     $0x1000000,%rcx
    82d6:	48 85 f7             	test   %rsi,%rdi
    82d9:	48 be 00 00 00 00 40 	movabs $0x4000000000,%rsi
    82e0:	00 00 00 
    82e3:	48 0f 45 c1          	cmovne %rcx,%rax
    82e7:	48 89 c1             	mov    %rax,%rcx
    82ea:	48 81 c9 00 00 00 04 	or     $0x4000000,%rcx
    82f1:	48 85 f7             	test   %rsi,%rdi
    82f4:	48 be 00 00 00 00 80 	movabs $0x8000000000,%rsi
    82fb:	00 00 00 
    82fe:	48 0f 45 c1          	cmovne %rcx,%rax
    8302:	48 89 c1             	mov    %rax,%rcx
    8305:	48 81 c9 00 00 00 08 	or     $0x8000000,%rcx
    830c:	48 85 f7             	test   %rsi,%rdi
    830f:	48 be 00 00 00 00 00 	movabs $0x20000000000,%rsi
    8316:	02 00 00 
    8319:	48 0f 45 c1          	cmovne %rcx,%rax
    831d:	48 89 c1             	mov    %rax,%rcx
    8320:	48 81 c9 00 00 00 40 	or     $0x40000000,%rcx
    8327:	48 85 f7             	test   %rsi,%rdi
    832a:	48 be 00 00 00 00 00 	movabs $0x10000000000,%rsi
    8331:	01 00 00 
    8334:	48 0f 45 c1          	cmovne %rcx,%rax
    8338:	48 89 c1             	mov    %rax,%rcx
    833b:	48 81 c9 00 00 00 20 	or     $0x20000000,%rcx
    8342:	48 85 f7             	test   %rsi,%rdi
    8345:	48 0f 45 c1          	cmovne %rcx,%rax
    8349:	f7 c7 00 00 00 40    	test   $0x40000000,%edi
    834f:	74 03                	je     8354 <init_ipp_cpuid+0x1f4>
    8351:	48 09 d0             	or     %rdx,%rax
    8354:	48 bf 00 00 00 00 00 	movabs $0x8000000000000000,%rdi
    835b:	00 00 80 
    835e:	48 09 c7             	or     %rax,%rdi
    8361:	e8 b2 8c ff ff       	callq  1018 <ippcpSetCpuFeatures@plt>
    8366:	85 c0                	test   %eax,%eax
    8368:	75 0e                	jne    8378 <init_ipp_cpuid+0x218>
    836a:	31 c0                	xor    %eax,%eax
    836c:	48 83 c4 08          	add    $0x8,%rsp
    8370:	c3                   	retq   
    8371:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    8378:	b8 02 00 00 00       	mov    $0x2,%eax
    837d:	48 83 c4 08          	add    $0x8,%rsp
    8381:	c3                   	retq   
    8382:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8388:	31 c0                	xor    %eax,%eax
    838a:	c3                   	retq   
    838b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8390:	b8 02 00 00 00       	mov    $0x2,%eax
    8395:	c3                   	retq   
    8396:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    839d:	00 00 00 

00000000000083a0 <sgx_create_report>:
    83a0:	4c 8d 54 24 08       	lea    0x8(%rsp),%r10
    83a5:	48 81 e4 00 fe ff ff 	and    $0xfffffffffffffe00,%rsp
    83ac:	41 ff 72 f8          	pushq  -0x8(%r10)
    83b0:	55                   	push   %rbp
    83b1:	48 89 e5             	mov    %rsp,%rbp
    83b4:	41 57                	push   %r15
    83b6:	41 56                	push   %r14
    83b8:	41 55                	push   %r13
    83ba:	41 54                	push   %r12
    83bc:	4c 8d b5 10 fa ff ff 	lea    -0x5f0(%rbp),%r14
    83c3:	41 52                	push   %r10
    83c5:	53                   	push   %rbx
    83c6:	49 89 fd             	mov    %rdi,%r13
    83c9:	49 89 f7             	mov    %rsi,%r15
    83cc:	49 89 d4             	mov    %rdx,%r12
    83cf:	31 f6                	xor    %esi,%esi
    83d1:	48 81 ec c0 09 00 00 	sub    $0x9c0,%rsp
    83d8:	ba 40 00 00 00       	mov    $0x40,%edx
    83dd:	48 8d 9d 10 f8 ff ff 	lea    -0x7f0(%rbp),%rbx
    83e4:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    83eb:	00 00 
    83ed:	48 89 85 08 fe ff ff 	mov    %rax,-0x1f8(%rbp)
    83f4:	31 c0                	xor    %eax,%eax
    83f6:	48 8d 85 90 f7 ff ff 	lea    -0x870(%rbp),%rax
    83fd:	48 89 c7             	mov    %rax,%rdi
    8400:	48 89 85 88 f7 ff ff 	mov    %rax,-0x878(%rbp)
    8407:	e8 59 f8 ff ff       	callq  7c65 <__memset>
    840c:	31 f6                	xor    %esi,%esi
    840e:	ba 00 02 00 00       	mov    $0x200,%edx
    8413:	4c 89 f7             	mov    %r14,%rdi
    8416:	e8 4a f8 ff ff       	callq  7c65 <__memset>
    841b:	31 f6                	xor    %esi,%esi
    841d:	ba b0 01 00 00       	mov    $0x1b0,%edx
    8422:	48 89 df             	mov    %rbx,%rdi
    8425:	e8 3b f8 ff ff       	callq  7c65 <__memset>
    842a:	4d 85 ed             	test   %r13,%r13
    842d:	74 23                	je     8452 <sgx_create_report+0xb2>
    842f:	be 00 02 00 00       	mov    $0x200,%esi
    8434:	4c 89 ef             	mov    %r13,%rdi
    8437:	e8 34 8f ff ff       	callq  1370 <sgx_is_within_enclave>
    843c:	85 c0                	test   %eax,%eax
    843e:	0f 84 ac 00 00 00    	je     84f0 <sgx_create_report+0x150>
    8444:	b9 40 00 00 00       	mov    $0x40,%ecx
    8449:	4c 89 f7             	mov    %r14,%rdi
    844c:	4c 89 ee             	mov    %r13,%rsi
    844f:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)
    8452:	4d 85 ff             	test   %r15,%r15
    8455:	74 48                	je     849f <sgx_create_report+0xff>
    8457:	be 40 00 00 00       	mov    $0x40,%esi
    845c:	4c 89 ff             	mov    %r15,%rdi
    845f:	e8 0c 8f ff ff       	callq  1370 <sgx_is_within_enclave>
    8464:	85 c0                	test   %eax,%eax
    8466:	0f 84 84 00 00 00    	je     84f0 <sgx_create_report+0x150>
    846c:	f3 41 0f 6f 07       	movdqu (%r15),%xmm0
    8471:	0f 29 85 90 f7 ff ff 	movaps %xmm0,-0x870(%rbp)
    8478:	f3 41 0f 6f 47 10    	movdqu 0x10(%r15),%xmm0
    847e:	0f 29 85 a0 f7 ff ff 	movaps %xmm0,-0x860(%rbp)
    8485:	f3 41 0f 6f 47 20    	movdqu 0x20(%r15),%xmm0
    848b:	0f 29 85 b0 f7 ff ff 	movaps %xmm0,-0x850(%rbp)
    8492:	f3 41 0f 6f 47 30    	movdqu 0x30(%r15),%xmm0
    8498:	0f 29 85 c0 f7 ff ff 	movaps %xmm0,-0x840(%rbp)
    849f:	4d 85 e4             	test   %r12,%r12
    84a2:	74 4c                	je     84f0 <sgx_create_report+0x150>
    84a4:	be b0 01 00 00       	mov    $0x1b0,%esi
    84a9:	4c 89 e7             	mov    %r12,%rdi
    84ac:	e8 bf 8e ff ff       	callq  1370 <sgx_is_within_enclave>
    84b1:	85 c0                	test   %eax,%eax
    84b3:	74 3b                	je     84f0 <sgx_create_report+0x150>
    84b5:	48 8b b5 88 f7 ff ff 	mov    -0x878(%rbp),%rsi
    84bc:	48 89 da             	mov    %rbx,%rdx
    84bf:	4c 89 f7             	mov    %r14,%rdi
    84c2:	e8 a0 09 00 00       	callq  8e67 <do_ereport>
    84c7:	89 c2                	mov    %eax,%edx
    84c9:	b8 01 00 00 00       	mov    $0x1,%eax
    84ce:	85 d2                	test   %edx,%edx
    84d0:	75 23                	jne    84f5 <sgx_create_report+0x155>
    84d2:	31 c0                	xor    %eax,%eax
    84d4:	0f 1f 40 00          	nopl   0x0(%rax)
    84d8:	48 8b 14 c3          	mov    (%rbx,%rax,8),%rdx
    84dc:	49 89 14 c4          	mov    %rdx,(%r12,%rax,8)
    84e0:	48 83 c0 01          	add    $0x1,%rax
    84e4:	48 83 f8 36          	cmp    $0x36,%rax
    84e8:	75 ee                	jne    84d8 <sgx_create_report+0x138>
    84ea:	31 c0                	xor    %eax,%eax
    84ec:	eb 07                	jmp    84f5 <sgx_create_report+0x155>
    84ee:	66 90                	xchg   %ax,%ax
    84f0:	b8 02 00 00 00       	mov    $0x2,%eax
    84f5:	48 8b 8d 08 fe ff ff 	mov    -0x1f8(%rbp),%rcx
    84fc:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    8503:	00 00 
    8505:	75 18                	jne    851f <sgx_create_report+0x17f>
    8507:	48 81 c4 c0 09 00 00 	add    $0x9c0,%rsp
    850e:	5b                   	pop    %rbx
    850f:	41 5a                	pop    %r10
    8511:	41 5c                	pop    %r12
    8513:	41 5d                	pop    %r13
    8515:	41 5e                	pop    %r14
    8517:	41 5f                	pop    %r15
    8519:	5d                   	pop    %rbp
    851a:	49 8d 62 f8          	lea    -0x8(%r10),%rsp
    851e:	c3                   	retq   
    851f:	e8 cc bf ff ff       	callq  44f0 <__stack_chk_fail>
    8524:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    852b:	00 00 00 
    852e:	66 90                	xchg   %ax,%ax

0000000000008530 <sgx_self_report>:
    8530:	48 83 3d 38 50 00 00 	cmpq   $0x0,0x5038(%rip)        # d570 <_ZZ15sgx_self_reportE7_report+0x30>
    8537:	00 
    8538:	74 0e                	je     8548 <sgx_self_report+0x18>
    853a:	48 8d 05 ff 4f 00 00 	lea    0x4fff(%rip),%rax        # d540 <_ZZ15sgx_self_reportE7_report>
    8541:	c3                   	retq   
    8542:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8548:	48 8d 15 f1 4f 00 00 	lea    0x4ff1(%rip),%rdx        # d540 <_ZZ15sgx_self_reportE7_report>
    854f:	48 83 ec 08          	sub    $0x8,%rsp
    8553:	31 f6                	xor    %esi,%esi
    8555:	31 ff                	xor    %edi,%edi
    8557:	e8 44 fe ff ff       	callq  83a0 <sgx_create_report>
    855c:	48 8d 05 dd 4f 00 00 	lea    0x4fdd(%rip),%rax        # d540 <_ZZ15sgx_self_reportE7_report>
    8563:	48 83 c4 08          	add    $0x8,%rsp
    8567:	c3                   	retq   

Disassembly of section .nipx:

0000000000008570 <init_enclave>:
    8570:	41 54                	push   %r12
    8572:	55                   	push   %rbp
    8573:	53                   	push   %rbx
    8574:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
    857b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    8582:	00 00 
    8584:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    858b:	00 
    858c:	31 c0                	xor    %eax,%eax
    858e:	48 85 ff             	test   %rdi,%rdi
    8591:	0f 84 91 02 00 00    	je     8828 <init_enclave+0x2b8>
    8597:	48 85 f6             	test   %rsi,%rsi
    859a:	48 89 f3             	mov    %rsi,%rbx
    859d:	0f 84 85 02 00 00    	je     8828 <init_enclave+0x2b8>
    85a3:	48 83 3d 25 4a 00 00 	cmpq   $0x0,0x4a25(%rip)        # cfd0 <_Z9pcl_entryPvS_>
    85aa:	00 
    85ab:	48 89 fd             	mov    %rdi,%rbp
    85ae:	74 20                	je     85d0 <init_enclave+0x60>
    85b0:	0f ae e8             	lfence 
    85b3:	48 8b b6 94 00 00 00 	mov    0x94(%rsi),%rsi
    85ba:	48 85 f6             	test   %rsi,%rsi
    85bd:	0f 84 65 02 00 00    	je     8828 <init_enclave+0x2b8>
    85c3:	e8 48 8a ff ff       	callq  1010 <_Z9pcl_entryPvS_@plt>
    85c8:	85 c0                	test   %eax,%eax
    85ca:	0f 85 58 02 00 00    	jne    8828 <init_enclave+0x2b8>
    85d0:	48 89 ef             	mov    %rbp,%rdi
    85d3:	e8 88 b5 ff ff       	callq  3b60 <relocate_enclave>
    85d8:	85 c0                	test   %eax,%eax
    85da:	89 c5                	mov    %eax,%ebp
    85dc:	0f 85 46 02 00 00    	jne    8828 <init_enclave+0x2b8>
    85e2:	be b0 00 00 00       	mov    $0xb0,%esi
    85e7:	48 89 df             	mov    %rbx,%rdi
    85ea:	e8 d1 8d ff ff       	callq  13c0 <sgx_is_outside_enclave>
    85ef:	85 c0                	test   %eax,%eax
    85f1:	0f 84 31 02 00 00    	je     8828 <init_enclave+0x2b8>
    85f7:	0f ae e8             	lfence 
    85fa:	f3 0f 6f 03          	movdqu (%rbx),%xmm0
    85fe:	0f 29 04 24          	movaps %xmm0,(%rsp)
    8602:	f3 0f 6f 43 10       	movdqu 0x10(%rbx),%xmm0
    8607:	0f 29 44 24 10       	movaps %xmm0,0x10(%rsp)
    860c:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
    8611:	f3 0f 6f 43 20       	movdqu 0x20(%rbx),%xmm0
    8616:	0f 29 44 24 20       	movaps %xmm0,0x20(%rsp)
    861b:	f3 0f 6f 43 30       	movdqu 0x30(%rbx),%xmm0
    8620:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    8625:	f3 0f 6f 43 40       	movdqu 0x40(%rbx),%xmm0
    862a:	0f 29 44 24 40       	movaps %xmm0,0x40(%rsp)
    862f:	f3 0f 6f 43 50       	movdqu 0x50(%rbx),%xmm0
    8634:	0f 29 44 24 50       	movaps %xmm0,0x50(%rsp)
    8639:	f3 0f 6f 43 60       	movdqu 0x60(%rbx),%xmm0
    863e:	0f 29 44 24 60       	movaps %xmm0,0x60(%rsp)
    8643:	f3 0f 6f 43 70       	movdqu 0x70(%rbx),%xmm0
    8648:	0f 29 44 24 70       	movaps %xmm0,0x70(%rsp)
    864d:	f3 0f 6f 83 80 00 00 	movdqu 0x80(%rbx),%xmm0
    8654:	00 
    8655:	0f 29 84 24 80 00 00 	movaps %xmm0,0x80(%rsp)
    865c:	00 
    865d:	f3 0f 6f 83 90 00 00 	movdqu 0x90(%rbx),%xmm0
    8664:	00 
    8665:	0f 29 84 24 90 00 00 	movaps %xmm0,0x90(%rsp)
    866c:	00 
    866d:	f3 0f 6f 83 a0 00 00 	movdqu 0xa0(%rbx),%xmm0
    8674:	00 
    8675:	0f 29 84 24 a0 00 00 	movaps %xmm0,0xa0(%rsp)
    867c:	00 
    867d:	0f 85 3d 01 00 00    	jne    87c0 <init_enclave+0x250>
    8683:	ba 14 00 00 00       	mov    $0x14,%edx
    8688:	b9 9c 00 00 00       	mov    $0x9c,%ecx
    868d:	48 8d 34 0c          	lea    (%rsp,%rcx,1),%rsi
    8691:	31 c0                	xor    %eax,%eax
    8693:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8698:	c6 04 06 00          	movb   $0x0,(%rsi,%rax,1)
    869c:	48 83 c0 01          	add    $0x1,%rax
    86a0:	48 39 d0             	cmp    %rdx,%rax
    86a3:	72 f3                	jb     8698 <init_enclave+0x128>
    86a5:	8b 84 24 ac 00 00 00 	mov    0xac(%rsp),%eax
    86ac:	89 05 6e 47 00 00    	mov    %eax,0x476e(%rip)        # ce20 <g_cpu_core_num>
    86b2:	8b 44 24 08          	mov    0x8(%rsp),%eax
    86b6:	83 f8 00             	cmp    $0x0,%eax
    86b9:	89 05 65 47 00 00    	mov    %eax,0x4765(%rip)        # ce24 <g_sdk_version>
    86bf:	0f 85 2b 01 00 00    	jne    87f0 <init_enclave+0x280>
    86c5:	c7 05 59 47 00 00 00 	movl   $0x0,0x4759(%rip)        # ce28 <EDMM_supported>
    86cc:	00 00 00 
    86cf:	e8 3c a9 ff ff       	callq  3010 <get_heap_min_size>
    86d4:	49 89 c4             	mov    %rax,%r12
    86d7:	e8 d4 a8 ff ff       	callq  2fb0 <get_heap_size>
    86dc:	48 89 c3             	mov    %rax,%rbx
    86df:	e8 ac a8 ff ff       	callq  2f90 <get_heap_base>
    86e4:	89 e9                	mov    %ebp,%ecx
    86e6:	4c 89 e2             	mov    %r12,%rdx
    86e9:	48 89 de             	mov    %rbx,%rsi
    86ec:	48 89 c7             	mov    %rax,%rdi
    86ef:	e8 1c f6 ff ff       	callq  7d10 <heap_init>
    86f4:	85 c0                	test   %eax,%eax
    86f6:	0f 85 2c 01 00 00    	jne    8828 <init_enclave+0x2b8>
    86fc:	e8 cf b1 ff ff       	callq  38d0 <get_xfeature_state>
    8701:	48 8b 3c 24          	mov    (%rsp),%rdi
    8705:	48 81 e7 ff e7 ff e1 	and    $0xffffffffe1ffe7ff,%rdi
    870c:	f6 44 24 13 40       	testb  $0x40,0x13(%rsp)
    8711:	74 08                	je     871b <init_enclave+0x1ab>
    8713:	48 8b bc 24 a4 00 00 	mov    0xa4(%rsp),%rdi
    871a:	00 
    871b:	83 3d 02 47 00 00 01 	cmpl   $0x1,0x4702(%rip)        # ce24 <g_sdk_version>
    8722:	7f 0f                	jg     8733 <init_enclave+0x1c3>
    8724:	48 83 bc 24 9c 00 00 	cmpq   $0x0,0x9c(%rsp)
    872b:	00 00 
    872d:	0f 84 dd 00 00 00    	je     8810 <init_enclave+0x2a0>
    8733:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
    8738:	48 89 c2             	mov    %rax,%rdx
    873b:	e8 c0 8a ff ff       	callq  1200 <init_optimized_libs>
    8740:	85 c0                	test   %eax,%eax
    8742:	0f 85 e0 00 00 00    	jne    8828 <init_enclave+0x2b8>
    8748:	e8 c3 a9 ff ff       	callq  3110 <get_rsrv_size>
    874d:	48 85 c0             	test   %rax,%rax
    8750:	74 2b                	je     877d <init_enclave+0x20d>
    8752:	e8 19 aa ff ff       	callq  3170 <get_rsrv_min_size>
    8757:	48 89 c5             	mov    %rax,%rbp
    875a:	e8 b1 a9 ff ff       	callq  3110 <get_rsrv_size>
    875f:	48 89 c3             	mov    %rax,%rbx
    8762:	e8 19 a9 ff ff       	callq  3080 <get_rsrv_base>
    8767:	48 89 ea             	mov    %rbp,%rdx
    876a:	48 89 de             	mov    %rbx,%rsi
    876d:	48 89 c7             	mov    %rax,%rdi
    8770:	e8 7b f9 ff ff       	callq  80f0 <rsrv_mem_init>
    8775:	85 c0                	test   %eax,%eax
    8777:	0f 85 ab 00 00 00    	jne    8828 <init_enclave+0x2b8>
    877d:	48 8d 3d 94 46 00 00 	lea    0x4694(%rip),%rdi        # ce18 <__intel_security_cookie>
    8784:	be 08 00 00 00       	mov    $0x8,%esi
    8789:	e8 c2 8d ff ff       	callq  1550 <sgx_read_rand>
    878e:	85 c0                	test   %eax,%eax
    8790:	0f 95 c0             	setne  %al
    8793:	0f b6 c0             	movzbl %al,%eax
    8796:	f7 d8                	neg    %eax
    8798:	48 8b 8c 24 b8 00 00 	mov    0xb8(%rsp),%rcx
    879f:	00 
    87a0:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
    87a7:	00 00 
    87a9:	0f 85 83 00 00 00    	jne    8832 <init_enclave+0x2c2>
    87af:	48 81 c4 c0 00 00 00 	add    $0xc0,%rsp
    87b6:	5b                   	pop    %rbx
    87b7:	5d                   	pop    %rbp
    87b8:	41 5c                	pop    %r12
    87ba:	c3                   	retq   
    87bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    87c0:	ba b0 00 00 00       	mov    $0xb0,%edx
    87c5:	48 81 bc 24 9c 00 00 	cmpq   $0xb0,0x9c(%rsp)
    87cc:	00 b0 00 00 00 
    87d1:	48 89 d1             	mov    %rdx,%rcx
    87d4:	48 0f 46 8c 24 9c 00 	cmovbe 0x9c(%rsp),%rcx
    87db:	00 00 
    87dd:	48 29 ca             	sub    %rcx,%rdx
    87e0:	0f 85 a7 fe ff ff    	jne    868d <init_enclave+0x11d>
    87e6:	e9 ba fe ff ff       	jmpq   86a5 <init_enclave+0x135>
    87eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    87f0:	7e 36                	jle    8828 <init_enclave+0x2b8>
    87f2:	48 8d 7c 24 0c       	lea    0xc(%rsp),%rdi
    87f7:	31 f6                	xor    %esi,%esi
    87f9:	e8 02 aa ff ff       	callq  3200 <feature_supported>
    87fe:	89 c5                	mov    %eax,%ebp
    8800:	89 05 22 46 00 00    	mov    %eax,0x4622(%rip)        # ce28 <EDMM_supported>
    8806:	e9 c4 fe ff ff       	jmpq   86cf <init_enclave+0x15f>
    880b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    8810:	31 f6                	xor    %esi,%esi
    8812:	48 89 c2             	mov    %rax,%rdx
    8815:	e8 e6 89 ff ff       	callq  1200 <init_optimized_libs>
    881a:	85 c0                	test   %eax,%eax
    881c:	0f 84 26 ff ff ff    	je     8748 <init_enclave+0x1d8>
    8822:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    8828:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    882d:	e9 66 ff ff ff       	jmpq   8798 <init_enclave+0x228>
    8832:	e8 b9 bc ff ff       	callq  44f0 <__stack_chk_fail>
    8837:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    883e:	00 00 

0000000000008840 <do_init_enclave>:
    8840:	41 54                	push   %r12
    8842:	55                   	push   %rbp
    8843:	49 89 f4             	mov    %rsi,%r12
    8846:	53                   	push   %rbx
    8847:	48 89 fd             	mov    %rdi,%rbp
    884a:	e8 17 03 00 00       	callq  8b66 <get_enclave_base>
    884f:	48 89 c3             	mov    %rax,%rbx
    8852:	e8 2e 03 00 00       	callq  8b85 <lock_enclave>
    8857:	85 c0                	test   %eax,%eax
    8859:	74 0d                	je     8868 <do_init_enclave+0x28>
    885b:	b8 01 00 00 00       	mov    $0x1,%eax
    8860:	5b                   	pop    %rbx
    8861:	5d                   	pop    %rbp
    8862:	41 5c                	pop    %r12
    8864:	c3                   	retq   
    8865:	0f 1f 00             	nopl   (%rax)
    8868:	48 89 ee             	mov    %rbp,%rsi
    886b:	48 89 df             	mov    %rbx,%rdi
    886e:	e8 fd fc ff ff       	callq  8570 <init_enclave>
    8873:	85 c0                	test   %eax,%eax
    8875:	75 e4                	jne    885b <do_init_enclave+0x1b>
    8877:	be 01 00 00 00       	mov    $0x1,%esi
    887c:	4c 89 e7             	mov    %r12,%rdi
    887f:	e8 4c 9e ff ff       	callq  26d0 <do_init_thread>
    8884:	85 c0                	test   %eax,%eax
    8886:	75 d3                	jne    885b <do_init_enclave+0x1b>
    8888:	8b 05 9a 45 00 00    	mov    0x459a(%rip),%eax        # ce28 <EDMM_supported>
    888e:	48 8d 2d 6b 08 00 00 	lea    0x86b(%rip),%rbp        # 9100 <g_global_data>
    8895:	85 c0                	test   %eax,%eax
    8897:	74 57                	je     88f0 <do_init_enclave+0xb0>
    8899:	8b b5 30 01 00 00    	mov    0x130(%rbp),%esi
    889f:	48 8d bd 38 01 00 00 	lea    0x138(%rbp),%rdi
    88a6:	31 d2                	xor    %edx,%edx
    88a8:	48 c1 e6 05          	shl    $0x5,%rsi
    88ac:	48 01 fe             	add    %rdi,%rsi
    88af:	e8 1c 95 ff ff       	callq  1dd0 <_Z18accept_post_removePVK9_layout_tS1_m>
    88b4:	85 c0                	test   %eax,%eax
    88b6:	75 a3                	jne    885b <do_init_enclave+0x1b>
    88b8:	e8 53 a7 ff ff       	callq  3010 <get_heap_min_size>
    88bd:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    88c1:	31 d2                	xor    %edx,%edx
    88c3:	48 89 c1             	mov    %rax,%rcx
    88c6:	48 89 c6             	mov    %rax,%rsi
    88c9:	48 01 df             	add    %rbx,%rdi
    88cc:	e8 ef f3 ff ff       	callq  7cc0 <memset_s>
    88d1:	48 8d 05 80 45 00 00 	lea    0x4580(%rip),%rax        # ce58 <rsrv_mem_min_size>
    88d8:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    88dc:	31 d2                	xor    %edx,%edx
    88de:	48 8b 30             	mov    (%rax),%rsi
    88e1:	48 01 df             	add    %rbx,%rdi
    88e4:	48 89 f1             	mov    %rsi,%rcx
    88e7:	e8 d4 f3 ff ff       	callq  7cc0 <memset_s>
    88ec:	eb 2e                	jmp    891c <do_init_enclave+0xdc>
    88ee:	66 90                	xchg   %ax,%ax
    88f0:	48 8b 4d 18          	mov    0x18(%rbp),%rcx
    88f4:	48 8b 75 18          	mov    0x18(%rbp),%rsi
    88f8:	31 d2                	xor    %edx,%edx
    88fa:	48 8b 7d 10          	mov    0x10(%rbp),%rdi
    88fe:	48 01 df             	add    %rbx,%rdi
    8901:	e8 ba f3 ff ff       	callq  7cc0 <memset_s>
    8906:	48 8b 4d 28          	mov    0x28(%rbp),%rcx
    890a:	48 8b 75 28          	mov    0x28(%rbp),%rsi
    890e:	31 d2                	xor    %edx,%edx
    8910:	48 8b 7d 20          	mov    0x20(%rbp),%rdi
    8914:	48 01 df             	add    %rbx,%rdi
    8917:	e8 a4 f3 ff ff       	callq  7cc0 <memset_s>
    891c:	c7 05 7a 47 00 00 02 	movl   $0x2,0x477a(%rip)        # d0a0 <g_enclave_state>
    8923:	00 00 00 
    8926:	31 c0                	xor    %eax,%eax
    8928:	e9 33 ff ff ff       	jmpq   8860 <do_init_enclave+0x20>
    892d:	0f 1f 00             	nopl   (%rax)

0000000000008930 <sgx_is_enclave_crashed>:
    8930:	48 83 ec 08          	sub    $0x8,%rsp
    8934:	e8 35 02 00 00       	callq  8b6e <get_enclave_state>
    8939:	83 f8 03             	cmp    $0x3,%eax
    893c:	0f 94 c0             	sete   %al
    893f:	48 83 c4 08          	add    $0x8,%rsp
    8943:	0f b6 c0             	movzbl %al,%eax
    8946:	c3                   	retq   
    8947:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    894e:	00 00 

0000000000008950 <enter_enclave>:
    8950:	41 55                	push   %r13
    8952:	41 54                	push   %r12
    8954:	49 89 f5             	mov    %rsi,%r13
    8957:	55                   	push   %rbp
    8958:	53                   	push   %rbx
    8959:	49 89 d4             	mov    %rdx,%r12
    895c:	89 fb                	mov    %edi,%ebx
    895e:	89 cd                	mov    %ecx,%ebp
    8960:	48 83 ec 18          	sub    $0x18,%rsp
    8964:	e8 c7 ff ff ff       	callq  8930 <sgx_is_enclave_crashed>
    8969:	85 c0                	test   %eax,%eax
    896b:	75 73                	jne    89e0 <enter_enclave+0x90>
    896d:	83 fb ff             	cmp    $0xffffffff,%ebx
    8970:	75 26                	jne    8998 <enter_enclave+0x48>
    8972:	85 ed                	test   %ebp,%ebp
    8974:	0f 84 f6 00 00 00    	je     8a70 <enter_enclave+0x120>
    897a:	bf 03 00 00 00       	mov    $0x3,%edi
    897f:	e8 f7 01 00 00       	callq  8b7b <set_enclave_state>
    8984:	b8 01 00 00 00       	mov    $0x1,%eax
    8989:	48 83 c4 18          	add    $0x18,%rsp
    898d:	5b                   	pop    %rbx
    898e:	5d                   	pop    %rbp
    898f:	41 5c                	pop    %r12
    8991:	41 5d                	pop    %r13
    8993:	c3                   	retq   
    8994:	0f 1f 40 00          	nopl   0x0(%rax)
    8998:	e8 d1 01 00 00       	callq  8b6e <get_enclave_state>
    899d:	83 f8 02             	cmp    $0x2,%eax
    89a0:	75 d8                	jne    897a <enter_enclave+0x2a>
    89a2:	85 ed                	test   %ebp,%ebp
    89a4:	0f 85 ff 00 00 00    	jne    8aa9 <enter_enclave+0x159>
    89aa:	85 db                	test   %ebx,%ebx
    89ac:	79 42                	jns    89f0 <enter_enclave+0xa0>
    89ae:	83 fb fa             	cmp    $0xfffffffa,%ebx
    89b1:	74 3d                	je     89f0 <enter_enclave+0xa0>
    89b3:	83 fb fe             	cmp    $0xfffffffe,%ebx
    89b6:	0f 84 c4 00 00 00    	je     8a80 <enter_enclave+0x130>
    89bc:	83 fb fc             	cmp    $0xfffffffc,%ebx
    89bf:	0f 84 cb 00 00 00    	je     8a90 <enter_enclave+0x140>
    89c5:	83 fb fb             	cmp    $0xfffffffb,%ebx
    89c8:	75 b0                	jne    897a <enter_enclave+0x2a>
    89ca:	4c 89 e7             	mov    %r12,%rdi
    89cd:	e8 5e a1 ff ff       	callq  2b30 <do_uninit_enclave>
    89d2:	89 c3                	mov    %eax,%ebx
    89d4:	eb 41                	jmp    8a17 <enter_enclave+0xc7>
    89d6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
    89dd:	00 00 00 
    89e0:	48 83 c4 18          	add    $0x18,%rsp
    89e4:	b8 06 10 00 00       	mov    $0x1006,%eax
    89e9:	5b                   	pop    %rbx
    89ea:	5d                   	pop    %rbp
    89eb:	41 5c                	pop    %r12
    89ed:	41 5d                	pop    %r13
    89ef:	c3                   	retq   
    89f0:	e8 ac 01 00 00       	callq  8ba1 <get_thread_data>
    89f5:	48 85 c0             	test   %rax,%rax
    89f8:	0f 84 a2 00 00 00    	je     8aa0 <enter_enclave+0x150>
    89fe:	48 8b 48 08          	mov    0x8(%rax),%rcx
    8a02:	48 39 48 10          	cmp    %rcx,0x10(%rax)
    8a06:	74 28                	je     8a30 <enter_enclave+0xe0>
    8a08:	89 df                	mov    %ebx,%edi
    8a0a:	4c 89 e2             	mov    %r12,%rdx
    8a0d:	4c 89 ee             	mov    %r13,%rsi
    8a10:	e8 8b 9e ff ff       	callq  28a0 <do_ecall>
    8a15:	89 c3                	mov    %eax,%ebx
    8a17:	83 fb 01             	cmp    $0x1,%ebx
    8a1a:	89 d8                	mov    %ebx,%eax
    8a1c:	0f 84 58 ff ff ff    	je     897a <enter_enclave+0x2a>
    8a22:	48 83 c4 18          	add    $0x18,%rsp
    8a26:	5b                   	pop    %rbx
    8a27:	5d                   	pop    %rbp
    8a28:	41 5c                	pop    %r12
    8a2a:	41 5d                	pop    %r13
    8a2c:	c3                   	retq   
    8a2d:	0f 1f 00             	nopl   (%rax)
    8a30:	48 8d 05 c9 06 00 00 	lea    0x6c9(%rip),%rax        # 9100 <g_global_data>
    8a37:	48 8b 50 38          	mov    0x38(%rax),%rdx
    8a3b:	48 85 d2             	test   %rdx,%rdx
    8a3e:	74 c8                	je     8a08 <enter_enclave+0xb8>
    8a40:	48 8b 68 48          	mov    0x48(%rax),%rbp
    8a44:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    8a49:	be 08 00 00 00       	mov    $0x8,%esi
    8a4e:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    8a55:	00 00 
    8a57:	e8 f4 8a ff ff       	callq  1550 <sgx_read_rand>
    8a5c:	4c 01 e5             	add    %r12,%rbp
    8a5f:	85 c0                	test   %eax,%eax
    8a61:	75 7e                	jne    8ae1 <enter_enclave+0x191>
    8a63:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    8a68:	48 89 45 28          	mov    %rax,0x28(%rbp)
    8a6c:	eb 9a                	jmp    8a08 <enter_enclave+0xb8>
    8a6e:	66 90                	xchg   %ax,%ax
    8a70:	4c 89 e6             	mov    %r12,%rsi
    8a73:	4c 89 ef             	mov    %r13,%rdi
    8a76:	e8 c5 fd ff ff       	callq  8840 <do_init_enclave>
    8a7b:	89 c3                	mov    %eax,%ebx
    8a7d:	eb 98                	jmp    8a17 <enter_enclave+0xc7>
    8a7f:	90                   	nop
    8a80:	4c 89 ef             	mov    %r13,%rdi
    8a83:	e8 a8 a3 ff ff       	callq  2e30 <do_oret>
    8a88:	89 c3                	mov    %eax,%ebx
    8a8a:	eb 8b                	jmp    8a17 <enter_enclave+0xc7>
    8a8c:	0f 1f 40 00          	nopl   0x0(%rax)
    8a90:	4c 89 ef             	mov    %r13,%rdi
    8a93:	e8 a8 9f ff ff       	callq  2a40 <do_ecall_add_thread>
    8a98:	89 c3                	mov    %eax,%ebx
    8a9a:	e9 78 ff ff ff       	jmpq   8a17 <enter_enclave+0xc7>
    8a9f:	90                   	nop
    8aa0:	48 8d 05 59 06 00 00 	lea    0x659(%rip),%rax        # 9100 <g_global_data>
    8aa7:	eb 97                	jmp    8a40 <enter_enclave+0xf0>
    8aa9:	83 ed 01             	sub    $0x1,%ebp
    8aac:	0f 85 c8 fe ff ff    	jne    897a <enter_enclave+0x2a>
    8ab2:	83 fb fd             	cmp    $0xfffffffd,%ebx
    8ab5:	0f 85 bf fe ff ff    	jne    897a <enter_enclave+0x2a>
    8abb:	4c 89 e7             	mov    %r12,%rdi
    8abe:	e8 8d ab ff ff       	callq  3650 <trts_handle_exception>
    8ac3:	4c 89 e7             	mov    %r12,%rdi
    8ac6:	89 c3                	mov    %eax,%ebx
    8ac8:	e8 e3 8b ff ff       	callq  16b0 <check_static_stack_canary>
    8acd:	89 c2                	mov    %eax,%edx
    8acf:	b8 09 10 00 00       	mov    $0x1009,%eax
    8ad4:	85 d2                	test   %edx,%edx
    8ad6:	0f 85 ad fe ff ff    	jne    8989 <enter_enclave+0x39>
    8adc:	e9 36 ff ff ff       	jmpq   8a17 <enter_enclave+0xc7>
    8ae1:	e8 ea 03 00 00       	callq  8ed0 <abort>

0000000000008ae6 <restore_xregs>:
    8ae6:	48 89 f9             	mov    %rdi,%rcx
    8ae9:	48 8d 05 b4 45 00 00 	lea    0x45b4(%rip),%rax        # d0a4 <g_xsave_enabled>
    8af0:	8b 00                	mov    (%rax),%eax
    8af2:	83 f8 00             	cmp    $0x0,%eax
    8af5:	74 16                	je     8b0d <restore_xregs+0x27>
    8af7:	48 31 c0             	xor    %rax,%rax
    8afa:	48 31 d2             	xor    %rdx,%rdx
    8afd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8b02:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    8b07:	48 0f ae 29          	xrstor64 (%rcx)
    8b0b:	eb 04                	jmp    8b11 <restore_xregs+0x2b>
    8b0d:	48 0f ae 09          	fxrstor64 (%rcx)
    8b11:	c3                   	retq   

0000000000008b12 <save_xregs>:
    8b12:	48 89 f9             	mov    %rdi,%rcx
    8b15:	48 8d 05 88 45 00 00 	lea    0x4588(%rip),%rax        # d0a4 <g_xsave_enabled>
    8b1c:	9b                   	fwait
    8b1d:	8b 00                	mov    (%rax),%eax
    8b1f:	83 f8 00             	cmp    $0x0,%eax
    8b22:	74 16                	je     8b3a <save_xregs+0x28>
    8b24:	48 31 c0             	xor    %rax,%rax
    8b27:	48 31 d2             	xor    %rdx,%rdx
    8b2a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    8b2f:	ba ff ff ff ff       	mov    $0xffffffff,%edx
    8b34:	48 0f c7 21          	xsavec64 (%rcx)
    8b38:	eb 04                	jmp    8b3e <save_xregs+0x2c>
    8b3a:	48 0f ae 01          	fxsave64 (%rcx)
    8b3e:	c3                   	retq   

0000000000008b3f <__x86_return_thunk>:
    8b3f:	c3                   	retq   

0000000000008b40 <__x86_indirect_thunk_rax>:
    8b40:	ff e0                	jmpq   *%rax

0000000000008b42 <__x86_indirect_thunk_rbx>:
    8b42:	ff e3                	jmpq   *%rbx

0000000000008b44 <__x86_indirect_thunk_rcx>:
    8b44:	ff e1                	jmpq   *%rcx

0000000000008b46 <__x86_indirect_thunk_rdx>:
    8b46:	ff e2                	jmpq   *%rdx

0000000000008b48 <__x86_indirect_thunk_rbp>:
    8b48:	ff e5                	jmpq   *%rbp

0000000000008b4a <__x86_indirect_thunk_rsi>:
    8b4a:	ff e6                	jmpq   *%rsi

0000000000008b4c <__x86_indirect_thunk_rdi>:
    8b4c:	ff e7                	jmpq   *%rdi

0000000000008b4e <__x86_indirect_thunk_r8>:
    8b4e:	41 ff e0             	jmpq   *%r8

0000000000008b51 <__x86_indirect_thunk_r9>:
    8b51:	41 ff e1             	jmpq   *%r9

0000000000008b54 <__x86_indirect_thunk_r10>:
    8b54:	41 ff e2             	jmpq   *%r10

0000000000008b57 <__x86_indirect_thunk_r11>:
    8b57:	41 ff e3             	jmpq   *%r11

0000000000008b5a <__x86_indirect_thunk_r12>:
    8b5a:	41 ff e4             	jmpq   *%r12

0000000000008b5d <__x86_indirect_thunk_r13>:
    8b5d:	41 ff e5             	jmpq   *%r13

0000000000008b60 <__x86_indirect_thunk_r14>:
    8b60:	41 ff e6             	jmpq   *%r14

0000000000008b63 <__x86_indirect_thunk_r15>:
    8b63:	41 ff e7             	jmpq   *%r15

0000000000008b66 <get_enclave_base>:
    8b66:	48 8d 05 93 74 ff ff 	lea    -0x8b6d(%rip),%rax        # 0 <__ImageBase>
    8b6d:	c3                   	retq   

0000000000008b6e <get_enclave_state>:
    8b6e:	48 8d 0d 2b 45 00 00 	lea    0x452b(%rip),%rcx        # d0a0 <g_enclave_state>
    8b75:	48 31 c0             	xor    %rax,%rax
    8b78:	8b 01                	mov    (%rcx),%eax
    8b7a:	c3                   	retq   

0000000000008b7b <set_enclave_state>:
    8b7b:	48 8d 05 1e 45 00 00 	lea    0x451e(%rip),%rax        # d0a0 <g_enclave_state>
    8b82:	89 38                	mov    %edi,(%rax)
    8b84:	c3                   	retq   

0000000000008b85 <lock_enclave>:
    8b85:	48 8d 15 14 45 00 00 	lea    0x4514(%rip),%rdx        # d0a0 <g_enclave_state>
    8b8c:	48 31 c0             	xor    %rax,%rax
    8b8f:	b8 00 00 00 00       	mov    $0x0,%eax
    8b94:	48 31 c9             	xor    %rcx,%rcx
    8b97:	b9 01 00 00 00       	mov    $0x1,%ecx
    8b9c:	f0 0f b1 0a          	lock cmpxchg %ecx,(%rdx)
    8ba0:	c3                   	retq   

0000000000008ba1 <get_thread_data>:
    8ba1:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
    8ba8:	00 00 
    8baa:	c3                   	retq   

0000000000008bab <get_stack_guard>:
    8bab:	65 48 8b 04 25 28 00 	mov    %gs:0x28,%rax
    8bb2:	00 00 
    8bb4:	c3                   	retq   

0000000000008bb5 <enclave_entry>:
    8bb5:	48 31 d2             	xor    %rdx,%rdx
    8bb8:	48 01 d2             	add    %rdx,%rdx
    8bbb:	fc                   	cld    
    8bbc:	4d 31 c0             	xor    %r8,%r8
    8bbf:	4d 31 c9             	xor    %r9,%r9
    8bc2:	4d 31 d2             	xor    %r10,%r10
    8bc5:	4d 31 db             	xor    %r11,%r11
    8bc8:	4d 31 e4             	xor    %r12,%r12
    8bcb:	4d 31 ed             	xor    %r13,%r13
    8bce:	4d 31 f6             	xor    %r14,%r14
    8bd1:	4d 31 ff             	xor    %r15,%r15
    8bd4:	48 83 f8 00          	cmp    $0x0,%rax
    8bd8:	0f 85 cb 00 00 00    	jne    8ca9 <enclave_entry+0xf4>
    8bde:	65 48 8b 04 25 08 00 	mov    %gs:0x8,%rax
    8be5:	00 00 
    8be7:	48 83 f8 00          	cmp    $0x0,%rax
    8beb:	75 0f                	jne    8bfc <enclave_entry+0x47>
    8bed:	48 89 d8             	mov    %rbx,%rax
    8bf0:	48 2d 00 00 01 00    	sub    $0x10000,%rax
    8bf6:	48 2d b0 02 00 00    	sub    $0x2b0,%rax
    8bfc:	48 94                	xchg   %rax,%rsp
    8bfe:	51                   	push   %rcx
    8bff:	55                   	push   %rbp
    8c00:	48 89 e5             	mov    %rsp,%rbp
    8c03:	9c                   	pushfq 
    8c04:	48 f7 14 24          	notq   (%rsp)
    8c08:	48 81 0c 24 00 00 04 	orq    $0x40000,(%rsp)
    8c0f:	00 
    8c10:	48 f7 14 24          	notq   (%rsp)
    8c14:	9d                   	popfq  
    8c15:	48 83 ec 30          	sub    $0x30,%rsp
    8c19:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    8c1d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    8c21:	48 89 5d e0          	mov    %rbx,-0x20(%rbp)
    8c25:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)
    8c29:	48 89 7d d0          	mov    %rdi,-0x30(%rbp)
    8c2d:	48 83 ec 20          	sub    $0x20,%rsp
    8c31:	48 8d 3d 48 0b 00 00 	lea    0xb48(%rip),%rdi        # 9780 <SYNTHETIC_STATE>
    8c38:	e8 a9 fe ff ff       	callq  8ae6 <restore_xregs>
    8c3d:	48 83 c4 20          	add    $0x20,%rsp
    8c41:	48 8b 7d d0          	mov    -0x30(%rbp),%rdi
    8c45:	48 8b 75 d8          	mov    -0x28(%rbp),%rsi
    8c49:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
    8c4d:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    8c51:	e8 fa fc ff ff       	callq  8950 <enter_enclave>
    8c56:	48 89 c3             	mov    %rax,%rbx
    8c59:	48 8d 3d 20 0b 00 00 	lea    0xb20(%rip),%rdi        # 9780 <SYNTHETIC_STATE>
    8c60:	e8 81 fe ff ff       	callq  8ae6 <restore_xregs>
    8c65:	48 c7 c7 ff ff ff ff 	mov    $0xffffffffffffffff,%rdi
    8c6c:	48 89 de             	mov    %rbx,%rsi
    8c6f:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    8c73:	48 89 ec             	mov    %rbp,%rsp
    8c76:	5d                   	pop    %rbp
    8c77:	5b                   	pop    %rbx
    8c78:	48 89 d4             	mov    %rdx,%rsp
    8c7b:	48 31 c9             	xor    %rcx,%rcx
    8c7e:	48 31 d2             	xor    %rdx,%rdx
    8c81:	4d 31 c0             	xor    %r8,%r8
    8c84:	4d 31 c9             	xor    %r9,%r9
    8c87:	4d 31 d2             	xor    %r10,%r10
    8c8a:	4d 31 db             	xor    %r11,%r11
    8c8d:	4d 31 e4             	xor    %r12,%r12
    8c90:	4d 31 ed             	xor    %r13,%r13
    8c93:	4d 31 f6             	xor    %r14,%r14
    8c96:	4d 31 ff             	xor    %r15,%r15
    8c99:	48 01 d2             	add    %rdx,%rdx
    8c9c:	fc                   	cld    
    8c9d:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
    8ca4:	0f 01 d7             	enclu  
    8ca7:	0f 0b                	ud2    
    8ca9:	48 89 c2             	mov    %rax,%rdx
    8cac:	48 89 d8             	mov    %rbx,%rax
    8caf:	48 2d 00 00 01 00    	sub    $0x10000,%rax
    8cb5:	e9 42 ff ff ff       	jmpq   8bfc <enclave_entry+0x47>
    8cba:	0f 0b                	ud2    

0000000000008cbc <do_ocall>:
    8cbc:	55                   	push   %rbp
    8cbd:	48 89 e5             	mov    %rsp,%rbp
    8cc0:	48 89 7d 10          	mov    %rdi,0x10(%rbp)
    8cc4:	48 89 75 18          	mov    %rsi,0x18(%rbp)
    8cc8:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
    8ccf:	00 00 
    8cd1:	48 29 c4             	sub    %rax,%rsp
    8cd4:	48 c7 c0 3f 00 00 00 	mov    $0x3f,%rax
    8cdb:	48 f7 d0             	not    %rax
    8cde:	48 21 c4             	and    %rax,%rsp
    8ce1:	48 89 e1             	mov    %rsp,%rcx
    8ce4:	48 81 ec a0 00 00 00 	sub    $0xa0,%rsp
    8ceb:	48 89 8c 24 98 00 00 	mov    %rcx,0x98(%rsp)
    8cf2:	00 
    8cf3:	48 89 5c 24 70       	mov    %rbx,0x70(%rsp)
    8cf8:	48 89 74 24 68       	mov    %rsi,0x68(%rsp)
    8cfd:	48 89 7c 24 60       	mov    %rdi,0x60(%rsp)
    8d02:	48 89 6c 24 58       	mov    %rbp,0x58(%rsp)
    8d07:	4c 89 64 24 50       	mov    %r12,0x50(%rsp)
    8d0c:	4c 89 6c 24 48       	mov    %r13,0x48(%rsp)
    8d11:	4c 89 74 24 40       	mov    %r14,0x40(%rsp)
    8d16:	4c 89 7c 24 38       	mov    %r15,0x38(%rsp)
    8d1b:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
    8d22:	00 
    8d23:	65 48 8b 04 25 38 00 	mov    %gs:0x38,%rax
    8d2a:	00 00 
    8d2c:	48 89 c1             	mov    %rax,%rcx
    8d2f:	48 c1 e9 02          	shr    $0x2,%rcx
    8d33:	48 31 c0             	xor    %rax,%rax
    8d36:	fc                   	cld    
    8d37:	f3 ab                	rep stos %eax,%es:(%rdi)
    8d39:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
    8d40:	00 
    8d41:	48 89 3c 24          	mov    %rdi,(%rsp)
    8d45:	e8 c8 fd ff ff       	callq  8b12 <save_xregs>
    8d4a:	48 8d 3d 2f 0a 00 00 	lea    0xa2f(%rip),%rdi        # 9780 <SYNTHETIC_STATE>
    8d51:	48 89 3c 24          	mov    %rdi,(%rsp)
    8d55:	e8 8c fd ff ff       	callq  8ae6 <restore_xregs>
    8d5a:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    8d5f:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    8d64:	48 c7 c0 44 49 43 4f 	mov    $0x4f434944,%rax
    8d6b:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    8d70:	48 89 7c 24 28       	mov    %rdi,0x28(%rsp)
    8d75:	65 48 8b 04 25 00 00 	mov    %gs:0x0,%rax
    8d7c:	00 00 
    8d7e:	48 89 c3             	mov    %rax,%rbx
    8d81:	48 89 e7             	mov    %rsp,%rdi
    8d84:	e8 57 a0 ff ff       	callq  2de0 <update_ocall_lastsp>
    8d89:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    8d8e:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    8d93:	48 8b 53 20          	mov    0x20(%rbx),%rdx
    8d97:	48 8b aa 98 00 00 00 	mov    0x98(%rdx),%rbp
    8d9e:	48 8b a2 90 00 00 00 	mov    0x90(%rdx),%rsp
    8da5:	48 8b 58 f8          	mov    -0x8(%rax),%rbx
    8da9:	48 c7 c0 04 00 00 00 	mov    $0x4,%rax
    8db0:	48 31 c9             	xor    %rcx,%rcx
    8db3:	48 31 d2             	xor    %rdx,%rdx
    8db6:	4d 31 c0             	xor    %r8,%r8
    8db9:	4d 31 c9             	xor    %r9,%r9
    8dbc:	4d 31 d2             	xor    %r10,%r10
    8dbf:	4d 31 db             	xor    %r11,%r11
    8dc2:	4d 31 e4             	xor    %r12,%r12
    8dc5:	4d 31 ed             	xor    %r13,%r13
    8dc8:	4d 31 f6             	xor    %r14,%r14
    8dcb:	4d 31 ff             	xor    %r15,%r15
    8dce:	48 01 d2             	add    %rdx,%rdx
    8dd1:	fc                   	cld    
    8dd2:	0f 01 d7             	enclu  

0000000000008dd5 <__morestack>:
    8dd5:	55                   	push   %rbp
    8dd6:	48 89 e5             	mov    %rsp,%rbp
    8dd9:	48 83 ec 20          	sub    $0x20,%rsp
    8ddd:	e8 da fe ff ff       	callq  8cbc <do_ocall>
    8de2:	c9                   	leaveq 
    8de3:	c3                   	retq   

0000000000008de4 <asm_oret>:
    8de4:	48 89 e3             	mov    %rsp,%rbx
    8de7:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    8dec:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    8df1:	48 8b 63 08          	mov    0x8(%rbx),%rsp
    8df5:	48 8b bc 24 98 00 00 	mov    0x98(%rsp),%rdi
    8dfc:	00 
    8dfd:	e8 e4 fc ff ff       	callq  8ae6 <restore_xregs>
    8e02:	48 31 c0             	xor    %rax,%rax
    8e05:	48 8b 4c 24 58       	mov    0x58(%rsp),%rcx
    8e0a:	48 29 f9             	sub    %rdi,%rcx
    8e0d:	48 83 e9 08          	sub    $0x8,%rcx
    8e11:	48 c1 e9 02          	shr    $0x2,%rcx
    8e15:	fc                   	cld    
    8e16:	f3 ab                	rep stos %eax,%es:(%rdi)
    8e18:	48 8b 43 10          	mov    0x10(%rbx),%rax
    8e1c:	4c 8b 7c 24 38       	mov    0x38(%rsp),%r15
    8e21:	4c 8b 74 24 40       	mov    0x40(%rsp),%r14
    8e26:	4c 8b 6c 24 48       	mov    0x48(%rsp),%r13
    8e2b:	4c 8b 64 24 50       	mov    0x50(%rsp),%r12
    8e30:	48 8b 6c 24 58       	mov    0x58(%rsp),%rbp
    8e35:	48 8b 7c 24 60       	mov    0x60(%rsp),%rdi
    8e3a:	48 8b 74 24 68       	mov    0x68(%rsp),%rsi
    8e3f:	48 8b 5c 24 70       	mov    0x70(%rsp),%rbx
    8e44:	48 89 ec             	mov    %rbp,%rsp
    8e47:	5d                   	pop    %rbp
    8e48:	c3                   	retq   
    8e49:	0f 0b                	ud2    

0000000000008e4b <do_egetkey>:
    8e4b:	53                   	push   %rbx
    8e4c:	51                   	push   %rcx
    8e4d:	52                   	push   %rdx
    8e4e:	48 89 fb             	mov    %rdi,%rbx
    8e51:	48 89 f1             	mov    %rsi,%rcx
    8e54:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
    8e5b:	0f 01 d7             	enclu  
    8e5e:	74 03                	je     8e63 <do_egetkey+0x18>
    8e60:	48 31 c0             	xor    %rax,%rax
    8e63:	5a                   	pop    %rdx
    8e64:	59                   	pop    %rcx
    8e65:	5b                   	pop    %rbx
    8e66:	c3                   	retq   

0000000000008e67 <do_ereport>:
    8e67:	53                   	push   %rbx
    8e68:	51                   	push   %rcx
    8e69:	52                   	push   %rdx
    8e6a:	48 89 fb             	mov    %rdi,%rbx
    8e6d:	48 89 f1             	mov    %rsi,%rcx
    8e70:	48 c7 c0 00 00 00 00 	mov    $0x0,%rax
    8e77:	f8                   	clc    

0000000000008e78 <Lereport_inst>:
    8e78:	0f 01 d7             	enclu  
    8e7b:	0f 92 c0             	setb   %al
    8e7e:	5a                   	pop    %rdx
    8e7f:	59                   	pop    %rcx
    8e80:	5b                   	pop    %rbx
    8e81:	c3                   	retq   

0000000000008e82 <do_eaccept>:
    8e82:	53                   	push   %rbx
    8e83:	51                   	push   %rcx
    8e84:	52                   	push   %rdx
    8e85:	48 89 fb             	mov    %rdi,%rbx
    8e88:	48 89 f1             	mov    %rsi,%rcx
    8e8b:	b8 05 00 00 00       	mov    $0x5,%eax
    8e90:	0f 01 d7             	enclu  
    8e93:	83 f8 00             	cmp    $0x0,%eax
    8e96:	75 38                	jne    8ed0 <abort>
    8e98:	5a                   	pop    %rdx
    8e99:	59                   	pop    %rcx
    8e9a:	5b                   	pop    %rbx
    8e9b:	c3                   	retq   

0000000000008e9c <do_emodpe>:
    8e9c:	53                   	push   %rbx
    8e9d:	51                   	push   %rcx
    8e9e:	52                   	push   %rdx
    8e9f:	48 89 fb             	mov    %rdi,%rbx
    8ea2:	48 89 f1             	mov    %rsi,%rcx
    8ea5:	b8 06 00 00 00       	mov    $0x6,%eax
    8eaa:	0f 01 d7             	enclu  
    8ead:	5a                   	pop    %rdx
    8eae:	59                   	pop    %rcx
    8eaf:	5b                   	pop    %rbx
    8eb0:	c3                   	retq   

0000000000008eb1 <do_rdrand>:
    8eb1:	b9 0a 00 00 00       	mov    $0xa,%ecx
    8eb6:	0f c7 f0             	rdrand %eax
    8eb9:	72 08                	jb     8ec3 <do_rdrand+0x12>
    8ebb:	ff c9                	dec    %ecx
    8ebd:	75 f7                	jne    8eb6 <do_rdrand+0x5>
    8ebf:	48 31 c0             	xor    %rax,%rax
    8ec2:	c3                   	retq   
    8ec3:	48 89 f9             	mov    %rdi,%rcx
    8ec6:	89 01                	mov    %eax,(%rcx)
    8ec8:	48 c7 c0 01 00 00 00 	mov    $0x1,%rax
    8ecf:	c3                   	retq   

0000000000008ed0 <abort>:
    8ed0:	48 8d 05 c9 41 00 00 	lea    0x41c9(%rip),%rax        # d0a0 <g_enclave_state>
    8ed7:	c7 00 03 00 00 00    	movl   $0x3,(%rax)
    8edd:	0f 0b                	ud2    

0000000000008edf <continue_execution>:
    8edf:	48 89 f9             	mov    %rdi,%rcx
    8ee2:	48 8b 01             	mov    (%rcx),%rax
    8ee5:	50                   	push   %rax
    8ee6:	48 8b 41 08          	mov    0x8(%rcx),%rax
    8eea:	50                   	push   %rax
    8eeb:	48 8b 41 20          	mov    0x20(%rcx),%rax
    8eef:	48 2d 88 00 00 00    	sub    $0x88,%rax
    8ef5:	48 8b 51 10          	mov    0x10(%rcx),%rdx
    8ef9:	48 8b 59 18          	mov    0x18(%rcx),%rbx
    8efd:	48 8b 69 28          	mov    0x28(%rcx),%rbp
    8f01:	48 8b 71 30          	mov    0x30(%rcx),%rsi
    8f05:	48 8b 79 38          	mov    0x38(%rcx),%rdi
    8f09:	4c 8b 41 40          	mov    0x40(%rcx),%r8
    8f0d:	4c 8b 49 48          	mov    0x48(%rcx),%r9
    8f11:	4c 8b 51 50          	mov    0x50(%rcx),%r10
    8f15:	4c 8b 59 58          	mov    0x58(%rcx),%r11
    8f19:	4c 8b 61 60          	mov    0x60(%rcx),%r12
    8f1d:	4c 8b 69 68          	mov    0x68(%rcx),%r13
    8f21:	4c 8b 71 70          	mov    0x70(%rcx),%r14
    8f25:	4c 8b 79 78          	mov    0x78(%rcx),%r15
    8f29:	ff b1 80 00 00 00    	pushq  0x80(%rcx)
    8f2f:	9d                   	popfq  
    8f30:	48 8b 89 88 00 00 00 	mov    0x88(%rcx),%rcx
    8f37:	48 89 08             	mov    %rcx,(%rax)
    8f3a:	59                   	pop    %rcx
    8f3b:	5c                   	pop    %rsp
    8f3c:	48 94                	xchg   %rax,%rsp
    8f3e:	c2 80 00             	retq   $0x80
